{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport UnitSelection from '../views/UnitSelection.vue';\nimport WasteForm from '../views/WasteForm.vue';\nimport RecordsList from '../views/RecordsList.vue';\nimport Login from '../views/Login.vue';\nimport EditRecord from '../views/EditRecord.vue';\nimport UserManagement from '../views/UserManagement.vue';\nimport AdminRecords from '../views/AdminRecords.vue';\nimport auth from '../store/auth';\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/user-management',\n  name: 'UserManagement',\n  component: UserManagement,\n  meta: {\n    requiresAuth: true,\n    requiresManager: true\n  }\n}, {\n  path: '/',\n  name: 'UnitSelection',\n  component: UnitSelection,\n  meta: {\n    requiresAuth: true,\n    requiresSuperAdmin: true\n  }\n}, {\n  path: '/admin-records',\n  name: 'AdminRecords',\n  component: AdminRecords,\n  meta: {\n    requiresAuth: true,\n    requiresSuperAdmin: true\n  }\n}, {\n  path: '/record/:id',\n  name: 'EditRecord',\n  component: EditRecord,\n  props: true,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/unit/:id',\n  name: 'WasteForm',\n  component: WasteForm,\n  props: true,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/records/:unitId',\n  name: 'RecordsList',\n  component: RecordsList,\n  props: true,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  // 检查页面是否需要授权\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const requiresSuperAdmin = to.matched.some(record => record.meta.requiresSuperAdmin);\n  const requiresManager = to.matched.some(record => record.meta.requiresManager);\n\n  // 如果路由需要登录但用户未登录，重定向到登录页面\n  if (requiresAuth && !auth.state.isLoggedIn) {\n    next({\n      name: 'Login'\n    });\n    return;\n  }\n\n  // 如果路由需要超级管理员权限但用户不是超级管理员\n  if (requiresSuperAdmin && auth.state.isLoggedIn && auth.state.user.role_id !== 3) {\n    // 如果用户已登录但不是超级管理员，重定向到其单位页面\n    next({\n      name: 'WasteForm',\n      params: {\n        id: auth.state.user.unit_id\n      }\n    });\n    return;\n  }\n\n  // 如果路由需要管理员权限但用户不是管理员\n  if (requiresManager && auth.state.isLoggedIn && auth.state.user.role_id === 1) {\n    // 普通员工不能访问管理员页面\n    next({\n      name: 'WasteForm',\n      params: {\n        id: auth.state.user.unit_id\n      }\n    });\n    return;\n  }\n\n  // 如果用户已登录且尝试访问登录页面，重定向到合适的页面\n  if (to.name === 'Login' && auth.state.isLoggedIn) {\n    if (auth.state.user.role_id === 3) {\n      next({\n        name: 'AdminRecords'\n      }); // 超级管理员到管理页面\n    } else {\n      next({\n        name: 'WasteForm',\n        params: {\n          id: auth.state.user.unit_id\n        }\n      }); // 其他用户到单位页面\n    }\n    return;\n  }\n\n  // 超级管理员访问首页时，重定向到管理页面\n  if (to.path === '/' && auth.state.isLoggedIn && auth.state.user.role_id === 3) {\n    next({\n      name: 'AdminRecords'\n    });\n    return;\n  }\n\n  // 检查用户是否尝试访问不属于自己单位的页面\n  if (to.name === 'WasteForm' && auth.state.isLoggedIn && auth.state.user.role_id !== 3 &&\n  // 不是超级管理员\n  auth.state.user.unit_id !== parseInt(to.params.id)) {\n    // 如果用户尝试访问其他单位，重定向到自己的单位\n    next({\n      name: 'WasteForm',\n      params: {\n        id: auth.state.user.unit_id\n      }\n    });\n    return;\n  }\n\n  // 其他情况正常通过\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","UnitSelection","WasteForm","RecordsList","Login","EditRecord","UserManagement","AdminRecords","auth","routes","path","name","component","meta","requiresAuth","requiresManager","requiresSuperAdmin","props","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","state","isLoggedIn","user","role_id","params","id","unit_id","parseInt"],"sources":["C:/Users/10150/Desktop/Hazardous-waste-management-system/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport UnitSelection from '../views/UnitSelection.vue'\r\nimport WasteForm from '../views/WasteForm.vue'\r\nimport RecordsList from '../views/RecordsList.vue'\r\nimport Login from '../views/Login.vue'\r\nimport EditRecord from '../views/EditRecord.vue'\r\nimport UserManagement from '../views/UserManagement.vue'\r\nimport AdminRecords from '../views/AdminRecords.vue'\r\nimport auth from '../store/auth'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  {\r\n    path: '/user-management',\r\n    name: 'UserManagement',\r\n    component: UserManagement,\r\n    meta: { requiresAuth: true, requiresManager: true }\r\n  },\r\n  {\r\n    path: '/',\r\n    name: 'UnitSelection',\r\n    component: UnitSelection,\r\n    meta: { requiresAuth: true, requiresSuperAdmin: true }\r\n  },\r\n  {\r\n    path: '/admin-records',\r\n    name: 'AdminRecords',\r\n    component: AdminRecords,\r\n    meta: { requiresAuth: true, requiresSuperAdmin: true }\r\n  },\r\n  {\r\n    path: '/record/:id',\r\n    name: 'EditRecord',\r\n    component: EditRecord,\r\n    props: true,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/unit/:id',\r\n    name: 'WasteForm',\r\n    component: WasteForm,\r\n    props: true,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/records/:unitId',\r\n    name: 'RecordsList',\r\n    component: RecordsList,\r\n    props: true,\r\n    meta: { requiresAuth: true }\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// 路由守卫\r\nrouter.beforeEach((to, from, next) => {\r\n  // 检查页面是否需要授权\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n  const requiresSuperAdmin = to.matched.some(record => record.meta.requiresSuperAdmin);\r\n  const requiresManager = to.matched.some(record => record.meta.requiresManager);\r\n  \r\n  // 如果路由需要登录但用户未登录，重定向到登录页面\r\n  if (requiresAuth && !auth.state.isLoggedIn) {\r\n    next({ name: 'Login' });\r\n    return;\r\n  }\r\n  \r\n  // 如果路由需要超级管理员权限但用户不是超级管理员\r\n  if (requiresSuperAdmin && auth.state.isLoggedIn && auth.state.user.role_id !== 3) {\r\n    // 如果用户已登录但不是超级管理员，重定向到其单位页面\r\n    next({ name: 'WasteForm', params: { id: auth.state.user.unit_id } });\r\n    return;\r\n  }\r\n  \r\n  // 如果路由需要管理员权限但用户不是管理员\r\n  if (requiresManager && auth.state.isLoggedIn && auth.state.user.role_id === 1) {\r\n    // 普通员工不能访问管理员页面\r\n    next({ name: 'WasteForm', params: { id: auth.state.user.unit_id } });\r\n    return;\r\n  }\r\n  \r\n  // 如果用户已登录且尝试访问登录页面，重定向到合适的页面\r\n  if (to.name === 'Login' && auth.state.isLoggedIn) {\r\n    if (auth.state.user.role_id === 3) {\r\n      next({ name: 'AdminRecords' }); // 超级管理员到管理页面\r\n    } else {\r\n      next({ name: 'WasteForm', params: { id: auth.state.user.unit_id } }); // 其他用户到单位页面\r\n    }\r\n    return;\r\n  }\r\n  \r\n  // 超级管理员访问首页时，重定向到管理页面\r\n  if (to.path === '/' && auth.state.isLoggedIn && auth.state.user.role_id === 3) {\r\n    next({ name: 'AdminRecords' });\r\n    return;\r\n  }\r\n  \r\n  // 检查用户是否尝试访问不属于自己单位的页面\r\n  if (to.name === 'WasteForm' && auth.state.isLoggedIn && \r\n      auth.state.user.role_id !== 3 && // 不是超级管理员\r\n      auth.state.user.unit_id !== parseInt(to.params.id)) {\r\n    // 如果用户尝试访问其他单位，重定向到自己的单位\r\n    next({ name: 'WasteForm', params: { id: auth.state.user.unit_id } });\r\n    return;\r\n  }\r\n  \r\n  // 其他情况正常通过\r\n  next();\r\n});\r\n\r\nexport default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}