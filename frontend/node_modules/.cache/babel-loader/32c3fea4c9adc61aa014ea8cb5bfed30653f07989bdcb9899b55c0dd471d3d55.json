{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit-record-container\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = {\n  class: \"form-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_arrow_left = _resolveComponent(\"arrow-left\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_clock = _resolveComponent(\"clock\");\n  const _component_el_time_picker = _resolveComponent(\"el-time-picker\");\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n  const _component_plus = _resolveComponent(\"plus\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_image_viewer = _resolveComponent(\"el-image-viewer\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"back-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.goBack && $setup.goBack(...args))\n  }, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_arrow_left)]),\n    _: 1 /* STABLE */\n  }), _cache[7] || (_cache[7] = _createTextVNode(\" 返回 \"))]), _createElementVNode(\"h1\", null, _toDisplayString($setup.isNew ? '新增废物记录' : '编辑废物记录'), 1 /* TEXT */), _cache[8] || (_cache[8] = _createElementVNode(\"div\", null, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString($setup.unitName), 1 /* TEXT */)]), _withDirectives((_openBlock(), _createBlock(_component_el_form, {\n    ref: \"recordForm\",\n    model: $setup.form,\n    rules: $setup.rules,\n    \"label-width\": \"120px\",\n    class: \"record-form\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 如果是超级管理员且是新增记录，显示单位选择 \"), $setup.isSuperAdmin && $setup.isNew ? (_openBlock(), _createBlock(_component_el_form_item, {\n      key: 0,\n      label: \"单位\",\n      prop: \"unitId\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $setup.form.unitId,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.unitId = $event),\n        placeholder: \"请选择单位\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.units, unit => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: unit.id,\n            label: unit.name,\n            value: unit.id\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n      label: \"废物类型\",\n      prop: \"wasteTypeId\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $setup.form.wasteTypeId,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.wasteTypeId = $event),\n        placeholder: \"请选择废物类型\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.wasteTypes, type => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: type.id,\n            label: type.name,\n            value: type.id\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"产生地点\",\n      prop: \"location\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.location,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.location = $event),\n        placeholder: \"请输入废物产生地点\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"收集日期\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n        modelValue: $setup.form.collectionDate,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.collectionDate = $event),\n        type: \"date\",\n        placeholder: \"选择日期\",\n        format: \"YYYY-MM-DD\",\n        \"value-format\": \"YYYY-MM-DD\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"收集时间\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_time_picker, {\n        modelValue: $setup.form.collectionTime,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.form.collectionTime = $event),\n        format: \"HH:mm\",\n        placeholder: \"选择时间\",\n        \"value-format\": \"HH:mm\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        prefix: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_clock)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" <div class=\\\"time-tip\\\">只需选择小时和分钟</div> \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"收集数量(吨)\",\n      prop: \"quantity\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input_number, {\n        modelValue: $setup.form.quantity,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.form.quantity = $event),\n        min: 0,\n        precision: 3,\n        step: 0.001,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"现场照片\",\n      prop: \"photos\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_upload, {\n        class: \"waste-photo-uploader\",\n        action: \"#\",\n        \"auto-upload\": false,\n        \"on-change\": $setup.handlePhotoChange,\n        \"on-remove\": $setup.handlePhotoRemove,\n        \"file-list\": $setup.photoList,\n        limit: 10,\n        multiple: \"\",\n        \"list-type\": \"picture-card\",\n        \"on-preview\": $setup.handlePictureCardPreview\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_plus)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"on-change\", \"on-remove\", \"file-list\", \"on-preview\"]), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n        class: \"photo-tip\"\n      }, \"请上传废物现场照片（最多10张）\", -1 /* HOISTED */)), _createCommentVNode(\" 添加独立的图片预览组件 \"), $setup.showViewer ? (_openBlock(), _createBlock(_component_el_image_viewer, {\n        key: 0,\n        \"url-list\": $setup.previewImages,\n        \"initial-index\": $setup.previewIndex,\n        onClose: $setup.closeViewer\n      }, null, 8 /* PROPS */, [\"url-list\", \"initial-index\", \"onClose\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitForm,\n        loading: $setup.submitting\n      }, {\n        default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"保存\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n        onClick: $setup.goBack\n      }, {\n        default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"取消\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])), [[_directive_loading, $setup.loading]])]), _cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    class: \"footer\"\n  }, [_createElementVNode(\"p\", null, \"© 2025 危险废物管理系统\")], -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","goBack","_createVNode","_component_el_icon","default","_withCtx","_component_arrow_left","_","_createTextVNode","_toDisplayString","isNew","_hoisted_3","_hoisted_4","unitName","_createBlock","_component_el_form","ref","model","form","rules","_createCommentVNode","isSuperAdmin","_component_el_form_item","key","label","prop","_component_el_select","modelValue","unitId","$event","placeholder","style","_Fragment","_renderList","units","unit","_component_el_option","id","name","value","wasteTypeId","wasteTypes","type","_component_el_input","location","_component_el_date_picker","collectionDate","format","_component_el_time_picker","collectionTime","prefix","_component_clock","_component_el_input_number","quantity","min","precision","step","_component_el_upload","action","handlePhotoChange","handlePhotoRemove","photoList","limit","multiple","handlePictureCardPreview","_component_plus","showViewer","_component_el_image_viewer","previewImages","previewIndex","onClose","closeViewer","_component_el_button","submitForm","loading","submitting"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\EditRecord.vue"],"sourcesContent":["<template>\n  <div class=\"edit-record-container\">\n    <div class=\"header\">\n      <div class=\"back-button\" @click=\"goBack\">\n        <el-icon><arrow-left /></el-icon> 返回\n      </div>\n      <h1>{{ isNew ? '新增废物记录' : '编辑废物记录' }}</h1>\n      <div></div>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"form-header\">\n        <h2>{{ unitName }}</h2>\n      </div>\n\n      <el-form \n        ref=\"recordForm\" \n        :model=\"form\" \n        :rules=\"rules\" \n        label-width=\"120px\"\n        class=\"record-form\"\n        v-loading=\"loading\"\n      >\n        <!-- 如果是超级管理员且是新增记录，显示单位选择 -->\n        <el-form-item label=\"单位\" prop=\"unitId\" v-if=\"isSuperAdmin && isNew\">\n          <el-select v-model=\"form.unitId\" placeholder=\"请选择单位\" style=\"width: 100%\">\n            <el-option \n              v-for=\"unit in units\" \n              :key=\"unit.id\" \n              :label=\"unit.name\" \n              :value=\"unit.id\" \n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"废物类型\" prop=\"wasteTypeId\">\n          <el-select v-model=\"form.wasteTypeId\" placeholder=\"请选择废物类型\" style=\"width: 100%\">\n            <el-option \n              v-for=\"type in wasteTypes\" \n              :key=\"type.id\" \n              :label=\"type.name\" \n              :value=\"type.id\" \n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"产生地点\" prop=\"location\">\n          <el-input v-model=\"form.location\" placeholder=\"请输入废物产生地点\" />\n        </el-form-item>\n\n        <el-form-item label=\"收集日期\">\n          <el-date-picker\n            v-model=\"form.collectionDate\"\n            type=\"date\"\n            placeholder=\"选择日期\"\n            format=\"YYYY-MM-DD\"\n            value-format=\"YYYY-MM-DD\"\n            style=\"width: 100%\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"收集时间\">\n          <el-time-picker\n            v-model=\"form.collectionTime\"\n            format=\"HH:mm\"\n            placeholder=\"选择时间\"\n            value-format=\"HH:mm\"\n            style=\"width: 100%\"\n          >\n            <template #prefix>\n              <el-icon><clock /></el-icon>\n            </template>\n          </el-time-picker>\n          <!-- <div class=\"time-tip\">只需选择小时和分钟</div> -->\n        </el-form-item>\n\n        <el-form-item label=\"收集数量(吨)\" prop=\"quantity\">\n          <el-input-number \n            v-model=\"form.quantity\" \n            :min=\"0\" \n            :precision=\"3\" \n            :step=\"0.001\" \n            style=\"width: 100%\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"现场照片\" prop=\"photos\">\n          <el-upload\n            class=\"waste-photo-uploader\"\n            action=\"#\"\n            :auto-upload=\"false\"\n            :on-change=\"handlePhotoChange\"\n            :on-remove=\"handlePhotoRemove\"\n            :file-list=\"photoList\"\n            :limit=\"10\"\n            multiple\n            list-type=\"picture-card\"\n            :on-preview=\"handlePictureCardPreview\"\n          >\n            <el-icon><plus /></el-icon>\n          </el-upload>\n          <div class=\"photo-tip\">请上传废物现场照片（最多10张）</div>\n          \n          <!-- 添加独立的图片预览组件 -->\n          <el-image-viewer\n            v-if=\"showViewer\"\n            :url-list=\"previewImages\"\n            :initial-index=\"previewIndex\"\n            @close=\"closeViewer\"\n          />\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">保存</el-button>\n          <el-button @click=\"goBack\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div class=\"footer\">\n      <p>&copy; 2025 危险废物管理系统</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\n\nexport default {\n  name: 'EditRecordView',\n  components: {\n    ArrowLeft,\n    Plus,\n    Clock,\n    ElImageViewer\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const recordForm = ref(null);\n    const loading = ref(false);\n    const submitting = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const units = ref([]);\n    const photoFiles = ref([]);\n    const photoList = ref([]);\n    const previewImages = ref([]);\n    const showViewer = ref(false);\n    const previewIndex = ref(0);\n\n    // 确定是新增还是编辑\n    const isNew = computed(() => !route.params.id || route.params.id === 'new');\n    \n    // 是否为超级管理员\n    const isSuperAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    const form = reactive({\n      unitId: '',\n      wasteTypeId: '',\n      location: '',\n      collectionDate: new Date().toISOString().slice(0, 10), // 默认为当天\n      collectionTime: '08:00',\n      quantity: 0,\n      recordId: null,\n      creatorId: auth.state.user?.id || null\n    });\n\n    const rules = {\n      unitId: [\n        { required: true, message: '请选择单位', trigger: 'change' }\n      ],\n      wasteTypeId: [\n        { required: true, message: '请选择废物类型', trigger: 'change' }\n      ],\n      location: [\n        { required: true, message: '请输入废物产生地点', trigger: 'blur' }\n      ],\n      collectionDate: [\n        { required: false }\n      ],\n      collectionTime: [\n        { required: false }\n      ],\n      quantity: [\n        { required: true, message: '请输入收集数量', trigger: 'change' }\n      ]\n    };\n\n    onMounted(async () => {\n      loading.value = true;\n      \n      try {\n        // 获取废物类型\n        await fetchWasteTypes();\n        \n        // 如果是超级管理员，获取所有单位\n        if (isSuperAdmin.value) {\n          await fetchUnits();\n        }\n        \n        // 如果有记录ID，则获取记录详情\n        if (!isNew.value) {\n          await fetchRecordDetails(route.params.id);\n        } else {\n          // 新增记录默认使用当前用户的单位（非超级管理员）\n          if (!isSuperAdmin.value && auth.state.user) {\n            form.unitId = auth.state.user.unit_id;\n            await fetchUnitName(form.unitId);\n          }\n        }\n      } catch (error) {\n        console.error('初始化数据失败:', error);\n        ElMessage.error('加载数据失败，请刷新重试');\n      } finally {\n        loading.value = false;\n      }\n    });\n\n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        units.value = response.data;\n      } catch (error) {\n        console.error('获取单位列表失败:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n\n    // 获取单位名称\n    const fetchUnitName = async (unitId) => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('获取单位信息失败:', error);\n      }\n    };\n\n    // 获取废物类型\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('获取废物类型失败:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    // 获取记录详情\n    const fetchRecordDetails = async (recordId) => {\n      try {\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/detail/${recordId}`);\n        const record = response.data;\n        \n        // 更新表单数据\n        form.unitId = record.unit_id;\n        form.wasteTypeId = record.waste_type_id;\n        form.location = record.location;\n        \n        // 拆分收集时间为日期和时间\n        if (record.collection_start_time) {\n          const dateTime = new Date(record.collection_start_time);\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\n          form.collectionTime = dateTime.toISOString().slice(11, 16);\n        }\n        \n        form.quantity = record.quantity;\n        form.recordId = record.id;\n        \n        // 设置单位名称\n        unitName.value = record.unit_name;\n        \n        // 设置图片预览\n        if (record.photo_path) {\n          try {\n            // 尝试解析JSON格式的照片路径数组\n            const photoPaths = JSON.parse(record.photo_path);\n            if (Array.isArray(photoPaths)) {\n              photoList.value = photoPaths.map((path, index) => ({\n                name: `现场照片${index + 1}`,\n                url: `${apiConfig.baseURL}${path}`\n              }));\n              // 更新预览图片列表\n              previewImages.value = photoList.value.map(item => item.url);\n            }\n          } catch (error) {\n            // 如果解析失败，可能是旧版本的单张照片格式\n            photoList.value = [\n              {\n                name: '现场照片',\n                url: `${apiConfig.baseURL}${record.photo_path}`\n              }\n            ];\n            // 更新预览图片列表\n            previewImages.value = [`${apiConfig.baseURL}${record.photo_path}`];\n          }\n        }\n      } catch (error) {\n        console.error('获取记录详情失败:', error);\n        ElMessage.error('获取记录详情失败');\n      }\n    };\n\n    // 处理照片变更\n    const handlePhotoChange = (file, fileList) => {\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\n      // 更新预览图片列表\n      updatePreviewImages(fileList);\n    };\n\n    // 处理照片移除\n    const handlePhotoRemove = (file, fileList) => {\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\n      // 更新预览图片列表\n      updatePreviewImages(fileList);\n    };\n\n    // 更新预览图片列表\n    const updatePreviewImages = (fileList) => {\n      previewImages.value = fileList.map(file => {\n        if (file.url) {\n          return file.url;\n        } else if (file.raw) {\n          return URL.createObjectURL(file.raw);\n        }\n        return '';\n      }).filter(url => url);\n    };\n\n    // 处理图片预览\n    const handlePictureCardPreview = (file) => {\n      // 找到当前图片在预览列表中的索引\n      const index = previewImages.value.findIndex(url => {\n        return url === file.url || (file.raw && url === URL.createObjectURL(file.raw));\n      });\n      \n      if (index !== -1) {\n        previewIndex.value = index;\n      } else {\n        previewIndex.value = 0;\n      }\n      \n      // 显示图片预览器\n      showViewer.value = true;\n    };\n    \n    // 关闭图片预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n\n    // 提交表单\n    const submitForm = () => {\n      recordForm.value.validate(async (valid) => {\n        if (valid) {\n          submitting.value = true;\n          \n          try {\n            const formData = new FormData();\n            formData.append('unitId', form.unitId);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n            \n            // 组合日期和时间，如果有的话\n            if (form.collectionDate && form.collectionTime) {\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\n              formData.append('collectionStartTime', combinedDateTime);\n            }\n            formData.append('quantity', form.quantity);\n            formData.append('creatorId', form.creatorId);\n            \n            // 添加多张照片\n            if (photoFiles.value && photoFiles.value.length > 0) {\n              photoFiles.value.forEach(file => {\n                if (file) {\n                  formData.append('photos', file);\n                }\n              });\n            }\n            \n            if (isNew.value) {\n              // 新增记录\n              await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\n              ElMessage.success('废物记录添加成功');\n            } else {\n              // 更新记录\n              await httpService.postForm(`${apiConfig.endpoints.wasteRecords}/${form.recordId}`, formData);\n              ElMessage.success('废物记录更新成功');\n            }\n            \n            // 返回记录列表\n            goBack();\n          } catch (error) {\n            console.error('提交表单失败:', error);\n            ElMessage.error('保存失败，请稍后再试');\n          } finally {\n            submitting.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n\n    // 返回上一页\n    const goBack = () => {\n      if (isSuperAdmin.value) {\n        router.push('/admin-records');\n      } else {\n        router.push({ \n          name: 'RecordsList', \n          params: { unitId: auth.state.user.unit_id } \n        });\n      }\n    };\n\n    return {\n      form,\n      rules,\n      recordForm,\n      loading,\n      submitting,\n      unitName,\n      wasteTypes,\n      units,\n      photoList,\n      previewImages,\n      showViewer,\n      previewIndex,\n      isNew,\n      isSuperAdmin,\n      handlePhotoChange,\n      handlePhotoRemove,\n      handlePictureCardPreview,\n      closeViewer,\n      submitForm,\n      goBack\n    };\n  }\n};\n</script>\n\n<style scoped>\n.edit-record-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.header {\n  background-color: #409EFF;\n  color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.back-button {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.content {\n  flex: 1;\n  padding: 30px;\n  max-width: 800px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.form-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.form-header h2 {\n  color: #333;\n  border-bottom: 2px solid #409EFF;\n  display: inline-block;\n  padding-bottom: 5px;\n}\n\n.record-form {\n  background-color: #f9f9f9;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.waste-photo-uploader {\n  width: 100%;\n}\n\n.photo-tip, .time-tip {\n  font-size: 12px;\n  color: #999;\n  margin-top: 5px;\n}\n\n.footer {\n  background-color: #f5f5f5;\n  padding: 15px;\n  text-align: center;\n  color: #666;\n}\n</style>\n\n<style>\n/* 修复Element Plus图片预览组件的z-index问题 */\n.el-image-viewer__wrapper {\n  z-index: 2147483647 !important; /* 使用最大可能的z-index值 */\n  position: fixed !important;\n}\n\n/* 确保图片预览的遮罩层也在最上层 */\n.el-image-viewer__mask {\n  z-index: 2147483646 !important;\n  position: fixed !important;\n}\n\n/* 确保图片预览的操作按钮在最上层 */\n.el-image-viewer__btn {\n  z-index: 2147483647 !important;\n  position: fixed !important;\n}\n\n/* 确保图片预览的关闭按钮在最上层 */\n.el-image-viewer__close {\n  z-index: 2147483647 !important;\n  position: fixed !important;\n}\n\n/* 确保图片预览的图片在最上层 */\n.el-image-viewer__img {\n  z-index: 2147483646 !important;\n  position: relative !important;\n}\n\n/* 确保图片预览的操作栏在最上层 */\n.el-image-viewer__actions {\n  z-index: 2147483647 !important;\n  position: fixed !important;\n}\n\n/* 确保图片预览的缩放按钮在最上层 */\n.el-image-viewer__actions__inner {\n  z-index: 2147483647 !important;\n  position: relative !important;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}