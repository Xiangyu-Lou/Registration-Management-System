{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withKeys as _withKeys, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-card\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"login-error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"login-header\"\n  }, [_createElementVNode(\"h1\", null, \"危险废物管理系统\"), _createElementVNode(\"h2\", null, \"用户登录\")], -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    ref: \"loginForm\",\n    model: $setup.form,\n    rules: $setup.rules,\n    \"label-width\": \"80px\",\n    class: \"login-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"手机号\",\n      prop: \"phone\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.phone,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.phone = $event),\n        placeholder: \"请输入手机号\",\n        onKeyup: _withKeys($setup.submitForm, [\"enter\"])\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onKeyup\"])]),\n      _: 1 /* STABLE */\n    }), $setup.showPassword ? (_openBlock(), _createBlock(_component_el_form_item, {\n      key: 0,\n      label: \"密码\",\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.form.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.password = $event),\n        type: \"password\",\n        placeholder: \"请输入密码\",\n        \"show-password\": \"\",\n        onKeyup: _withKeys($setup.submitForm, [\"enter\"])\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onKeyup\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n        modelValue: $setup.form.userType,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.userType = $event),\n        onChange: $setup.handleUserTypeChange\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio, {\n          label: 1\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"员工\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_radio, {\n          label: 2\n        }, {\n          default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"单位管理员\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_radio, {\n          label: 3\n        }, {\n          default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"超级管理员\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitForm,\n        loading: $setup.auth.state.loading,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" 登录 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"]), $setup.auth.state.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.auth.state.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_form","ref","model","$setup","form","rules","default","_withCtx","_component_el_form_item","label","prop","_component_el_input","modelValue","phone","_cache","$event","placeholder","onKeyup","_withKeys","submitForm","_","showPassword","_createBlock","password","type","_createCommentVNode","_component_el_radio_group","userType","onChange","handleUserTypeChange","_component_el_radio","_createTextVNode","_component_el_button","onClick","loading","auth","state","style","error","_hoisted_3","_toDisplayString"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <div class=\"login-header\">\r\n        <h1>危险废物管理系统</h1>\r\n        <h2>用户登录</h2>\r\n      </div>\r\n      \r\n      <el-form \r\n        ref=\"loginForm\" \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        label-width=\"80px\"\r\n        class=\"login-form\"\r\n      >\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input \r\n            v-model=\"form.phone\" \r\n            placeholder=\"请输入手机号\" \r\n            @keyup.enter=\"submitForm\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item v-if=\"showPassword\" label=\"密码\" prop=\"password\">\r\n          <el-input \r\n            v-model=\"form.password\" \r\n            type=\"password\" \r\n            placeholder=\"请输入密码\" \r\n            show-password\r\n            @keyup.enter=\"submitForm\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-radio-group v-model=\"form.userType\" @change=\"handleUserTypeChange\">\r\n            <el-radio :label=\"1\">员工</el-radio>\r\n            <el-radio :label=\"2\">单位管理员</el-radio>\r\n            <el-radio :label=\"3\">超级管理员</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"submitForm\" \r\n            :loading=\"auth.state.loading\"\r\n            style=\"width: 100%\"\r\n          >\r\n            登录\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <div v-if=\"auth.state.error\" class=\"login-error\">\r\n        {{ auth.state.error }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, computed, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage } from 'element-plus';\r\nimport auth from '../store/auth';\r\n\r\n/* eslint-disable vue/multi-word-component-names */\r\nexport default {\r\n  name: 'LoginView',\r\n  setup() {\r\n    const router = useRouter();\r\n    const loginForm = ref(null);\r\n    \r\n    const form = reactive({\r\n      phone: '',\r\n      password: '',\r\n      userType: 1 // 默认为员工\r\n    });\r\n    \r\n    // 员工登录不需要密码，管理员需要\r\n    const showPassword = computed(() => form.userType !== 1);\r\n    \r\n    // 根据用户类型动态设置验证规则\r\n    const rules = computed(() => {\r\n      const phoneRules = [\r\n        { required: true, message: '请输入手机号', trigger: 'blur' },\r\n        { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号格式', trigger: 'blur' }\r\n      ];\r\n      \r\n      const passwordRules = showPassword.value ? [\r\n        { required: true, message: '请输入密码', trigger: 'blur' }\r\n      ] : [];\r\n      \r\n      return {\r\n        phone: phoneRules,\r\n        password: passwordRules\r\n      };\r\n    });\r\n    \r\n    // 切换用户类型时重置表单\r\n    const handleUserTypeChange = () => {\r\n      if (form.userType === 1) {\r\n        form.password = '';\r\n      }\r\n      if (loginForm.value) {\r\n        loginForm.value.clearValidate();\r\n      }\r\n    };\r\n    \r\n    // 提交表单\r\n    const submitForm = async () => {\r\n      console.log('提交表单被触发');\r\n      if (!loginForm.value) {\r\n        console.log('表单引用不存在');\r\n        return;\r\n      }\r\n      \r\n      // 防止重复提交\r\n      if (auth.state.loading) {\r\n        console.log('登录正在进行中，跳过');\r\n        return;\r\n      }\r\n      \r\n      // 员工登录不需要密码\r\n      if (form.userType === 1) {\r\n        console.log('员工登录模式');\r\n        // 手机号简单验证\r\n        if (!form.phone) {\r\n          ElMessage.warning('请输入手机号');\r\n          return;\r\n        }\r\n\r\n        if (!/^1[3-9]\\d{9}$/.test(form.phone)) {\r\n          ElMessage.warning('请输入正确的手机号格式');\r\n          return;\r\n        }\r\n        \r\n        console.log('员工登录开始执行...');\r\n        await doLogin(); // 直接执行登录\r\n      } else {\r\n        console.log('管理员登录模式');\r\n        // 管理员需要验证整个表单\r\n        loginForm.value.validate(async (valid) => {\r\n          if (valid) {\r\n            console.log('管理员表单验证通过');\r\n            await doLogin();\r\n          } else {\r\n            console.log('表单验证失败');\r\n            ElMessage.warning('请填写必要的登录信息');\r\n          }\r\n        });\r\n      }\r\n    };\r\n    \r\n    // 执行登录\r\n    const doLogin = async () => {\r\n      console.log('开始登录，账号:', form.phone, '用户类型:', form.userType);\r\n      try {\r\n        // 添加调试信息\r\n        console.log('开始处理登录操作...');\r\n        \r\n        // 员工登录不传密码参数\r\n        let result;\r\n        if (form.userType === 1) {\r\n          console.log('员工登录，不发送密码');\r\n          result = await auth.login(form.phone, null);\r\n        } else {\r\n          console.log('管理员登录，发送密码');\r\n          result = await auth.login(form.phone, form.password);\r\n        }\r\n        console.log('登录响应:', result);\r\n        \r\n        if (result.success) {\r\n          const user = result.user;\r\n          \r\n          ElMessage.success(`欢迎，${user.username || user.phone}`);\r\n          \r\n          // 根据用户角色跳转到不同页面\r\n          if (user.role_id === 3) {\r\n            // 超级管理员\r\n            router.push('/admin-records');\r\n          } else if (user.role_id === 2) {\r\n            // 单位管理员直接进入记录页面\r\n            router.push(`/records/${user.unit_id}`);\r\n          } else {\r\n            // 普通员工进入填报页面\r\n            router.push(`/unit/${user.unit_id}`);\r\n          }\r\n        } else {\r\n          // 显示登录失败错误\r\n          ElMessage.error(result.error || '登录失败');\r\n          console.error('登录失败:', result.error);\r\n        }\r\n      } catch (error) {\r\n        // 捕获并显示非预期错误\r\n        ElMessage.error('登录失败，请检查网络连接');\r\n        console.error('登录错误:', error);\r\n      }\r\n    };\r\n    \r\n    // 如果已登录，自动跳转\r\n    onMounted(() => {\r\n      if (auth.state.isLoggedIn) {\r\n        const user = auth.state.user;\r\n        if (user.role_id === 3) {\r\n          router.push('/admin-records');\r\n        } else if (user.role_id === 2) {\r\n          router.push(`/records/${user.unit_id}`);\r\n        } else {\r\n          router.push(`/unit/${user.unit_id}`);\r\n        }\r\n      }\r\n    });\r\n    \r\n    return {\r\n      form,\r\n      rules,\r\n      loginForm,\r\n      showPassword,\r\n      handleUserTypeChange,\r\n      submitForm,\r\n      auth\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 30px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.login-header h1 {\r\n  font-size: 24px;\r\n  color: #409EFF;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.login-header h2 {\r\n  font-size: 18px;\r\n  color: #555;\r\n  font-weight: normal;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.login-error {\r\n  color: #f56c6c;\r\n  text-align: center;\r\n  margin-top: 15px;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}