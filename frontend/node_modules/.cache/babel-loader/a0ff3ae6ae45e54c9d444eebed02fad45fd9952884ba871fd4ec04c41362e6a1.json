{"ast":null,"code":"import { ref, reactive, onMounted, computed, onBeforeUnmount } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Document, Plus, Clock } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nimport { convertAndCompressImage } from '../utils/imageUtils';\nexport default {\n  name: 'WasteForm',\n  components: {\n    ArrowLeft,\n    Document,\n    Plus,\n    Clock\n  },\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const wasteForm = ref(null);\n    const loading = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const photoFilesBefore = ref([]);\n    const photoFilesAfter = ref([]);\n    const fileListBefore = ref([]);\n    const fileListAfter = ref([]);\n    const showProgress = ref(false);\n    const compressionProgress = ref(0);\n    const compressionStatus = ref('');\n    const compressionText = ref('正在处理图片...');\n\n    // 检查用户是否为超级管理员\n    const isAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    // 初始化表单，将日期和时间分开\n    const form = reactive({\n      wasteTypeId: '',\n      location: '',\n      collectionDate: new Date().toISOString().slice(0, 10),\n      // 默认为当天\n      collectionTime: '08:00',\n      quantity: undefined,\n      photosBefore: [],\n      photosAfter: []\n    });\n    const rules = {\n      wasteTypeId: [{\n        required: true,\n        message: '请选择废物类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入废物产生地点',\n        trigger: 'blur'\n      }],\n      collectionDate: [{\n        required: false\n      }],\n      collectionTime: [{\n        required: false\n      }],\n      quantity: [{\n        required: true,\n        message: '请输入收集数量',\n        trigger: 'change'\n      }]\n    };\n    onMounted(async () => {\n      // 设置viewport meta标签\n      const viewportMeta = document.createElement('meta');\n      viewportMeta.setAttribute('name', 'viewport');\n      viewportMeta.setAttribute('content', 'width=device-width,initial-scale=1.0,user-scalable=no,maximum-scale=1');\n      document.head.appendChild(viewportMeta);\n\n      // 保存原始的viewport meta标签（如果存在）\n      const originalViewport = document.querySelector('meta[name=\"viewport\"]');\n      if (originalViewport && originalViewport !== viewportMeta) {\n        originalViewport.remove();\n      }\n      await fetchUnitName();\n      await fetchWasteTypes();\n    });\n    onBeforeUnmount(() => {\n      // 移除我们添加的viewport meta标签\n      const viewportMeta = document.querySelector('meta[name=\"viewport\"]');\n      if (viewportMeta) {\n        viewportMeta.remove();\n      }\n\n      // 恢复原始的viewport设置\n      const originalViewport = document.createElement('meta');\n      originalViewport.setAttribute('name', 'viewport');\n      originalViewport.setAttribute('content', 'width=device-width,initial-scale=1.0');\n      document.head.appendChild(originalViewport);\n    });\n    const fetchUnitName = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(props.id));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('Error fetching waste types:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    // 处理上传前的文件处理\n    const handleBeforeUpload = async file => {\n      // 检查文件类型是否为图片\n      const acceptedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/bmp', 'image/webp'];\n      const isImage = acceptedTypes.includes(file.type);\n      if (!isImage) {\n        ElMessage.error('只能上传图片文件!');\n        return false;\n      }\n\n      // 检查文件大小（50MB = 50 * 1024 * 1024 bytes）\n      const maxSize = 50 * 1024 * 1024;\n      if (file.size > maxSize) {\n        ElMessage.error('图片大小不能超过50MB!');\n        return false;\n      }\n      try {\n        // 显示进度条\n        showProgress.value = true;\n        compressionProgress.value = 0;\n        compressionStatus.value = '';\n        compressionText.value = '正在处理图片...';\n\n        // 处理图片\n        const processedFile = await convertAndCompressImage(file, 0.8, progress => {\n          compressionProgress.value = progress;\n          if (progress >= 100) {\n            compressionStatus.value = 'success';\n            compressionText.value = '处理完成';\n            setTimeout(() => {\n              showProgress.value = false;\n            }, 500);\n          }\n        });\n\n        // 替换原始文件\n        file.raw = processedFile;\n        file.name = processedFile.name;\n        file.type = processedFile.type;\n\n        // 为文件添加唯一标识符\n        if (!file.uid) {\n          file.uid = Date.now() + '-' + Math.random().toString(36).substr(2, 10);\n        }\n        return true; // 允许上传\n      } catch (error) {\n        console.error('图片处理失败:', error);\n        compressionStatus.value = 'exception';\n        compressionText.value = '处理失败';\n        setTimeout(() => {\n          showProgress.value = false;\n        }, 1000);\n        ElMessage.error('图片处理失败，请重试');\n        return false;\n      }\n    };\n\n    // 处理收集前照片变更\n    const handlePhotoBeforeChange = (file, fileList) => {\n      // 更新文件列表\n      console.log('收集前照片变更:', file);\n      fileListBefore.value = fileList;\n      photoFilesBefore.value = fileList.filter(f => f.raw) // 只处理新上传的文件\n      .map(f => f.raw);\n      console.log('更新后的photoFilesBefore:', photoFilesBefore.value);\n    };\n\n    // 处理收集前照片移除\n    const handlePhotoBeforeRemove = (file, fileList) => {\n      console.log('收集前照片移除:', file);\n      fileListBefore.value = fileList;\n      photoFilesBefore.value = fileList.filter(f => f.raw).map(f => f.raw);\n      console.log('更新后的photoFilesBefore:', photoFilesBefore.value);\n    };\n\n    // 处理收集后照片变更\n    const handlePhotoAfterChange = (file, fileList) => {\n      // 更新文件列表\n      console.log('收集后照片变更:', file);\n      fileListAfter.value = fileList;\n      photoFilesAfter.value = fileList.filter(f => f.raw) // 只处理新上传的文件\n      .map(f => f.raw);\n      console.log('更新后的photoFilesAfter:', photoFilesAfter.value);\n    };\n\n    // 处理收集后照片移除\n    const handlePhotoAfterRemove = (file, fileList) => {\n      console.log('收集后照片移除:', file);\n      fileListAfter.value = fileList;\n      photoFilesAfter.value = fileList.filter(f => f.raw).map(f => f.raw);\n      console.log('更新后的photoFilesAfter:', photoFilesAfter.value);\n    };\n    const submitForm = () => {\n      wasteForm.value.validate(async valid => {\n        if (valid) {\n          loading.value = true;\n          try {\n            const formData = new FormData();\n            formData.append('unitId', props.id);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n\n            // 组合日期和时间，如果有的话\n            if (form.collectionDate && form.collectionTime) {\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\n              formData.append('collectionStartTime', combinedDateTime);\n            }\n            formData.append('quantity', form.quantity);\n\n            // 添加创建者ID（如果用户已登录）\n            if (auth.state.isLoggedIn && auth.state.user) {\n              formData.append('creatorId', auth.state.user.id);\n            }\n            console.log('提交表单数据:', {\n              unitId: props.id,\n              wasteTypeId: form.wasteTypeId,\n              location: form.location,\n              quantity: form.quantity,\n              photosBefore: photoFilesBefore.value ? photoFilesBefore.value.length : 0,\n              photosAfter: photoFilesAfter.value ? photoFilesAfter.value.length : 0\n            });\n\n            // 添加收集前照片\n            if (photoFilesBefore.value && photoFilesBefore.value.length > 0) {\n              console.log('添加收集前照片数量:', photoFilesBefore.value.length);\n              photoFilesBefore.value.forEach((file, index) => {\n                if (file) {\n                  console.log(`收集前照片 ${index + 1}:`, file.name);\n                  formData.append('photosBefore', file);\n                }\n              });\n            }\n\n            // 添加收集后照片\n            if (photoFilesAfter.value && photoFilesAfter.value.length > 0) {\n              console.log('添加收集后照片数量:', photoFilesAfter.value.length);\n              photoFilesAfter.value.forEach((file, index) => {\n                if (file) {\n                  console.log(`收集后照片 ${index + 1}:`, file.name);\n                  formData.append('photosAfter', file);\n                }\n              });\n            }\n            const response = await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\n            console.log('提交响应:', response.data);\n            ElMessage.success('废物记录提交成功');\n            resetForm();\n          } catch (error) {\n            console.error('Error submitting form:', error);\n            if (error.response) {\n              console.error('错误响应数据:', error.response.data);\n              console.error('错误状态码:', error.response.status);\n            }\n            ElMessage.error('提交失败，请稍后再试');\n          } finally {\n            loading.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n    const resetForm = () => {\n      if (wasteForm.value) {\n        wasteForm.value.resetFields();\n      }\n      photoFilesBefore.value = [];\n      photoFilesAfter.value = [];\n      fileListBefore.value = [];\n      fileListAfter.value = [];\n      form.quantity = undefined;\n      form.collectionDate = new Date().toISOString().slice(0, 10); // 重置为今天\n      form.collectionTime = '08:00'; // 重置为默认时间\n    };\n    const goBack = () => {\n      // 只有超级管理员才能返回到单位选择页面\n      if (isAdmin.value) {\n        router.push('/');\n      }\n    };\n    const viewRecords = () => {\n      router.push({\n        name: 'RecordsList',\n        params: {\n          unitId: props.id\n        }\n      });\n    };\n    const selectAllText = event => {\n      // 使用setTimeout确保DOM已完全渲染\n      setTimeout(() => {\n        if (event && event.target) {\n          // 找到el-input-number内部的input元素\n          const inputEl = event.target.querySelector('input');\n          if (inputEl) {\n            inputEl.select();\n          }\n        }\n      }, 10);\n    };\n    return {\n      form,\n      rules,\n      wasteForm,\n      loading,\n      unitName,\n      wasteTypes,\n      isAdmin,\n      fileListBefore,\n      fileListAfter,\n      handlePhotoBeforeChange,\n      handlePhotoBeforeRemove,\n      handlePhotoAfterChange,\n      handlePhotoAfterRemove,\n      handleBeforeUpload,\n      submitForm,\n      resetForm,\n      goBack,\n      viewRecords,\n      selectAllText,\n      showProgress,\n      compressionProgress,\n      compressionStatus,\n      compressionText\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","onBeforeUnmount","useRouter","ElMessage","httpService","apiConfig","ArrowLeft","Document","Plus","Clock","auth","convertAndCompressImage","name","components","props","id","type","String","Number","required","setup","router","wasteForm","loading","unitName","wasteTypes","photoFilesBefore","photoFilesAfter","fileListBefore","fileListAfter","showProgress","compressionProgress","compressionStatus","compressionText","isAdmin","state","isLoggedIn","user","role_id","form","wasteTypeId","location","collectionDate","Date","toISOString","slice","collectionTime","quantity","undefined","photosBefore","photosAfter","rules","message","trigger","viewportMeta","document","createElement","setAttribute","head","appendChild","originalViewport","querySelector","remove","fetchUnitName","fetchWasteTypes","response","get","endpoints","units","unit","data","find","u","parseInt","value","error","console","handleBeforeUpload","file","acceptedTypes","isImage","includes","maxSize","size","processedFile","progress","setTimeout","raw","uid","now","Math","random","toString","substr","handlePhotoBeforeChange","fileList","log","filter","f","map","handlePhotoBeforeRemove","handlePhotoAfterChange","handlePhotoAfterRemove","submitForm","validate","valid","formData","FormData","append","combinedDateTime","unitId","length","forEach","index","postForm","wasteRecords","success","resetForm","status","warning","resetFields","goBack","push","viewRecords","params","selectAllText","event","target","inputEl","select"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\WasteForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"waste-form-container\">\r\n    <div class=\"header\">\r\n      <div class=\"back-button\" @click=\"goBack\" v-if=\"isAdmin\">\r\n        <el-icon><arrow-left /></el-icon> 返回\r\n      </div>\r\n      <div v-else></div>\r\n      <h1>危险废物填报</h1>\r\n      <div class=\"view-records\" @click=\"viewRecords\">\r\n        查看记录 <el-icon><document /></el-icon>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"unit-info\">\r\n        <h2>{{ unitName }}</h2>\r\n      </div>\r\n\r\n      <el-form \r\n        ref=\"wasteForm\" \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        label-position=\"top\"\r\n        class=\"waste-form\"\r\n      >\r\n        <el-form-item label=\"废物类型\" prop=\"wasteTypeId\">\r\n          <el-select v-model=\"form.wasteTypeId\" placeholder=\"请选择废物类型\" style=\"width: 100%\">\r\n            <el-option \r\n              v-for=\"type in wasteTypes\" \r\n              :key=\"type.id\" \r\n              :label=\"type.name\" \r\n              :value=\"type.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"产生地点\" prop=\"location\">\r\n          <el-input v-model=\"form.location\" placeholder=\"请输入废物产生地点\" />\r\n        </el-form-item>\r\n\r\n        <div class=\"form-row\">\r\n          <el-form-item label=\"收集日期\" class=\"date-item\">\r\n            <el-date-picker\r\n              v-model=\"form.collectionDate\"\r\n              type=\"date\"\r\n              placeholder=\"选择日期\"\r\n              format=\"YYYY-MM-DD\"\r\n              value-format=\"YYYY-MM-DD\"\r\n              style=\"width: 100%\"\r\n              :editable=\"false\"\r\n              popper-class=\"date-picker-popup\"\r\n              :teleported=\"false\"\r\n            />\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"收集时间\" class=\"time-item\">\r\n            <el-time-picker\r\n              v-model=\"form.collectionTime\"\r\n              format=\"HH:mm\"\r\n              placeholder=\"选择时间\"\r\n              value-format=\"HH:mm\"\r\n              style=\"width: 100%\"\r\n              :editable=\"false\"\r\n              popper-class=\"time-picker-popup\"\r\n              :teleported=\"false\"\r\n            >\r\n              <template #prefix>\r\n                <el-icon><clock /></el-icon>\r\n              </template>\r\n            </el-time-picker>\r\n          </el-form-item>\r\n        </div>\r\n\r\n        <el-form-item label=\"收集数量(吨)\" prop=\"quantity\">\r\n          <el-input-number\r\n            v-model=\"form.quantity\"\r\n            :min=\"0\"\r\n            :precision=\"2\"\r\n            :step=\"0.1\"\r\n            style=\"width: 100%\"\r\n            @focus=\"selectAllText($event)\"\r\n            :input-props=\"{\r\n              inputmode: 'decimal',\r\n              pattern: '[0-9]*[.,]?[0-9]*'\r\n            }\"\r\n            :controls=\"false\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片（收集前）\" prop=\"photosBefore\">\r\n          <div class=\"photo-tip\">请上传废物收集前的现场照片（最多10张）</div>\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoBeforeChange\"\r\n            :on-remove=\"handlePhotoBeforeRemove\"\r\n            :file-list=\"fileListBefore\"\r\n            :limit=\"10\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n            accept=\"image/jpeg,image/jpg,image/png,image/gif,image/bmp,image/webp,.jpeg,.jpg,.png,.gif,.bmp,.webp\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片（收集后）\" prop=\"photosAfter\">\r\n          <div class=\"photo-tip\">请上传废物收集后的现场照片（最多10张）</div>\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoAfterChange\"\r\n            :on-remove=\"handlePhotoAfterRemove\"\r\n            :file-list=\"fileListAfter\"\r\n            :limit=\"10\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n            accept=\"image/jpeg,image/jpg,image/png,image/gif,image/bmp,image/webp,.jpeg,.jpg,.png,.gif,.bmp,.webp\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n        </el-form-item>\r\n\r\n        <div class=\"form-actions\">\r\n          <el-button type=\"primary\" class=\"submit-btn\" @click=\"submitForm\" :loading=\"loading\">提交</el-button>\r\n          <el-button class=\"reset-btn\" @click=\"resetForm\">重置</el-button>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n\r\n    <el-dialog\r\n      v-model=\"showProgress\"\r\n      title=\"图片处理中\"\r\n      :close-on-click-modal=\"false\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n      width=\"300px\"\r\n    >\r\n      <div class=\"progress-container\">\r\n        <el-progress \r\n          :percentage=\"compressionProgress\" \r\n          :status=\"compressionStatus\"\r\n          :stroke-width=\"15\"\r\n          :text-inside=\"true\"\r\n        />\r\n        <div class=\"progress-text\">{{ compressionText }}</div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed, onBeforeUnmount } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage } from 'element-plus';\r\nimport httpService from '../config/httpService';\r\nimport apiConfig from '../config/api';\r\nimport { ArrowLeft, Document, Plus, Clock } from '@element-plus/icons-vue';\r\nimport auth from '../store/auth';\r\nimport { convertAndCompressImage } from '../utils/imageUtils';\r\n\r\nexport default {\r\n  name: 'WasteForm',\r\n  components: {\r\n    ArrowLeft,\r\n    Document,\r\n    Plus,\r\n    Clock\r\n  },\r\n  props: {\r\n    id: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const router = useRouter();\r\n    const wasteForm = ref(null);\r\n    const loading = ref(false);\r\n    const unitName = ref('');\r\n    const wasteTypes = ref([]);\r\n    const photoFilesBefore = ref([]);\r\n    const photoFilesAfter = ref([]);\r\n    const fileListBefore = ref([]);\r\n    const fileListAfter = ref([]);\r\n    const showProgress = ref(false);\r\n    const compressionProgress = ref(0);\r\n    const compressionStatus = ref('');\r\n    const compressionText = ref('正在处理图片...');\r\n    \r\n    // 检查用户是否为超级管理员\r\n    const isAdmin = computed(() => {\r\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\r\n    });\r\n\r\n    // 初始化表单，将日期和时间分开\r\n    const form = reactive({\r\n      wasteTypeId: '',\r\n      location: '',\r\n      collectionDate: new Date().toISOString().slice(0, 10), // 默认为当天\r\n      collectionTime: '08:00',\r\n      quantity: undefined,\r\n      photosBefore: [],\r\n      photosAfter: []\r\n    });\r\n\r\n    const rules = {\r\n      wasteTypeId: [\r\n        { required: true, message: '请选择废物类型', trigger: 'change' }\r\n      ],\r\n      location: [\r\n        { required: true, message: '请输入废物产生地点', trigger: 'blur' }\r\n      ],\r\n      collectionDate: [\r\n        { required: false }\r\n      ],\r\n      collectionTime: [\r\n        { required: false }\r\n      ],\r\n      quantity: [\r\n        { required: true, message: '请输入收集数量', trigger: 'change' }\r\n      ]\r\n    };\r\n\r\n    onMounted(async () => {\r\n      // 设置viewport meta标签\r\n      const viewportMeta = document.createElement('meta');\r\n      viewportMeta.setAttribute('name', 'viewport');\r\n      viewportMeta.setAttribute('content', 'width=device-width,initial-scale=1.0,user-scalable=no,maximum-scale=1');\r\n      document.head.appendChild(viewportMeta);\r\n\r\n      // 保存原始的viewport meta标签（如果存在）\r\n      const originalViewport = document.querySelector('meta[name=\"viewport\"]');\r\n      if (originalViewport && originalViewport !== viewportMeta) {\r\n        originalViewport.remove();\r\n      }\r\n\r\n      await fetchUnitName();\r\n      await fetchWasteTypes();\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      // 移除我们添加的viewport meta标签\r\n      const viewportMeta = document.querySelector('meta[name=\"viewport\"]');\r\n      if (viewportMeta) {\r\n        viewportMeta.remove();\r\n      }\r\n\r\n      // 恢复原始的viewport设置\r\n      const originalViewport = document.createElement('meta');\r\n      originalViewport.setAttribute('name', 'viewport');\r\n      originalViewport.setAttribute('content', 'width=device-width,initial-scale=1.0');\r\n      document.head.appendChild(originalViewport);\r\n    });\r\n\r\n    const fetchUnitName = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        const unit = response.data.find(u => u.id === parseInt(props.id));\r\n        if (unit) {\r\n          unitName.value = unit.name;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching unit name:', error);\r\n        ElMessage.error('获取单位信息失败');\r\n      }\r\n    };\r\n\r\n    const fetchWasteTypes = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\r\n        wasteTypes.value = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching waste types:', error);\r\n        ElMessage.error('获取废物类型失败');\r\n      }\r\n    };\r\n\r\n    // 处理上传前的文件处理\r\n    const handleBeforeUpload = async (file) => {\r\n      // 检查文件类型是否为图片\r\n      const acceptedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/bmp', 'image/webp'];\r\n      const isImage = acceptedTypes.includes(file.type);\r\n      \r\n      if (!isImage) {\r\n        ElMessage.error('只能上传图片文件!');\r\n        return false;\r\n      }\r\n\r\n      // 检查文件大小（50MB = 50 * 1024 * 1024 bytes）\r\n      const maxSize = 50 * 1024 * 1024;\r\n      if (file.size > maxSize) {\r\n        ElMessage.error('图片大小不能超过50MB!');\r\n        return false;\r\n      }\r\n      \r\n      try {\r\n        // 显示进度条\r\n        showProgress.value = true;\r\n        compressionProgress.value = 0;\r\n        compressionStatus.value = '';\r\n        compressionText.value = '正在处理图片...';\r\n        \r\n        // 处理图片\r\n        const processedFile = await convertAndCompressImage(file, 0.8, (progress) => {\r\n          compressionProgress.value = progress;\r\n          if (progress >= 100) {\r\n            compressionStatus.value = 'success';\r\n            compressionText.value = '处理完成';\r\n            setTimeout(() => {\r\n              showProgress.value = false;\r\n            }, 500);\r\n          }\r\n        });\r\n        \r\n        // 替换原始文件\r\n        file.raw = processedFile;\r\n        file.name = processedFile.name;\r\n        file.type = processedFile.type;\r\n        \r\n        // 为文件添加唯一标识符\r\n        if (!file.uid) {\r\n          file.uid = Date.now() + '-' + Math.random().toString(36).substr(2, 10);\r\n        }\r\n        return true; // 允许上传\r\n      } catch (error) {\r\n        console.error('图片处理失败:', error);\r\n        compressionStatus.value = 'exception';\r\n        compressionText.value = '处理失败';\r\n        setTimeout(() => {\r\n          showProgress.value = false;\r\n        }, 1000);\r\n        ElMessage.error('图片处理失败，请重试');\r\n        return false;\r\n      }\r\n    };\r\n\r\n    // 处理收集前照片变更\r\n    const handlePhotoBeforeChange = (file, fileList) => {\r\n      // 更新文件列表\r\n      console.log('收集前照片变更:', file);\r\n      fileListBefore.value = fileList;\r\n      photoFilesBefore.value = fileList\r\n        .filter(f => f.raw) // 只处理新上传的文件\r\n        .map(f => f.raw);\r\n      console.log('更新后的photoFilesBefore:', photoFilesBefore.value);\r\n    };\r\n\r\n    // 处理收集前照片移除\r\n    const handlePhotoBeforeRemove = (file, fileList) => {\r\n      console.log('收集前照片移除:', file);\r\n      fileListBefore.value = fileList;\r\n      photoFilesBefore.value = fileList\r\n        .filter(f => f.raw)\r\n        .map(f => f.raw);\r\n      console.log('更新后的photoFilesBefore:', photoFilesBefore.value);\r\n    };\r\n\r\n    // 处理收集后照片变更\r\n    const handlePhotoAfterChange = (file, fileList) => {\r\n      // 更新文件列表\r\n      console.log('收集后照片变更:', file);\r\n      fileListAfter.value = fileList;\r\n      photoFilesAfter.value = fileList\r\n        .filter(f => f.raw) // 只处理新上传的文件\r\n        .map(f => f.raw);\r\n      console.log('更新后的photoFilesAfter:', photoFilesAfter.value);\r\n    };\r\n\r\n    // 处理收集后照片移除\r\n    const handlePhotoAfterRemove = (file, fileList) => {\r\n      console.log('收集后照片移除:', file);\r\n      fileListAfter.value = fileList;\r\n      photoFilesAfter.value = fileList\r\n        .filter(f => f.raw)\r\n        .map(f => f.raw);\r\n      console.log('更新后的photoFilesAfter:', photoFilesAfter.value);\r\n    };\r\n\r\n    const submitForm = () => {\r\n      wasteForm.value.validate(async (valid) => {\r\n        if (valid) {\r\n          loading.value = true;\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('unitId', props.id);\r\n            formData.append('wasteTypeId', form.wasteTypeId);\r\n            formData.append('location', form.location);\r\n            \r\n            // 组合日期和时间，如果有的话\r\n            if (form.collectionDate && form.collectionTime) {\r\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\r\n              formData.append('collectionStartTime', combinedDateTime);\r\n            }\r\n            formData.append('quantity', form.quantity);\r\n            \r\n            // 添加创建者ID（如果用户已登录）\r\n            if (auth.state.isLoggedIn && auth.state.user) {\r\n              formData.append('creatorId', auth.state.user.id);\r\n            }\r\n            \r\n            console.log('提交表单数据:', {\r\n              unitId: props.id,\r\n              wasteTypeId: form.wasteTypeId,\r\n              location: form.location,\r\n              quantity: form.quantity,\r\n              photosBefore: photoFilesBefore.value ? photoFilesBefore.value.length : 0,\r\n              photosAfter: photoFilesAfter.value ? photoFilesAfter.value.length : 0\r\n            });\r\n            \r\n            // 添加收集前照片\r\n            if (photoFilesBefore.value && photoFilesBefore.value.length > 0) {\r\n              console.log('添加收集前照片数量:', photoFilesBefore.value.length);\r\n              photoFilesBefore.value.forEach((file, index) => {\r\n                if (file) {\r\n                  console.log(`收集前照片 ${index+1}:`, file.name);\r\n                  formData.append('photosBefore', file);\r\n                }\r\n              });\r\n            }\r\n            \r\n            // 添加收集后照片\r\n            if (photoFilesAfter.value && photoFilesAfter.value.length > 0) {\r\n              console.log('添加收集后照片数量:', photoFilesAfter.value.length);\r\n              photoFilesAfter.value.forEach((file, index) => {\r\n                if (file) {\r\n                  console.log(`收集后照片 ${index+1}:`, file.name);\r\n                  formData.append('photosAfter', file);\r\n                }\r\n              });\r\n            }\r\n\r\n            const response = await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\r\n            console.log('提交响应:', response.data);\r\n\r\n            ElMessage.success('废物记录提交成功');\r\n            resetForm();\r\n          } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            if (error.response) {\r\n              console.error('错误响应数据:', error.response.data);\r\n              console.error('错误状态码:', error.response.status);\r\n            }\r\n            ElMessage.error('提交失败，请稍后再试');\r\n          } finally {\r\n            loading.value = false;\r\n          }\r\n        } else {\r\n          ElMessage.warning('请完成必填项');\r\n        }\r\n      });\r\n    };\r\n\r\n    const resetForm = () => {\r\n      if (wasteForm.value) {\r\n        wasteForm.value.resetFields();\r\n      }\r\n      photoFilesBefore.value = [];\r\n      photoFilesAfter.value = [];\r\n      fileListBefore.value = [];\r\n      fileListAfter.value = [];\r\n      form.quantity = undefined;\r\n      form.collectionDate = new Date().toISOString().slice(0, 10); // 重置为今天\r\n      form.collectionTime = '08:00'; // 重置为默认时间\r\n    };\r\n\r\n    const goBack = () => {\r\n      // 只有超级管理员才能返回到单位选择页面\r\n      if (isAdmin.value) {\r\n        router.push('/');\r\n      }\r\n    };\r\n\r\n    const viewRecords = () => {\r\n      router.push({ name: 'RecordsList', params: { unitId: props.id } });\r\n    };\r\n\r\n    const selectAllText = (event) => {\r\n      // 使用setTimeout确保DOM已完全渲染\r\n      setTimeout(() => {\r\n        if (event && event.target) {\r\n          // 找到el-input-number内部的input元素\r\n          const inputEl = event.target.querySelector('input');\r\n          if (inputEl) {\r\n            inputEl.select();\r\n          }\r\n        }\r\n      }, 10);\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      wasteForm,\r\n      loading,\r\n      unitName,\r\n      wasteTypes,\r\n      isAdmin,\r\n      fileListBefore,\r\n      fileListAfter,\r\n      handlePhotoBeforeChange,\r\n      handlePhotoBeforeRemove,\r\n      handlePhotoAfterChange,\r\n      handlePhotoAfterRemove,\r\n      handleBeforeUpload,\r\n      submitForm,\r\n      resetForm,\r\n      goBack,\r\n      viewRecords,\r\n      selectAllText,\r\n      showProgress,\r\n      compressionProgress,\r\n      compressionStatus,\r\n      compressionText\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.waste-form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 12px 16px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.header h1 {\r\n  font-size: 18px;\r\n  margin: 0;\r\n  font-weight: 500;\r\n}\r\n\r\n.back-button, .view-records {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 16px;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.unit-info {\r\n  text-align: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.unit-info h2 {\r\n  color: #333;\r\n  border-bottom: 2px solid #409EFF;\r\n  display: inline-block;\r\n  padding-bottom: 5px;\r\n  font-size: 18px;\r\n  margin: 0;\r\n}\r\n\r\n.waste-form {\r\n  background-color: #ffffff;\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .form-row {\r\n    flex-direction: row;\r\n  }\r\n  \r\n  .date-item, .time-item {\r\n    flex: 1;\r\n  }\r\n  \r\n  .content {\r\n    padding: 24px;\r\n    max-width: 800px;\r\n  }\r\n  \r\n  .header h1 {\r\n    font-size: 22px;\r\n  }\r\n}\r\n\r\n.waste-photo-uploader {\r\n  width: 100%;\r\n}\r\n\r\n.waste-photo-uploader :deep(.el-upload--picture-card) {\r\n  width: 80px;\r\n  height: 80px;\r\n  line-height: 80px;\r\n}\r\n\r\n.waste-photo-uploader :deep(.el-upload-list--picture-card .el-upload-list__item) {\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n\r\n.photo-tip, .time-tip {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 12px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.submit-btn, .reset-btn {\r\n  width: 45%;\r\n  height: 44px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .form-actions {\r\n    justify-content: flex-start;\r\n  }\r\n  \r\n  .submit-btn, .reset-btn {\r\n    width: auto;\r\n  }\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f5f5;\r\n  padding: 12px;\r\n  text-align: center;\r\n  color: #666;\r\n  font-size: 12px;\r\n}\r\n\r\n:deep(.el-form-item__label) {\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  padding-bottom: 4px;\r\n}\r\n\r\n:deep(.el-input__inner), \r\n:deep(.el-select__input), \r\n:deep(.el-input-number__decrease), \r\n:deep(.el-input-number__increase) {\r\n  height: 44px;\r\n  font-size: 15px;\r\n}\r\n\r\n:deep(.el-button) {\r\n  font-size: 15px;\r\n  padding: 12px 20px;\r\n}\r\n\r\n:deep(.el-select-dropdown__item) {\r\n  font-size: 15px;\r\n  padding: 12px 20px;\r\n}\r\n\r\n:deep(.el-date-editor.el-input), \r\n:deep(.el-date-editor.el-input__inner) {\r\n  width: 100%;\r\n}\r\n\r\n:deep(.el-form-item) {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n:deep(.date-picker-popup),\r\n:deep(.time-picker-popup) {\r\n  touch-action: none;\r\n}\r\n\r\n:deep(.el-input__wrapper) {\r\n  cursor: pointer;\r\n}\r\n\r\n:deep(.el-input__inner) {\r\n  -webkit-tap-highlight-color: transparent;\r\n  user-select: none;\r\n}\r\n\r\n.progress-container {\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.progress-text {\r\n  margin-top: 10px;\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}