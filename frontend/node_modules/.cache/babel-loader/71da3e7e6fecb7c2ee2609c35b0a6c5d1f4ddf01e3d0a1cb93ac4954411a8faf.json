{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { Plus, Refresh, PictureFailed } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nexport default {\n  name: 'AdminRecordsView',\n  components: {\n    Plus,\n    Refresh,\n    PictureFailed\n  },\n  setup() {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    onMounted(async () => {\n      // 验证用户是否为超级管理员\n      if (!auth.state.isLoggedIn || auth.state.user.role_id !== 3) {\n        ElMessage.error('权限不足');\n        router.push('/login');\n        return;\n      }\n      await fetchRecords();\n    });\n    const fetchRecords = async () => {\n      loading.value = true;\n      try {\n        // 使用超级管理员ID获取所有记录\n        const response = await axios.get(`http://localhost:3000/api/waste-records/user/${auth.state.user.id}`);\n        records.value = response.data;\n\n        // 格式化日期\n        records.value.forEach(record => {\n          record.created_at = formatDateTime(record.created_at);\n          record.collection_start_time = formatDateTime(record.collection_start_time);\n        });\n      } catch (error) {\n        console.error('获取废物记录失败:', error);\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const formatDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    };\n    const refreshRecords = () => {\n      fetchRecords();\n    };\n    const addNewRecord = () => {\n      router.push('/record/new');\n    };\n    const editRecord = recordId => {\n      router.push(`/record/${recordId}`);\n    };\n    return {\n      records,\n      loading,\n      refreshRecords,\n      addNewRecord,\n      editRecord\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","axios","Plus","Refresh","PictureFailed","auth","name","components","setup","router","records","loading","state","isLoggedIn","user","role_id","error","push","fetchRecords","value","response","get","id","data","forEach","record","created_at","formatDateTime","collection_start_time","console","dateTimeStr","date","Date","toLocaleString","year","month","day","hour","minute","second","hour12","refreshRecords","addNewRecord","editRecord","recordId"],"sources":["C:\\Users\\10150\\Desktop\\hazardous-waste-management\\frontend\\src\\views\\AdminRecords.vue"],"sourcesContent":["<template>\n  <div class=\"admin-records-container\">\n    <div class=\"header\">\n      <h1>危险废物管理系统 - 全部记录</h1>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"actions\">\n        <el-button type=\"primary\" @click=\"addNewRecord\">\n          <el-icon><plus /></el-icon> 新增填报\n        </el-button>\n        <el-button @click=\"refreshRecords\">\n          <el-icon><refresh /></el-icon> 刷新\n        </el-button>\n      </div>\n      \n      <div class=\"records-wrapper\">\n        <el-card class=\"records-card\">\n          <div class=\"card-header\">\n            <h3>所有废物记录</h3>\n          </div>\n          \n          <el-table \n            :data=\"records\" \n            style=\"width: 100%\" \n            border \n            v-loading=\"loading\"\n            stripe\n          >\n            <el-table-column prop=\"unit_name\" label=\"单位\" width=\"100\" />\n            <el-table-column prop=\"waste_type_name\" label=\"废物类型\" width=\"100\" />\n            <el-table-column prop=\"location\" label=\"产生地点\" />\n            <el-table-column prop=\"collection_start_time\" label=\"收集开始时间\" width=\"160\" />\n            <el-table-column prop=\"quantity\" label=\"数量(kg)\" width=\"80\" />\n            <el-table-column prop=\"created_at\" label=\"记录时间\" width=\"160\" />\n            <el-table-column label=\"现场照片\" width=\"100\">\n              <template #default=\"scope\">\n                <el-image \n                  v-if=\"scope.row.photo_path\"\n                  :src=\"`http://localhost:3000${scope.row.photo_path}`\"\n                  :preview-src-list=\"[`http://localhost:3000${scope.row.photo_path}`]\"\n                  fit=\"cover\"\n                  class=\"record-image\"\n                >\n                  <template #error>\n                    <div class=\"image-error\">\n                      <el-icon><picture-failed /></el-icon>\n                    </div>\n                  </template>\n                </el-image>\n                <span v-else>无照片</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"120\">\n              <template #default=\"scope\">\n                <el-button \n                  type=\"primary\" \n                  size=\"small\" \n                  @click=\"editRecord(scope.row.id)\"\n                  text\n                >\n                  编辑\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"empty-block\" v-if=\"records.length === 0 && !loading\">\n            <el-empty description=\"暂无废物记录\" />\n          </div>\n        </el-card>\n      </div>\n    </div>\n\n    <div class=\"footer\">\n      <p>&copy; 2025 危险废物管理系统</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { Plus, Refresh, PictureFailed } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\n\nexport default {\n  name: 'AdminRecordsView',\n  components: {\n    Plus,\n    Refresh,\n    PictureFailed\n  },\n  setup() {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n\n    onMounted(async () => {\n      // 验证用户是否为超级管理员\n      if (!auth.state.isLoggedIn || auth.state.user.role_id !== 3) {\n        ElMessage.error('权限不足');\n        router.push('/login');\n        return;\n      }\n      \n      await fetchRecords();\n    });\n\n    const fetchRecords = async () => {\n      loading.value = true;\n      try {\n        // 使用超级管理员ID获取所有记录\n        const response = await axios.get(`http://localhost:3000/api/waste-records/user/${auth.state.user.id}`);\n        records.value = response.data;\n        \n        // 格式化日期\n        records.value.forEach(record => {\n          record.created_at = formatDateTime(record.created_at);\n          record.collection_start_time = formatDateTime(record.collection_start_time);\n        });\n      } catch (error) {\n        console.error('获取废物记录失败:', error);\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const formatDateTime = (dateTimeStr) => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    };\n\n    const refreshRecords = () => {\n      fetchRecords();\n    };\n\n    const addNewRecord = () => {\n      router.push('/record/new');\n    };\n\n    const editRecord = (recordId) => {\n      router.push(`/record/${recordId}`);\n    };\n\n    return {\n      records,\n      loading,\n      refreshRecords,\n      addNewRecord,\n      editRecord\n    };\n  }\n};\n</script>\n\n<style scoped>\n.admin-records-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.header {\n  background-color: #409EFF;\n  color: white;\n  padding: 20px;\n  text-align: center;\n}\n\n.content {\n  flex: 1;\n  padding: 30px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20px;\n  gap: 10px;\n}\n\n.records-wrapper {\n  margin-top: 20px;\n}\n\n.records-card {\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  margin-bottom: 20px;\n}\n\n.card-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.record-image {\n  width: 50px;\n  height: 50px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.image-error {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  background-color: #f5f7fa;\n  color: #909399;\n}\n\n.empty-block {\n  margin: 20px 0;\n}\n\n.footer {\n  background-color: #f5f5f5;\n  padding: 15px;\n  text-align: center;\n  color: #666;\n}\n</style>\n"],"mappings":"AAiFA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,SAAQ,QAAS,cAAc;AACxC,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,IAAI,EAAEC,OAAO,EAAEC,aAAY,QAAS,yBAAyB;AACtE,OAAOC,IAAG,MAAO,eAAe;AAEhC,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVL,IAAI;IACJC,OAAO;IACPC;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIV,SAAS,CAAC,CAAC;IAC1B,MAAMW,OAAM,GAAIb,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMc,OAAM,GAAId,GAAG,CAAC,KAAK,CAAC;IAE1BC,SAAS,CAAC,YAAY;MACpB;MACA,IAAI,CAACO,IAAI,CAACO,KAAK,CAACC,UAAS,IAAKR,IAAI,CAACO,KAAK,CAACE,IAAI,CAACC,OAAM,KAAM,CAAC,EAAE;QAC3Df,SAAS,CAACgB,KAAK,CAAC,MAAM,CAAC;QACvBP,MAAM,CAACQ,IAAI,CAAC,QAAQ,CAAC;QACrB;MACF;MAEA,MAAMC,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF,MAAMA,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/BP,OAAO,CAACQ,KAAI,GAAI,IAAI;MACpB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAC,gDAAgDhB,IAAI,CAACO,KAAK,CAACE,IAAI,CAACQ,EAAE,EAAE,CAAC;QACtGZ,OAAO,CAACS,KAAI,GAAIC,QAAQ,CAACG,IAAI;;QAE7B;QACAb,OAAO,CAACS,KAAK,CAACK,OAAO,CAACC,MAAK,IAAK;UAC9BA,MAAM,CAACC,UAAS,GAAIC,cAAc,CAACF,MAAM,CAACC,UAAU,CAAC;UACrDD,MAAM,CAACG,qBAAoB,GAAID,cAAc,CAACF,MAAM,CAACG,qBAAqB,CAAC;QAC7E,CAAC,CAAC;MACJ,EAAE,OAAOZ,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjChB,SAAS,CAACgB,KAAK,CAAC,UAAU,CAAC;MAC7B,UAAU;QACRL,OAAO,CAACQ,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAED,MAAMQ,cAAa,GAAKG,WAAW,IAAK;MACtC,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;MAC3B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,WAAW,CAAC;MAClC,OAAOC,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;QAClCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,cAAa,GAAIA,CAAA,KAAM;MAC3BvB,YAAY,CAAC,CAAC;IAChB,CAAC;IAED,MAAMwB,YAAW,GAAIA,CAAA,KAAM;MACzBjC,MAAM,CAACQ,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,MAAM0B,UAAS,GAAKC,QAAQ,IAAK;MAC/BnC,MAAM,CAACQ,IAAI,CAAC,WAAW2B,QAAQ,EAAE,CAAC;IACpC,CAAC;IAED,OAAO;MACLlC,OAAO;MACPC,OAAO;MACP8B,cAAc;MACdC,YAAY;MACZC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}