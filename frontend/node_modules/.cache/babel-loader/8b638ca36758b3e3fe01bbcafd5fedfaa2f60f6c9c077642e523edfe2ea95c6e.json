{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-management-container\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = {\n  class: \"toolbar\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"password-hint\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"password-hint\"\n};\nconst _hoisted_7 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_arrow_left = _resolveComponent(\"arrow-left\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_plus = _resolveComponent(\"plus\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"back-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.goBack && $setup.goBack(...args))\n  }, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_arrow_left)]),\n    _: 1 /* STABLE */\n  }), _cache[8] || (_cache[8] = _createTextVNode(\" 返回 \"))]), _cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"人员管理\", -1 /* HOISTED */)), _cache[10] || (_cache[10] = _createElementVNode(\"div\", null, null, -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.openAddDialog\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode(_component_plus)]),\n      _: 1 /* STABLE */\n    }), _cache[11] || (_cache[11] = _createTextVNode(\" 添加用户 \"))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.users,\n    border: \"\",\n    stripe: \"\",\n    style: {\n      \"width\": \"100%\",\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"id\",\n      label: \"ID\",\n      width: \"60\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"username\",\n      label: \"姓名\",\n      width: \"120\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"phone\",\n      label: \"手机号\",\n      width: \"140\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"role_name\",\n      label: \"角色\",\n      width: \"120\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"unit_name\",\n      label: \"单位\",\n      \"min-width\": \"120\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"180\",\n      fixed: \"right\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        size: \"small\",\n        onClick: $event => $setup.handleEdit(scope.row)\n      }, {\n        default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"编辑\")])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_popconfirm, {\n        title: \"确定要删除此用户吗？\",\n        onConfirm: $event => $setup.handleDelete(scope.row)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          size: \"small\",\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"删除\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])]), _createCommentVNode(\" 添加/编辑用户对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.dialogVisible = $event),\n    title: $setup.isEdit ? '编辑用户' : '添加用户',\n    width: \"500px\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_7, [_createVNode(_component_el_button, {\n      onClick: _cache[6] || (_cache[6] = $event => $setup.dialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.submitForm,\n      loading: $setup.formLoading\n    }, {\n      default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\" 确认 \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\", \"loading\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"userForm\",\n      model: $setup.form,\n      rules: $setup.rules,\n      \"label-width\": \"100px\",\n      style: {\n        \"max-width\": \"400px\",\n        \"margin\": \"0 auto\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"姓名\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.username,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.username = $event),\n          placeholder: \"请输入姓名\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"手机号\",\n        prop: \"phone\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.phone,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.phone = $event),\n          placeholder: \"请输入手机号\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"角色\",\n        prop: \"roleId\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.form.roleId,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.roleId = $event),\n          placeholder: \"请选择角色\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 如果是超级管理员，可以添加所有类型用户 \"), $setup.isSuperAdmin ? (_openBlock(), _createBlock(_component_el_option, {\n            key: 0,\n            value: 3,\n            label: \"超级管理员\"\n          })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_option, {\n            value: 2,\n            label: \"单位管理员\"\n          }), _createVNode(_component_el_option, {\n            value: 1,\n            label: \"基层员工\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $setup.form.roleId !== 3 ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"单位\",\n        prop: \"unitId\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.form.unitId,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.unitId = $event),\n          placeholder: \"请选择单位\",\n          style: {\n            \"width\": \"100%\"\n          },\n          disabled: !$setup.isSuperAdmin && $setup.isEdit\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.units, unit => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: unit.id,\n              label: unit.name,\n              value: unit.id\n            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"disabled\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.form.roleId === 2 || $setup.form.roleId === 3 ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.password,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.form.password = $event),\n          placeholder: \"请输入密码\",\n          type: \"password\",\n          \"show-password\": \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), !$setup.isEdit ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"管理员账号必须设置密码\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"不修改密码请留空\"))]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"title\"]), _cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    class: \"footer\"\n  }, [_createElementVNode(\"p\", null, \"© 2025 危险废物管理系统\")], -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","goBack","_createVNode","_component_el_icon","default","_withCtx","_component_arrow_left","_","_createTextVNode","_hoisted_3","_hoisted_4","_component_el_button","type","openAddDialog","_component_plus","_createBlock","_component_el_table","data","users","border","stripe","style","_component_el_table_column","prop","label","width","fixed","scope","size","$event","handleEdit","row","_component_el_popconfirm","title","onConfirm","handleDelete","reference","loading","_createCommentVNode","_component_el_dialog","modelValue","dialogVisible","isEdit","footer","_hoisted_7","submitForm","formLoading","_component_el_form","ref","model","form","rules","_component_el_form_item","_component_el_input","username","placeholder","phone","_component_el_select","roleId","isSuperAdmin","_component_el_option","value","unitId","disabled","_Fragment","_renderList","units","unit","id","name","password","_hoisted_5","_hoisted_6"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\UserManagement.vue"],"sourcesContent":["<template>\n  <div class=\"user-management-container\">\n    <div class=\"header\">\n      <div class=\"back-button\" @click=\"goBack\">\n        <el-icon><arrow-left /></el-icon> 返回\n      </div>\n      <h1>人员管理</h1>\n      <div></div>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"toolbar\">\n        <el-button type=\"primary\" @click=\"openAddDialog\">\n          <el-icon><plus /></el-icon> 添加用户\n        </el-button>\n      </div>\n\n      <el-table\n        v-loading=\"loading\"\n        :data=\"users\"\n        border\n        stripe\n        style=\"width: 100%; margin-top: 20px;\"\n      >\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\" />\n        <el-table-column prop=\"username\" label=\"姓名\" width=\"120\" />\n        <el-table-column prop=\"phone\" label=\"手机号\" width=\"140\" />\n        <el-table-column prop=\"role_name\" label=\"角色\" width=\"120\" />\n        <el-table-column prop=\"unit_name\" label=\"单位\" min-width=\"120\" />\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-popconfirm\n              title=\"确定要删除此用户吗？\"\n              @confirm=\"handleDelete(scope.row)\"\n            >\n              <template #reference>\n                <el-button size=\"small\" type=\"danger\">删除</el-button>\n              </template>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 添加/编辑用户对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"isEdit ? '编辑用户' : '添加用户'\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"userForm\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n        style=\"max-width: 400px; margin: 0 auto;\"\n      >\n        <el-form-item label=\"姓名\" prop=\"username\">\n          <el-input v-model=\"form.username\" placeholder=\"请输入姓名\" />\n        </el-form-item>\n        \n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"form.phone\" placeholder=\"请输入手机号\" />\n        </el-form-item>\n        \n        <el-form-item label=\"角色\" prop=\"roleId\">\n          <el-select v-model=\"form.roleId\" placeholder=\"请选择角色\" style=\"width: 100%\">\n            <!-- 如果是超级管理员，可以添加所有类型用户 -->\n            <el-option v-if=\"isSuperAdmin\" :value=\"3\" label=\"超级管理员\" />\n            <el-option :value=\"2\" label=\"单位管理员\" />\n            <el-option :value=\"1\" label=\"基层员工\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"单位\" prop=\"unitId\" v-if=\"form.roleId !== 3\">\n          <el-select \n            v-model=\"form.unitId\" \n            placeholder=\"请选择单位\" \n            style=\"width: 100%\"\n            :disabled=\"!isSuperAdmin && isEdit\"\n          >\n            <el-option \n              v-for=\"unit in units\" \n              :key=\"unit.id\" \n              :label=\"unit.name\" \n              :value=\"unit.id\" \n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item \n          label=\"密码\" \n          prop=\"password\" \n          v-if=\"form.roleId === 2 || form.roleId === 3\"\n        >\n          <el-input \n            v-model=\"form.password\" \n            placeholder=\"请输入密码\" \n            type=\"password\"\n            show-password\n          />\n          <div class=\"password-hint\" v-if=\"!isEdit\">管理员账号必须设置密码</div>\n          <div class=\"password-hint\" v-else>不修改密码请留空</div>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"formLoading\">\n            确认\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <div class=\"footer\">\n      <p>&copy; 2025 危险废物管理系统</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { ArrowLeft, Plus } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\n\nexport default {\n  name: 'UserManagement',\n  components: {\n    ArrowLeft,\n    Plus\n  },\n  setup() {\n    const router = useRouter();\n    const loading = ref(false);\n    const formLoading = ref(false);\n    const dialogVisible = ref(false);\n    const isEdit = ref(false);\n    const userForm = ref(null);\n    const users = ref([]);\n    const units = ref([]);\n    \n    // 判断当前用户是否为超级管理员\n    const isSuperAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n    \n    // 当前登录用户的单位ID\n    const currentUnitId = computed(() => {\n      return auth.state.isLoggedIn ? auth.state.user.unit_id : null;\n    });\n    \n    // 表单数据\n    const form = reactive({\n      id: null,\n      username: '',\n      phone: '',\n      roleId: 1,\n      unitId: null,\n      password: ''\n    });\n    \n    // 表单验证规则\n    const rules = {\n      username: [\n        { required: true, message: '请输入姓名', trigger: 'blur' },\n        { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n      ],\n      phone: [\n        { required: true, message: '请输入手机号', trigger: 'blur' },\n        { pattern: /^1[3-9]\\d{9}$/, message: '请输入有效的手机号码', trigger: 'blur' }\n      ],\n      roleId: [\n        { required: true, message: '请选择角色', trigger: 'change' }\n      ],\n      unitId: [\n        { required: true, message: '请选择单位', trigger: 'change' }\n      ],\n      password: [\n        { \n          required: function() {\n            // 新增管理员账号时密码必填\n            return !isEdit.value && (form.roleId === 2 || form.roleId === 3);\n          }, \n          message: '请输入密码', \n          trigger: 'blur' \n        },\n        { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n      ]\n    };\n    \n    // 获取用户列表\n    const fetchUsers = async () => {\n      loading.value = true;\n      try {\n        let response;\n        if (isSuperAdmin.value) {\n          // 超级管理员获取所有用户\n          response = await axios.get('http://localhost:3000/api/users');\n        } else {\n          // 单位管理员只获取本单位员工\n          response = await axios.get(`http://localhost:3000/api/units/${currentUnitId.value}/users`);\n        }\n        users.value = response.data;\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        ElMessage.error('获取用户列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/units');\n        units.value = response.data;\n      } catch (error) {\n        console.error('Error fetching units:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n    \n    // 打开添加对话框\n    const openAddDialog = () => {\n      isEdit.value = false;\n      resetForm();\n      dialogVisible.value = true;\n      \n      // 如果是单位管理员，默认选择当前单位\n      if (!isSuperAdmin.value) {\n        form.unitId = currentUnitId.value;\n      }\n    };\n    \n    // 处理编辑\n    const handleEdit = (row) => {\n      isEdit.value = true;\n      form.id = row.id;\n      form.username = row.username;\n      form.phone = row.phone;\n      form.roleId = row.role_id;\n      form.unitId = row.unit_id;\n      form.password = ''; // 编辑时密码字段为空\n      dialogVisible.value = true;\n    };\n    \n    // 处理删除\n    const handleDelete = async (row) => {\n      try {\n        await axios.delete(`http://localhost:3000/api/users/${row.id}`);\n        ElMessage.success('用户删除成功');\n        fetchUsers();\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        let errorMsg = '删除用户失败';\n        if (error.response && error.response.data && error.response.data.error) {\n          errorMsg = error.response.data.error;\n        }\n        ElMessage.error(errorMsg);\n      }\n    };\n    \n    // 重置表单\n    const resetForm = () => {\n      if (userForm.value) {\n        userForm.value.resetFields();\n      }\n      form.id = null;\n      form.username = '';\n      form.phone = '';\n      form.roleId = 1;\n      form.unitId = null;\n      form.password = '';\n    };\n    \n    // 提交表单\n    const submitForm = () => {\n      userForm.value.validate(async (valid) => {\n        if (valid) {\n          formLoading.value = true;\n          try {\n            const userData = {\n              username: form.username,\n              phone: form.phone,\n              roleId: form.roleId,\n              unitId: form.roleId !== 3 ? form.unitId : null\n            };\n            \n            // 仅当有输入密码时，才添加密码字段\n            if (form.password) {\n              userData.password = form.password;\n            }\n            \n            if (isEdit.value) {\n              // 更新用户\n              await axios.put(`http://localhost:3000/api/users/${form.id}`, userData);\n              ElMessage.success('用户更新成功');\n            } else {\n              // 添加用户\n              await axios.post('http://localhost:3000/api/users', userData);\n              ElMessage.success('用户添加成功');\n            }\n            \n            dialogVisible.value = false;\n            fetchUsers();\n          } catch (error) {\n            console.error('Error submitting user form:', error);\n            let errorMsg = isEdit.value ? '更新用户失败' : '添加用户失败';\n            if (error.response && error.response.data && error.response.data.error) {\n              errorMsg = error.response.data.error;\n            }\n            ElMessage.error(errorMsg);\n          } finally {\n            formLoading.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n    \n    // 返回上一页\n    const goBack = () => {\n      router.back();\n    };\n    \n    onMounted(() => {\n      fetchUsers();\n      fetchUnits();\n    });\n    \n    return {\n      loading,\n      formLoading,\n      dialogVisible,\n      isEdit,\n      userForm,\n      users,\n      units,\n      form,\n      rules,\n      isSuperAdmin,\n      currentUnitId,\n      openAddDialog,\n      handleEdit,\n      handleDelete,\n      submitForm,\n      goBack\n    };\n  }\n};\n</script>\n\n<style scoped>\n.user-management-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.header {\n  background-color: #409EFF;\n  color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.back-button {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.content {\n  flex: 1;\n  padding: 30px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.toolbar {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 10px;\n}\n\n.password-hint {\n  font-size: 12px;\n  color: #999;\n  margin-top: 5px;\n}\n\n.footer {\n  background-color: #f5f5f5;\n  padding: 15px;\n  text-align: center;\n  color: #666;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}