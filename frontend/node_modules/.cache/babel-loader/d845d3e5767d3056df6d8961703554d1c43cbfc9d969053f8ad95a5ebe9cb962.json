{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { ArrowLeft, Document, Plus } from '@element-plus/icons-vue';\nexport default {\n  name: 'WasteForm',\n  components: {\n    ArrowLeft,\n    Document,\n    Plus\n  },\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const route = useRoute();\n    const wasteForm = ref(null);\n    const loading = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const photoFile = ref(null);\n    const form = reactive({\n      wasteTypeId: '',\n      location: '',\n      collectionStartTime: '',\n      quantity: 1.0,\n      photo: null\n    });\n    const rules = {\n      wasteTypeId: [{\n        required: true,\n        message: '请选择废物类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入废物产生地点',\n        trigger: 'blur'\n      }],\n      collectionStartTime: [{\n        required: true,\n        message: '请选择收集开始时间',\n        trigger: 'change'\n      }],\n      quantity: [{\n        required: true,\n        message: '请输入收集数量',\n        trigger: 'change'\n      }]\n    };\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchWasteTypes();\n    });\n    const fetchUnitName = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/units`);\n        const unit = response.data.find(u => u.id === parseInt(props.id));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/waste-types');\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('Error fetching waste types:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n    const handlePhotoChange = file => {\n      photoFile.value = file.raw;\n    };\n    const submitForm = () => {\n      wasteForm.value.validate(async valid => {\n        if (valid) {\n          loading.value = true;\n          try {\n            const formData = new FormData();\n            formData.append('unitId', props.id);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n            formData.append('collectionStartTime', form.collectionStartTime);\n            formData.append('quantity', form.quantity);\n            if (photoFile.value) {\n              formData.append('photo', photoFile.value);\n            }\n            await axios.post('http://localhost:3000/api/waste-records', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n            ElMessage.success('废物记录提交成功');\n            resetForm();\n          } catch (error) {\n            console.error('Error submitting form:', error);\n            ElMessage.error('提交失败，请稍后再试');\n          } finally {\n            loading.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n    const resetForm = () => {\n      if (wasteForm.value) {\n        wasteForm.value.resetFields();\n      }\n      photoFile.value = null;\n      form.quantity = 1.0;\n    };\n    const goBack = () => {\n      router.push('/');\n    };\n    const viewRecords = () => {\n      router.push({\n        name: 'RecordsList',\n        params: {\n          unitId: props.id\n        }\n      });\n    };\n    return {\n      form,\n      rules,\n      wasteForm,\n      loading,\n      unitName,\n      wasteTypes,\n      handlePhotoChange,\n      submitForm,\n      resetForm,\n      goBack,\n      viewRecords\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useRouter","useRoute","ElMessage","axios","ArrowLeft","Document","Plus","name","components","props","id","type","String","Number","required","setup","router","route","wasteForm","loading","unitName","wasteTypes","photoFile","form","wasteTypeId","location","collectionStartTime","quantity","photo","rules","message","trigger","fetchUnitName","fetchWasteTypes","response","get","unit","data","find","u","parseInt","value","error","console","handlePhotoChange","file","raw","submitForm","validate","valid","formData","FormData","append","post","headers","success","resetForm","warning","resetFields","goBack","push","viewRecords","params","unitId"],"sources":["C:\\Users\\10150\\Desktop\\hazardous-waste-management\\frontend\\src\\views\\WasteForm.vue"],"sourcesContent":["<template>\n  <div class=\"waste-form-container\">\n    <div class=\"header\">\n      <div class=\"back-button\" @click=\"goBack\">\n        <el-icon><arrow-left /></el-icon> 返回\n      </div>\n      <h1>危险废物填报</h1>\n      <div class=\"view-records\" @click=\"viewRecords\">\n        查看记录 <el-icon><document /></el-icon>\n      </div>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"unit-info\">\n        <h2>{{ unitName }}</h2>\n      </div>\n\n      <el-form \n        ref=\"wasteForm\" \n        :model=\"form\" \n        :rules=\"rules\" \n        label-width=\"120px\"\n        class=\"waste-form\"\n      >\n        <el-form-item label=\"废物类型\" prop=\"wasteTypeId\">\n          <el-select v-model=\"form.wasteTypeId\" placeholder=\"请选择废物类型\" style=\"width: 100%\">\n            <el-option \n              v-for=\"type in wasteTypes\" \n              :key=\"type.id\" \n              :label=\"type.name\" \n              :value=\"type.id\" \n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"产生地点\" prop=\"location\">\n          <el-input v-model=\"form.location\" placeholder=\"请输入废物产生地点\" />\n        </el-form-item>\n\n        <el-form-item label=\"收集开始时间\" prop=\"collectionStartTime\">\n          <el-date-picker\n            v-model=\"form.collectionStartTime\"\n            type=\"datetime\"\n            placeholder=\"选择收集开始时间\"\n            format=\"YYYY-MM-DD HH:mm:ss\"\n            value-format=\"YYYY-MM-DD HH:mm:ss\"\n            style=\"width: 100%\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"收集数量(kg)\" prop=\"quantity\">\n          <el-input-number \n            v-model=\"form.quantity\" \n            :min=\"0.01\" \n            :precision=\"2\" \n            :step=\"0.1\" \n            style=\"width: 100%\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"现场照片\" prop=\"photo\">\n          <el-upload\n            class=\"waste-photo-uploader\"\n            action=\"#\"\n            :auto-upload=\"false\"\n            :on-change=\"handlePhotoChange\"\n            :limit=\"1\"\n            list-type=\"picture-card\"\n          >\n            <el-icon><plus /></el-icon>\n          </el-upload>\n          <div class=\"photo-tip\">请上传废物现场照片</div>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"loading\">提交</el-button>\n          <el-button @click=\"resetForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div class=\"footer\">\n      <p>&copy; 2025 危险废物管理系统</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { ArrowLeft, Document, Plus } from '@element-plus/icons-vue';\n\nexport default {\n  name: 'WasteForm',\n  components: {\n    ArrowLeft,\n    Document,\n    Plus\n  },\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const route = useRoute();\n    const wasteForm = ref(null);\n    const loading = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const photoFile = ref(null);\n\n    const form = reactive({\n      wasteTypeId: '',\n      location: '',\n      collectionStartTime: '',\n      quantity: 1.0,\n      photo: null\n    });\n\n    const rules = {\n      wasteTypeId: [\n        { required: true, message: '请选择废物类型', trigger: 'change' }\n      ],\n      location: [\n        { required: true, message: '请输入废物产生地点', trigger: 'blur' }\n      ],\n      collectionStartTime: [\n        { required: true, message: '请选择收集开始时间', trigger: 'change' }\n      ],\n      quantity: [\n        { required: true, message: '请输入收集数量', trigger: 'change' }\n      ]\n    };\n\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchWasteTypes();\n    });\n\n    const fetchUnitName = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/units`);\n        const unit = response.data.find(u => u.id === parseInt(props.id));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/waste-types');\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('Error fetching waste types:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    const handlePhotoChange = (file) => {\n      photoFile.value = file.raw;\n    };\n\n    const submitForm = () => {\n      wasteForm.value.validate(async (valid) => {\n        if (valid) {\n          loading.value = true;\n          try {\n            const formData = new FormData();\n            formData.append('unitId', props.id);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n            formData.append('collectionStartTime', form.collectionStartTime);\n            formData.append('quantity', form.quantity);\n            \n            if (photoFile.value) {\n              formData.append('photo', photoFile.value);\n            }\n\n            await axios.post('http://localhost:3000/api/waste-records', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n\n            ElMessage.success('废物记录提交成功');\n            resetForm();\n          } catch (error) {\n            console.error('Error submitting form:', error);\n            ElMessage.error('提交失败，请稍后再试');\n          } finally {\n            loading.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n\n    const resetForm = () => {\n      if (wasteForm.value) {\n        wasteForm.value.resetFields();\n      }\n      photoFile.value = null;\n      form.quantity = 1.0;\n    };\n\n    const goBack = () => {\n      router.push('/');\n    };\n\n    const viewRecords = () => {\n      router.push({ name: 'RecordsList', params: { unitId: props.id } });\n    };\n\n    return {\n      form,\n      rules,\n      wasteForm,\n      loading,\n      unitName,\n      wasteTypes,\n      handlePhotoChange,\n      submitForm,\n      resetForm,\n      goBack,\n      viewRecords\n    };\n  }\n};\n</script>\n\n<style scoped>\n.waste-form-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.header {\n  background-color: #409EFF;\n  color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.back-button, .view-records {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.content {\n  flex: 1;\n  padding: 30px;\n  max-width: 800px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.unit-info {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.unit-info h2 {\n  color: #333;\n  border-bottom: 2px solid #409EFF;\n  display: inline-block;\n  padding-bottom: 5px;\n}\n\n.waste-form {\n  background-color: #f9f9f9;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.waste-photo-uploader {\n  width: 100%;\n}\n\n.photo-tip {\n  font-size: 12px;\n  color: #999;\n  margin-top: 5px;\n}\n\n.footer {\n  background-color: #f5f5f5;\n  padding: 15px;\n  text-align: center;\n  color: #666;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}