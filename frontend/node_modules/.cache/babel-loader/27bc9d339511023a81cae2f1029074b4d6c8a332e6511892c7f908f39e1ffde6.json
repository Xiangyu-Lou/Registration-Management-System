{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nexport default {\n  name: 'EditRecordView',\n  components: {\n    ArrowLeft,\n    Plus,\n    Clock,\n    ElImageViewer\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const recordForm = ref(null);\n    const loading = ref(false);\n    const submitting = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const units = ref([]);\n    const photoFiles = ref([]);\n    const photoList = ref([]);\n    const previewImages = ref([]);\n    const showViewer = ref(false);\n    const previewIndex = ref(0);\n\n    // 确定是新增还是编辑\n    const isNew = computed(() => !route.params.id || route.params.id === 'new');\n\n    // 是否为超级管理员\n    const isSuperAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n    const form = reactive({\n      unitId: '',\n      wasteTypeId: '',\n      location: '',\n      collectionDate: new Date().toISOString().slice(0, 10),\n      // 默认为当天\n      collectionTime: '08:00',\n      quantity: 0,\n      recordId: null,\n      creatorId: auth.state.user?.id || null\n    });\n    const rules = {\n      unitId: [{\n        required: true,\n        message: '请选择单位',\n        trigger: 'change'\n      }],\n      wasteTypeId: [{\n        required: true,\n        message: '请选择废物类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入废物产生地点',\n        trigger: 'blur'\n      }],\n      collectionDate: [{\n        required: false\n      }],\n      collectionTime: [{\n        required: false\n      }],\n      quantity: [{\n        required: true,\n        message: '请输入收集数量',\n        trigger: 'change'\n      }]\n    };\n    onMounted(async () => {\n      loading.value = true;\n      try {\n        // 获取废物类型\n        await fetchWasteTypes();\n\n        // 如果是超级管理员，获取所有单位\n        if (isSuperAdmin.value) {\n          await fetchUnits();\n        }\n\n        // 如果有记录ID，则获取记录详情\n        if (!isNew.value) {\n          await fetchRecordDetails(route.params.id);\n        } else {\n          // 新增记录默认使用当前用户的单位（非超级管理员）\n          if (!isSuperAdmin.value && auth.state.user) {\n            form.unitId = auth.state.user.unit_id;\n            await fetchUnitName(form.unitId);\n          }\n        }\n      } catch (error) {\n        console.error('初始化数据失败:', error);\n        ElMessage.error('加载数据失败，请刷新重试');\n      } finally {\n        loading.value = false;\n      }\n    });\n\n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        units.value = response.data;\n      } catch (error) {\n        console.error('获取单位列表失败:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n\n    // 获取单位名称\n    const fetchUnitName = async unitId => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('获取单位信息失败:', error);\n      }\n    };\n\n    // 获取废物类型\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('获取废物类型失败:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    // 获取记录详情\n    const fetchRecordDetails = async recordId => {\n      try {\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/detail/${recordId}`);\n        const record = response.data;\n\n        // 更新表单数据\n        form.unitId = record.unit_id;\n        form.wasteTypeId = record.waste_type_id;\n        form.location = record.location;\n\n        // 拆分收集时间为日期和时间\n        if (record.collection_start_time) {\n          const dateTime = new Date(record.collection_start_time);\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\n          form.collectionTime = dateTime.toISOString().slice(11, 16);\n        }\n        form.quantity = record.quantity;\n        form.recordId = record.id;\n\n        // 设置单位名称\n        unitName.value = record.unit_name;\n\n        // 设置图片预览\n        if (record.photo_path) {\n          try {\n            // 尝试解析JSON格式的照片路径数组\n            const photoPaths = JSON.parse(record.photo_path);\n            if (Array.isArray(photoPaths)) {\n              photoList.value = photoPaths.map((path, index) => ({\n                name: `现场照片${index + 1}`,\n                url: `${apiConfig.baseURL}${path}`\n              }));\n              // 更新预览图片列表\n              previewImages.value = photoList.value.map(item => item.url);\n            }\n          } catch (error) {\n            // 如果解析失败，可能是旧版本的单张照片格式\n            photoList.value = [{\n              name: '现场照片',\n              url: `${apiConfig.baseURL}${record.photo_path}`\n            }];\n            // 更新预览图片列表\n            previewImages.value = [`${apiConfig.baseURL}${record.photo_path}`];\n          }\n        }\n      } catch (error) {\n        console.error('获取记录详情失败:', error);\n        ElMessage.error('获取记录详情失败');\n      }\n    };\n\n    // 处理照片变更\n    const handlePhotoChange = (file, fileList) => {\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\n      // 更新预览图片列表\n      updatePreviewImages(fileList);\n    };\n\n    // 处理照片移除\n    const handlePhotoRemove = (file, fileList) => {\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\n      // 更新预览图片列表\n      updatePreviewImages(fileList);\n    };\n\n    // 更新预览图片列表\n    const updatePreviewImages = fileList => {\n      previewImages.value = fileList.map(file => {\n        if (file.url) {\n          return file.url;\n        } else if (file.raw) {\n          return URL.createObjectURL(file.raw);\n        }\n        return '';\n      }).filter(url => url);\n    };\n\n    // 处理图片预览\n    const handlePictureCardPreview = file => {\n      // 找到当前图片在预览列表中的索引\n      const index = previewImages.value.findIndex(url => {\n        return url === file.url || file.raw && url === URL.createObjectURL(file.raw);\n      });\n      if (index !== -1) {\n        previewIndex.value = index;\n      } else {\n        previewIndex.value = 0;\n      }\n\n      // 显示图片预览器\n      showViewer.value = true;\n    };\n\n    // 关闭图片预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n\n    // 提交表单\n    const submitForm = () => {\n      recordForm.value.validate(async valid => {\n        if (valid) {\n          submitting.value = true;\n          try {\n            const formData = new FormData();\n            formData.append('unitId', form.unitId);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n\n            // 组合日期和时间，如果有的话\n            if (form.collectionDate && form.collectionTime) {\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\n              formData.append('collectionStartTime', combinedDateTime);\n            }\n            formData.append('quantity', form.quantity);\n            formData.append('creatorId', form.creatorId);\n\n            // 添加多张照片\n            if (photoFiles.value && photoFiles.value.length > 0) {\n              photoFiles.value.forEach(file => {\n                if (file) {\n                  formData.append('photos', file);\n                }\n              });\n            }\n            if (isNew.value) {\n              // 新增记录\n              await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\n              ElMessage.success('废物记录添加成功');\n            } else {\n              // 更新记录\n              await httpService.postForm(`${apiConfig.endpoints.wasteRecords}/${form.recordId}`, formData);\n              ElMessage.success('废物记录更新成功');\n            }\n\n            // 返回记录列表\n            goBack();\n          } catch (error) {\n            console.error('提交表单失败:', error);\n            ElMessage.error('保存失败，请稍后再试');\n          } finally {\n            submitting.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n\n    // 返回上一页\n    const goBack = () => {\n      if (isSuperAdmin.value) {\n        router.push('/admin-records');\n      } else {\n        router.push({\n          name: 'RecordsList',\n          params: {\n            unitId: auth.state.user.unit_id\n          }\n        });\n      }\n    };\n    return {\n      form,\n      rules,\n      recordForm,\n      loading,\n      submitting,\n      unitName,\n      wasteTypes,\n      units,\n      photoList,\n      previewImages,\n      showViewer,\n      previewIndex,\n      isNew,\n      isSuperAdmin,\n      handlePhotoChange,\n      handlePhotoRemove,\n      handlePictureCardPreview,\n      closeViewer,\n      submitForm,\n      goBack\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useRouter","useRoute","ElMessage","ElImageViewer","httpService","apiConfig","ArrowLeft","Plus","Clock","auth","name","components","setup","router","route","recordForm","loading","submitting","unitName","wasteTypes","units","photoFiles","photoList","previewImages","showViewer","previewIndex","isNew","params","id","isSuperAdmin","state","isLoggedIn","user","role_id","form","unitId","wasteTypeId","location","collectionDate","Date","toISOString","slice","collectionTime","quantity","recordId","creatorId","rules","required","message","trigger","value","fetchWasteTypes","fetchUnits","fetchRecordDetails","unit_id","fetchUnitName","error","console","response","get","endpoints","data","unit","find","u","parseInt","wasteRecords","record","waste_type_id","collection_start_time","dateTime","unit_name","photo_path","photoPaths","JSON","parse","Array","isArray","map","path","index","url","baseURL","item","handlePhotoChange","file","fileList","f","raw","filter","updatePreviewImages","handlePhotoRemove","URL","createObjectURL","handlePictureCardPreview","findIndex","closeViewer","submitForm","validate","valid","formData","FormData","append","combinedDateTime","length","forEach","postForm","success","goBack","warning","push"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\EditRecord.vue"],"sourcesContent":["<template>\n  <div class=\"edit-record-container\">\n    <div class=\"header\">\n      <div class=\"back-button\" @click=\"goBack\">\n        <el-icon><arrow-left /></el-icon> 返回\n      </div>\n      <h1>{{ isNew ? '新增废物记录' : '编辑废物记录' }}</h1>\n      <div></div>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"form-header\">\n        <h2>{{ unitName }}</h2>\n      </div>\n\n      <el-form \n        ref=\"recordForm\" \n        :model=\"form\" \n        :rules=\"rules\" \n        label-width=\"120px\"\n        class=\"record-form\"\n        v-loading=\"loading\"\n      >\n        <!-- 如果是超级管理员且是新增记录，显示单位选择 -->\n        <el-form-item label=\"单位\" prop=\"unitId\" v-if=\"isSuperAdmin && isNew\">\n          <el-select v-model=\"form.unitId\" placeholder=\"请选择单位\" style=\"width: 100%\">\n            <el-option \n              v-for=\"unit in units\" \n              :key=\"unit.id\" \n              :label=\"unit.name\" \n              :value=\"unit.id\" \n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"废物类型\" prop=\"wasteTypeId\">\n          <el-select v-model=\"form.wasteTypeId\" placeholder=\"请选择废物类型\" style=\"width: 100%\">\n            <el-option \n              v-for=\"type in wasteTypes\" \n              :key=\"type.id\" \n              :label=\"type.name\" \n              :value=\"type.id\" \n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"产生地点\" prop=\"location\">\n          <el-input v-model=\"form.location\" placeholder=\"请输入废物产生地点\" />\n        </el-form-item>\n\n        <el-form-item label=\"收集日期\">\n          <el-date-picker\n            v-model=\"form.collectionDate\"\n            type=\"date\"\n            placeholder=\"选择日期\"\n            format=\"YYYY-MM-DD\"\n            value-format=\"YYYY-MM-DD\"\n            style=\"width: 100%\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"收集时间\">\n          <el-time-picker\n            v-model=\"form.collectionTime\"\n            format=\"HH:mm\"\n            placeholder=\"选择时间\"\n            value-format=\"HH:mm\"\n            style=\"width: 100%\"\n          >\n            <template #prefix>\n              <el-icon><clock /></el-icon>\n            </template>\n          </el-time-picker>\n          <!-- <div class=\"time-tip\">只需选择小时和分钟</div> -->\n        </el-form-item>\n\n        <el-form-item label=\"收集数量(吨)\" prop=\"quantity\">\n          <el-input-number \n            v-model=\"form.quantity\" \n            :min=\"0\" \n            :precision=\"3\" \n            :step=\"0.001\" \n            style=\"width: 100%\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"现场照片\" prop=\"photos\">\n          <el-upload\n            class=\"waste-photo-uploader\"\n            action=\"#\"\n            :auto-upload=\"false\"\n            :on-change=\"handlePhotoChange\"\n            :on-remove=\"handlePhotoRemove\"\n            :file-list=\"photoList\"\n            :limit=\"10\"\n            multiple\n            list-type=\"picture-card\"\n            :on-preview=\"handlePictureCardPreview\"\n          >\n            <el-icon><plus /></el-icon>\n          </el-upload>\n          <div class=\"photo-tip\">请上传废物现场照片（最多10张）</div>\n          \n          <!-- 添加独立的图片预览组件 -->\n          <el-image-viewer\n            v-if=\"showViewer\"\n            :url-list=\"previewImages\"\n            :initial-index=\"previewIndex\"\n            @close=\"closeViewer\"\n          />\n        </el-form-item>\n\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">保存</el-button>\n          <el-button @click=\"goBack\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div class=\"footer\">\n      <p>&copy; 2025 危险废物管理系统</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\n\nexport default {\n  name: 'EditRecordView',\n  components: {\n    ArrowLeft,\n    Plus,\n    Clock,\n    ElImageViewer\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const recordForm = ref(null);\n    const loading = ref(false);\n    const submitting = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const units = ref([]);\n    const photoFiles = ref([]);\n    const photoList = ref([]);\n    const previewImages = ref([]);\n    const showViewer = ref(false);\n    const previewIndex = ref(0);\n\n    // 确定是新增还是编辑\n    const isNew = computed(() => !route.params.id || route.params.id === 'new');\n    \n    // 是否为超级管理员\n    const isSuperAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    const form = reactive({\n      unitId: '',\n      wasteTypeId: '',\n      location: '',\n      collectionDate: new Date().toISOString().slice(0, 10), // 默认为当天\n      collectionTime: '08:00',\n      quantity: 0,\n      recordId: null,\n      creatorId: auth.state.user?.id || null\n    });\n\n    const rules = {\n      unitId: [\n        { required: true, message: '请选择单位', trigger: 'change' }\n      ],\n      wasteTypeId: [\n        { required: true, message: '请选择废物类型', trigger: 'change' }\n      ],\n      location: [\n        { required: true, message: '请输入废物产生地点', trigger: 'blur' }\n      ],\n      collectionDate: [\n        { required: false }\n      ],\n      collectionTime: [\n        { required: false }\n      ],\n      quantity: [\n        { required: true, message: '请输入收集数量', trigger: 'change' }\n      ]\n    };\n\n    onMounted(async () => {\n      loading.value = true;\n      \n      try {\n        // 获取废物类型\n        await fetchWasteTypes();\n        \n        // 如果是超级管理员，获取所有单位\n        if (isSuperAdmin.value) {\n          await fetchUnits();\n        }\n        \n        // 如果有记录ID，则获取记录详情\n        if (!isNew.value) {\n          await fetchRecordDetails(route.params.id);\n        } else {\n          // 新增记录默认使用当前用户的单位（非超级管理员）\n          if (!isSuperAdmin.value && auth.state.user) {\n            form.unitId = auth.state.user.unit_id;\n            await fetchUnitName(form.unitId);\n          }\n        }\n      } catch (error) {\n        console.error('初始化数据失败:', error);\n        ElMessage.error('加载数据失败，请刷新重试');\n      } finally {\n        loading.value = false;\n      }\n    });\n\n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        units.value = response.data;\n      } catch (error) {\n        console.error('获取单位列表失败:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n\n    // 获取单位名称\n    const fetchUnitName = async (unitId) => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('获取单位信息失败:', error);\n      }\n    };\n\n    // 获取废物类型\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('获取废物类型失败:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    // 获取记录详情\n    const fetchRecordDetails = async (recordId) => {\n      try {\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/detail/${recordId}`);\n        const record = response.data;\n        \n        // 更新表单数据\n        form.unitId = record.unit_id;\n        form.wasteTypeId = record.waste_type_id;\n        form.location = record.location;\n        \n        // 拆分收集时间为日期和时间\n        if (record.collection_start_time) {\n          const dateTime = new Date(record.collection_start_time);\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\n          form.collectionTime = dateTime.toISOString().slice(11, 16);\n        }\n        \n        form.quantity = record.quantity;\n        form.recordId = record.id;\n        \n        // 设置单位名称\n        unitName.value = record.unit_name;\n        \n        // 设置图片预览\n        if (record.photo_path) {\n          try {\n            // 尝试解析JSON格式的照片路径数组\n            const photoPaths = JSON.parse(record.photo_path);\n            if (Array.isArray(photoPaths)) {\n              photoList.value = photoPaths.map((path, index) => ({\n                name: `现场照片${index + 1}`,\n                url: `${apiConfig.baseURL}${path}`\n              }));\n              // 更新预览图片列表\n              previewImages.value = photoList.value.map(item => item.url);\n            }\n          } catch (error) {\n            // 如果解析失败，可能是旧版本的单张照片格式\n            photoList.value = [\n              {\n                name: '现场照片',\n                url: `${apiConfig.baseURL}${record.photo_path}`\n              }\n            ];\n            // 更新预览图片列表\n            previewImages.value = [`${apiConfig.baseURL}${record.photo_path}`];\n          }\n        }\n      } catch (error) {\n        console.error('获取记录详情失败:', error);\n        ElMessage.error('获取记录详情失败');\n      }\n    };\n\n    // 处理照片变更\n    const handlePhotoChange = (file, fileList) => {\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\n      // 更新预览图片列表\n      updatePreviewImages(fileList);\n    };\n\n    // 处理照片移除\n    const handlePhotoRemove = (file, fileList) => {\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\n      // 更新预览图片列表\n      updatePreviewImages(fileList);\n    };\n\n    // 更新预览图片列表\n    const updatePreviewImages = (fileList) => {\n      previewImages.value = fileList.map(file => {\n        if (file.url) {\n          return file.url;\n        } else if (file.raw) {\n          return URL.createObjectURL(file.raw);\n        }\n        return '';\n      }).filter(url => url);\n    };\n\n    // 处理图片预览\n    const handlePictureCardPreview = (file) => {\n      // 找到当前图片在预览列表中的索引\n      const index = previewImages.value.findIndex(url => {\n        return url === file.url || (file.raw && url === URL.createObjectURL(file.raw));\n      });\n      \n      if (index !== -1) {\n        previewIndex.value = index;\n      } else {\n        previewIndex.value = 0;\n      }\n      \n      // 显示图片预览器\n      showViewer.value = true;\n    };\n    \n    // 关闭图片预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n\n    // 提交表单\n    const submitForm = () => {\n      recordForm.value.validate(async (valid) => {\n        if (valid) {\n          submitting.value = true;\n          \n          try {\n            const formData = new FormData();\n            formData.append('unitId', form.unitId);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n            \n            // 组合日期和时间，如果有的话\n            if (form.collectionDate && form.collectionTime) {\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\n              formData.append('collectionStartTime', combinedDateTime);\n            }\n            formData.append('quantity', form.quantity);\n            formData.append('creatorId', form.creatorId);\n            \n            // 添加多张照片\n            if (photoFiles.value && photoFiles.value.length > 0) {\n              photoFiles.value.forEach(file => {\n                if (file) {\n                  formData.append('photos', file);\n                }\n              });\n            }\n            \n            if (isNew.value) {\n              // 新增记录\n              await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\n              ElMessage.success('废物记录添加成功');\n            } else {\n              // 更新记录\n              await httpService.postForm(`${apiConfig.endpoints.wasteRecords}/${form.recordId}`, formData);\n              ElMessage.success('废物记录更新成功');\n            }\n            \n            // 返回记录列表\n            goBack();\n          } catch (error) {\n            console.error('提交表单失败:', error);\n            ElMessage.error('保存失败，请稍后再试');\n          } finally {\n            submitting.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n\n    // 返回上一页\n    const goBack = () => {\n      if (isSuperAdmin.value) {\n        router.push('/admin-records');\n      } else {\n        router.push({ \n          name: 'RecordsList', \n          params: { unitId: auth.state.user.unit_id } \n        });\n      }\n    };\n\n    return {\n      form,\n      rules,\n      recordForm,\n      loading,\n      submitting,\n      unitName,\n      wasteTypes,\n      units,\n      photoList,\n      previewImages,\n      showViewer,\n      previewIndex,\n      isNew,\n      isSuperAdmin,\n      handlePhotoChange,\n      handlePhotoRemove,\n      handlePictureCardPreview,\n      closeViewer,\n      submitForm,\n      goBack\n    };\n  }\n};\n</script>\n\n<style scoped>\n.edit-record-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.header {\n  background-color: #409EFF;\n  color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.back-button {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.content {\n  flex: 1;\n  padding: 30px;\n  max-width: 800px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.form-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.form-header h2 {\n  color: #333;\n  border-bottom: 2px solid #409EFF;\n  display: inline-block;\n  padding-bottom: 5px;\n}\n\n.record-form {\n  background-color: #f9f9f9;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.waste-photo-uploader {\n  width: 100%;\n}\n\n.photo-tip, .time-tip {\n  font-size: 12px;\n  color: #999;\n  margin-top: 5px;\n}\n\n.footer {\n  background-color: #f5f5f5;\n  padding: 15px;\n  text-align: center;\n  color: #666;\n}\n</style>\n\n<style>\n/* 修复Element Plus图片预览组件的z-index问题 */\n.el-image-viewer__wrapper {\n  z-index: 2147483647 !important; /* 使用最大可能的z-index值 */\n  position: fixed !important;\n}\n\n/* 确保图片预览的遮罩层也在最上层 */\n.el-image-viewer__mask {\n  z-index: 2147483646 !important;\n  position: fixed !important;\n}\n\n/* 确保图片预览的操作按钮在最上层 */\n.el-image-viewer__btn {\n  z-index: 2147483647 !important;\n  position: fixed !important;\n}\n\n/* 确保图片预览的关闭按钮在最上层 */\n.el-image-viewer__close {\n  z-index: 2147483647 !important;\n  position: fixed !important;\n}\n\n/* 确保图片预览的图片在最上层 */\n.el-image-viewer__img {\n  z-index: 2147483646 !important;\n  position: relative !important;\n}\n\n/* 确保图片预览的操作栏在最上层 */\n.el-image-viewer__actions {\n  z-index: 2147483647 !important;\n  position: fixed !important;\n}\n\n/* 确保图片预览的缩放按钮在最上层 */\n.el-image-viewer__actions__inner {\n  z-index: 2147483647 !important;\n  position: relative !important;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}