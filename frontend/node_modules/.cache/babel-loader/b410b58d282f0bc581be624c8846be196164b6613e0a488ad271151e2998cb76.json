{"ast":null,"code":"// 用于导出数据到Excel的工具函数\nimport * as XLSX from 'xlsx';\n\n/**\n * 将数据导出为Excel文件\n * @param {Array} data - 要导出的数据数组\n * @param {String} fileName - 导出的文件名（不含后缀）\n * @param {Array} headers - 要导出的列标题和对应字段名\n */\nexport const exportToExcel = (data, fileName, headers) => {\n  // 如果没有数据，直接返回\n  if (!data || data.length === 0) {\n    return;\n  }\n\n  // 处理文件名\n  const safeFileName = fileName || '导出数据';\n  const fileNameWithExtension = `${safeFileName}_${new Date().toISOString().slice(0, 10)}.xlsx`;\n\n  // 准备表格数据\n  const worksheetData = [];\n\n  // 添加表头行\n  const headerRow = {};\n  headers.forEach(header => {\n    headerRow[header.field] = header.title;\n  });\n  worksheetData.push(headerRow);\n\n  // 添加数据行\n  data.forEach(item => {\n    const row = {};\n    headers.forEach(header => {\n      // 确保数据格式正确\n      let value = item[header.field];\n\n      // 处理日期时间\n      if (header.type === 'datetime' && value) {\n        // 假设日期已经是格式化的字符串，如果需要可以进一步处理\n        value = value;\n      }\n\n      // 处理数字\n      if (header.type === 'number' && value !== undefined && value !== null) {\n        value = Number(value);\n      }\n      row[header.field] = value;\n    });\n    worksheetData.push(row);\n  });\n\n  // 创建工作簿\n  const workbook = XLSX.utils.book_new();\n\n  // 创建工作表\n  const worksheet = XLSX.utils.json_to_sheet(worksheetData, {\n    skipHeader: true\n  });\n\n  // 设置列宽\n  const columnWidths = {};\n  headers.forEach((header, index) => {\n    const columnName = XLSX.utils.encode_col(index);\n    columnWidths[columnName] = {\n      width: header.width || 12\n    }; // 默认宽度为12\n  });\n  worksheet['!cols'] = Object.values(columnWidths);\n\n  // 将工作表添加到工作簿\n  XLSX.utils.book_append_sheet(workbook, worksheet, safeFileName);\n\n  // 导出并下载\n  XLSX.writeFile(workbook, fileNameWithExtension);\n};","map":{"version":3,"names":["XLSX","exportToExcel","data","fileName","headers","length","safeFileName","fileNameWithExtension","Date","toISOString","slice","worksheetData","headerRow","forEach","header","field","title","push","item","row","value","type","undefined","Number","workbook","utils","book_new","worksheet","json_to_sheet","skipHeader","columnWidths","index","columnName","encode_col","width","Object","values","book_append_sheet","writeFile"],"sources":["C:/Users/10150/Desktop/Hazardous-waste-management-system/frontend/src/utils/exportUtils.js"],"sourcesContent":["// 用于导出数据到Excel的工具函数\nimport * as XLSX from 'xlsx';\n\n/**\n * 将数据导出为Excel文件\n * @param {Array} data - 要导出的数据数组\n * @param {String} fileName - 导出的文件名（不含后缀）\n * @param {Array} headers - 要导出的列标题和对应字段名\n */\nexport const exportToExcel = (data, fileName, headers) => {\n  // 如果没有数据，直接返回\n  if (!data || data.length === 0) {\n    return;\n  }\n\n  // 处理文件名\n  const safeFileName = fileName || '导出数据';\n  const fileNameWithExtension = `${safeFileName}_${new Date().toISOString().slice(0, 10)}.xlsx`;\n\n  // 准备表格数据\n  const worksheetData = [];\n\n  // 添加表头行\n  const headerRow = {};\n  headers.forEach(header => {\n    headerRow[header.field] = header.title;\n  });\n  worksheetData.push(headerRow);\n\n  // 添加数据行\n  data.forEach(item => {\n    const row = {};\n    headers.forEach(header => {\n      // 确保数据格式正确\n      let value = item[header.field];\n\n      // 处理日期时间\n      if (header.type === 'datetime' && value) {\n        // 假设日期已经是格式化的字符串，如果需要可以进一步处理\n        value = value;\n      }\n\n      // 处理数字\n      if (header.type === 'number' && value !== undefined && value !== null) {\n        value = Number(value);\n      }\n\n      row[header.field] = value;\n    });\n    worksheetData.push(row);\n  });\n\n  // 创建工作簿\n  const workbook = XLSX.utils.book_new();\n  \n  // 创建工作表\n  const worksheet = XLSX.utils.json_to_sheet(worksheetData, { skipHeader: true });\n  \n  // 设置列宽\n  const columnWidths = {};\n  headers.forEach((header, index) => {\n    const columnName = XLSX.utils.encode_col(index);\n    columnWidths[columnName] = { width: header.width || 12 }; // 默认宽度为12\n  });\n  worksheet['!cols'] = Object.values(columnWidths);\n  \n  // 将工作表添加到工作簿\n  XLSX.utils.book_append_sheet(workbook, worksheet, safeFileName);\n  \n  // 导出并下载\n  XLSX.writeFile(workbook, fileNameWithExtension);\n};\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,IAAI,MAAM,MAAM;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;EACxD;EACA,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IAC9B;EACF;;EAEA;EACA,MAAMC,YAAY,GAAGH,QAAQ,IAAI,MAAM;EACvC,MAAMI,qBAAqB,GAAG,GAAGD,YAAY,IAAI,IAAIE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO;;EAE7F;EACA,MAAMC,aAAa,GAAG,EAAE;;EAExB;EACA,MAAMC,SAAS,GAAG,CAAC,CAAC;EACpBR,OAAO,CAACS,OAAO,CAACC,MAAM,IAAI;IACxBF,SAAS,CAACE,MAAM,CAACC,KAAK,CAAC,GAAGD,MAAM,CAACE,KAAK;EACxC,CAAC,CAAC;EACFL,aAAa,CAACM,IAAI,CAACL,SAAS,CAAC;;EAE7B;EACAV,IAAI,CAACW,OAAO,CAACK,IAAI,IAAI;IACnB,MAAMC,GAAG,GAAG,CAAC,CAAC;IACdf,OAAO,CAACS,OAAO,CAACC,MAAM,IAAI;MACxB;MACA,IAAIM,KAAK,GAAGF,IAAI,CAACJ,MAAM,CAACC,KAAK,CAAC;;MAE9B;MACA,IAAID,MAAM,CAACO,IAAI,KAAK,UAAU,IAAID,KAAK,EAAE;QACvC;QACAA,KAAK,GAAGA,KAAK;MACf;;MAEA;MACA,IAAIN,MAAM,CAACO,IAAI,KAAK,QAAQ,IAAID,KAAK,KAAKE,SAAS,IAAIF,KAAK,KAAK,IAAI,EAAE;QACrEA,KAAK,GAAGG,MAAM,CAACH,KAAK,CAAC;MACvB;MAEAD,GAAG,CAACL,MAAM,CAACC,KAAK,CAAC,GAAGK,KAAK;IAC3B,CAAC,CAAC;IACFT,aAAa,CAACM,IAAI,CAACE,GAAG,CAAC;EACzB,CAAC,CAAC;;EAEF;EACA,MAAMK,QAAQ,GAAGxB,IAAI,CAACyB,KAAK,CAACC,QAAQ,CAAC,CAAC;;EAEtC;EACA,MAAMC,SAAS,GAAG3B,IAAI,CAACyB,KAAK,CAACG,aAAa,CAACjB,aAAa,EAAE;IAAEkB,UAAU,EAAE;EAAK,CAAC,CAAC;;EAE/E;EACA,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvB1B,OAAO,CAACS,OAAO,CAAC,CAACC,MAAM,EAAEiB,KAAK,KAAK;IACjC,MAAMC,UAAU,GAAGhC,IAAI,CAACyB,KAAK,CAACQ,UAAU,CAACF,KAAK,CAAC;IAC/CD,YAAY,CAACE,UAAU,CAAC,GAAG;MAAEE,KAAK,EAAEpB,MAAM,CAACoB,KAAK,IAAI;IAAG,CAAC,CAAC,CAAC;EAC5D,CAAC,CAAC;EACFP,SAAS,CAAC,OAAO,CAAC,GAAGQ,MAAM,CAACC,MAAM,CAACN,YAAY,CAAC;;EAEhD;EACA9B,IAAI,CAACyB,KAAK,CAACY,iBAAiB,CAACb,QAAQ,EAAEG,SAAS,EAAErB,YAAY,CAAC;;EAE/D;EACAN,IAAI,CAACsC,SAAS,CAACd,QAAQ,EAAEjB,qBAAqB,CAAC;AACjD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}