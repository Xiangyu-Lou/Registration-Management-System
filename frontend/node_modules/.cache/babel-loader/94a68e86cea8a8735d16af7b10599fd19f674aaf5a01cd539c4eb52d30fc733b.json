{"ast":null,"code":"import { ref, onMounted, computed, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Home, Refresh, Plus, User, ArrowDown, ArrowUp, Download, Loading } from '@element-plus/icons-vue';\nimport { exportToExcel } from '../utils/exportUtils';\nimport auth from '../store/auth';\nexport default {\n  name: 'RecordsList',\n  components: {\n    ArrowLeft,\n    Home,\n    Refresh,\n    Plus,\n    User,\n    ArrowDown,\n    ArrowUp,\n    Download,\n    ElImageViewer,\n    Loading\n  },\n  props: {\n    unitId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const showFilterPanel = ref(true);\n\n    // 添加分页相关的响应式变量\n    const page = ref(1);\n    const pageSize = ref(20);\n    const hasMore = ref(true);\n    const loadingMore = ref(false);\n\n    // 筛选表单\n    const filterForm = reactive({\n      dateRange: null,\n      wasteTypeId: null,\n      minQuantity: null,\n      maxQuantity: null,\n      location: ''\n    });\n\n    // 过滤后的记录\n    const filteredRecords = computed(() => {\n      if (!records.value || !Array.isArray(records.value)) {\n        return [];\n      }\n      return records.value.filter(record => {\n        // 检查废物类型\n        if (filterForm.wasteTypeId && record.waste_type_id !== filterForm.wasteTypeId) {\n          return false;\n        }\n\n        // 检查数量范围\n        if (filterForm.minQuantity !== null && parseFloat(record.quantity) < filterForm.minQuantity) {\n          return false;\n        }\n        if (filterForm.maxQuantity !== null && parseFloat(record.quantity) > filterForm.maxQuantity) {\n          return false;\n        }\n\n        // 检查地点关键词\n        if (filterForm.location && !record.location.toLowerCase().includes(filterForm.location.toLowerCase())) {\n          return false;\n        }\n\n        // 检查日期范围\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\n          const startDate = new Date(filterForm.dateRange[0]);\n          const endDate = new Date(filterForm.dateRange[1]);\n          endDate.setHours(23, 59, 59); // 设置为当天结束时间\n\n          const recordDate = new Date(record.collection_start_time);\n          if (recordDate < startDate || recordDate > endDate) {\n            return false;\n          }\n        }\n        return true;\n      });\n    });\n\n    // 判断是否为管理员\n    const isAdmin = computed(() => {\n      return auth.isAdmin();\n    });\n\n    // 判断是否为单位管理员\n    const isUnitAdmin = computed(() => {\n      return auth.isUnitAdmin();\n    });\n\n    // 格式化日期时间\n    const parseFormattedDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    };\n\n    // 刷新记录\n    const refreshRecords = async () => {\n      await fetchRecords();\n      ElMessage.success('记录已刷新');\n    };\n\n    // 返回填报页面\n    const goBack = () => {\n      router.push('/waste-form');\n    };\n\n    // 返回首页\n    const goHome = () => {\n      router.push('/');\n    };\n\n    // 前往人员管理\n    const goToUserManagement = () => {\n      router.push(`/unit-users/${props.unitId}`);\n    };\n\n    // 添加新记录\n    const addNewRecord = () => {\n      router.push(`/waste-form?unitId=${props.unitId}`);\n    };\n\n    // 编辑记录\n    const editRecord = recordId => {\n      router.push(`/edit-record/${recordId}`);\n    };\n\n    // 判断是否可以编辑记录\n    const canEdit = record => {\n      if (!record) return false;\n\n      // 超级管理员可以编辑所有记录\n      if (isAdmin.value) return true;\n\n      // 单位管理员可以编辑本单位的记录\n      const unitId = auth.getUnitId();\n      if (isUnitAdmin.value && unitId && record.unit_id === parseInt(unitId)) return true;\n\n      // 普通用户只能编辑自己创建的记录\n      const userId = auth.getUserId();\n      return userId && record.creator_id === parseInt(userId);\n    };\n\n    // 确认删除\n    const confirmDelete = record => {\n      ElMessageBox.confirm(`确定要删除这条废物记录吗？此操作不可逆。`, '删除确认', {\n        confirmButtonText: '确定删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await httpService.delete(`${apiConfig.endpoints.wasteRecords}/${record.id}`);\n          ElMessage.success('记录已成功删除');\n          await fetchRecords(); // 重新加载记录\n        } catch (error) {\n          console.error('删除记录失败:', error);\n          ElMessage.error('删除记录失败，请重试');\n        }\n      }).catch(() => {\n        ElMessage.info('已取消删除');\n      });\n    };\n\n    // 应用筛选\n    const applyFilter = async () => {\n      try {\n        // 重置分页\n        page.value = 1;\n\n        // 重新获取记录\n        await fetchRecords();\n        ElMessage.success('筛选条件已应用');\n      } catch (error) {\n        console.error('应用筛选失败:', error);\n        ElMessage.error('应用筛选失败');\n      }\n    };\n\n    // 重置筛选\n    const resetFilter = async () => {\n      filterForm.dateRange = null;\n      filterForm.wasteTypeId = null;\n      filterForm.minQuantity = null;\n      filterForm.maxQuantity = null;\n      filterForm.location = '';\n\n      // 重置分页\n      page.value = 1;\n\n      // 重新获取记录\n      await fetchRecords();\n      ElMessage.success('筛选条件已重置');\n    };\n\n    // 导出记录\n    const exportRecords = () => {\n      // 使用后端API导出记录\n      try {\n        const userId = auth.getUserId();\n        if (!userId) {\n          ElMessage.error('用户未登录');\n          return;\n        }\n\n        // 构建筛选参数\n        const params = {};\n        if (filterForm.wasteTypeId) params.wasteTypeId = filterForm.wasteTypeId;\n        if (filterForm.minQuantity !== null) params.minQuantity = filterForm.minQuantity;\n        if (filterForm.maxQuantity !== null) params.maxQuantity = filterForm.maxQuantity;\n        if (filterForm.location) params.location = filterForm.location;\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\n          params.dateRange = JSON.stringify(filterForm.dateRange);\n        }\n\n        // 使用前端导出工具\n        const dataToExport = filteredRecords.value.map(record => {\n          return {\n            '废物类型': record.waste_type_name,\n            '产生地点': record.location,\n            '收集开始时间': record.collection_start_time,\n            '数量(吨)': parseFloat(record.quantity).toFixed(3),\n            '记录时间': record.created_at,\n            '汇报人': record.creator_name || '未知'\n          };\n        });\n        exportToExcel(dataToExport, `${unitName.value}危险废物记录`);\n        ElMessage.success('导出成功');\n      } catch (error) {\n        console.error('导出记录失败:', error);\n        ElMessage.error('导出记录失败');\n      }\n    };\n\n    // 图片预览相关\n    const showViewer = ref(false);\n    const previewImages = ref([]);\n    const previewIndex = ref(0);\n\n    // 预览照片\n    const previewPhoto = photo => {\n      previewImages.value = [`${apiConfig.baseURL}${photo}`];\n      previewIndex.value = 0;\n      showViewer.value = true;\n    };\n\n    // 关闭预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchWasteTypes();\n      await fetchRecords();\n    });\n\n    // 获取废物类型列表\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('Error fetching waste types:', error);\n        ElMessage.error('获取废物类型列表失败');\n      }\n    };\n    const fetchUnitName = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n    const fetchRecords = async (isLoadMore = false) => {\n      if (!isLoadMore) {\n        loading.value = true;\n        page.value = 1;\n        records.value = [];\n      } else {\n        loadingMore.value = true;\n      }\n      try {\n        const params = {\n          page: page.value,\n          pageSize: pageSize.value\n        };\n\n        // 获取当前用户ID\n        const userId = auth.getUserId();\n        if (!userId) {\n          throw new Error('用户未登录');\n        }\n\n        // 使用用户ID获取记录\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecordsByUser}/${userId}`, {\n          params\n        });\n\n        // 确保响应数据包含records字段，并且是一个数组\n        if (response.data && Array.isArray(response.data.records)) {\n          if (isLoadMore) {\n            records.value = [...records.value, ...response.data.records];\n          } else {\n            records.value = response.data.records;\n          }\n          hasMore.value = !!response.data.hasMore;\n        } else {\n          console.error('Invalid response format:', response.data);\n          records.value = [];\n          hasMore.value = false;\n          ElMessage.error('获取废物记录失败：数据格式错误');\n        }\n      } catch (error) {\n        console.error('Error fetching records:', error);\n        records.value = [];\n        hasMore.value = false;\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n        loadingMore.value = false;\n      }\n    };\n\n    // 处理滚动加载更多\n    const handleScroll = async e => {\n      const {\n        scrollHeight,\n        scrollTop,\n        clientHeight\n      } = e.target;\n\n      // 当滚动到底部时加载更多\n      if (scrollHeight - scrollTop - clientHeight < 50 && hasMore.value && !loadingMore.value) {\n        page.value++;\n        await fetchRecords(true);\n      }\n    };\n    return {\n      records,\n      filteredRecords,\n      loading,\n      unitName,\n      wasteTypes,\n      isAdmin,\n      isUnitAdmin,\n      parseFormattedDateTime,\n      refreshRecords,\n      goBack,\n      goHome,\n      goToUserManagement,\n      addNewRecord,\n      editRecord,\n      canEdit,\n      confirmDelete,\n      apiConfig,\n      // 筛选相关\n      showFilterPanel,\n      filterForm,\n      applyFilter,\n      resetFilter,\n      // 导出相关\n      exportRecords,\n      // 图片预览相关\n      showViewer,\n      previewImages,\n      previewIndex,\n      previewPhoto,\n      closeViewer,\n      // 分页相关\n      page,\n      pageSize,\n      hasMore,\n      loadingMore,\n      handleScroll\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","reactive","useRouter","ElMessage","ElMessageBox","ElImageViewer","httpService","apiConfig","ArrowLeft","Home","Refresh","Plus","User","ArrowDown","ArrowUp","Download","Loading","exportToExcel","auth","name","components","props","unitId","type","String","Number","required","setup","router","records","loading","unitName","wasteTypes","showFilterPanel","page","pageSize","hasMore","loadingMore","filterForm","dateRange","wasteTypeId","minQuantity","maxQuantity","location","filteredRecords","value","Array","isArray","filter","record","waste_type_id","parseFloat","quantity","toLowerCase","includes","length","startDate","Date","endDate","setHours","recordDate","collection_start_time","isAdmin","isUnitAdmin","parseFormattedDateTime","dateTimeStr","date","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","refreshRecords","fetchRecords","success","goBack","push","goHome","goToUserManagement","addNewRecord","editRecord","recordId","canEdit","getUnitId","unit_id","parseInt","userId","getUserId","creator_id","confirmDelete","confirm","confirmButtonText","cancelButtonText","then","delete","endpoints","wasteRecords","id","error","console","catch","info","applyFilter","resetFilter","exportRecords","params","JSON","stringify","dataToExport","map","waste_type_name","toFixed","created_at","creator_name","showViewer","previewImages","previewIndex","previewPhoto","photo","baseURL","closeViewer","fetchUnitName","fetchWasteTypes","response","get","data","units","unit","find","u","isLoadMore","Error","wasteRecordsByUser","handleScroll","e","scrollHeight","scrollTop","clientHeight","target"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\RecordsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"records-container\">\r\n    <div class=\"header\">\r\n      <div class=\"back-button\" @click=\"goBack\">\r\n        <el-icon><arrow-left /></el-icon> 返回填报\r\n      </div>\r\n      <h1>废物记录查看</h1>\r\n      <div class=\"home-link\" @click=\"goHome\" v-if=\"isAdmin\">\r\n        首页 <el-icon><home /></el-icon>\r\n      </div>\r\n      <div v-else></div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"unit-info\">\r\n        <h2>{{ unitName }} - 危险废物记录</h2>\r\n      </div>\r\n      \r\n      <!-- 筛选面板 -->\r\n      <el-card class=\"filter-card\">\r\n        <div class=\"filter-header\">\r\n          <h3>筛选条件</h3>\r\n          <el-button type=\"primary\" link @click=\"showFilterPanel = !showFilterPanel\">\r\n            {{ showFilterPanel ? '收起' : '展开' }} \r\n            <el-icon v-if=\"!showFilterPanel\"><arrow-down /></el-icon>\r\n            <el-icon v-else><arrow-up /></el-icon>\r\n          </el-button>\r\n        </div>\r\n        \r\n        <div v-show=\"showFilterPanel\" class=\"filter-form-container\">\r\n          <el-form :model=\"filterForm\" label-width=\"100px\" class=\"filter-form\">\r\n            <el-row :gutter=\"20\">\r\n              <!-- 收集时间范围 -->\r\n              <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n                <el-form-item label=\"收集时间\">\r\n                  <el-date-picker\r\n                    v-model=\"filterForm.dateRange\"\r\n                    type=\"daterange\"\r\n                    range-separator=\"至\"\r\n                    start-placeholder=\"开始日期\"\r\n                    end-placeholder=\"结束日期\"\r\n                    format=\"YYYY-MM-DD\"\r\n                    value-format=\"YYYY-MM-DD\"\r\n                    style=\"width: 100%\"\r\n                  />\r\n                </el-form-item>\r\n              </el-col>\r\n              \r\n              <!-- 废物类型 -->\r\n              <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n                <el-form-item label=\"废物类型\">\r\n                  <el-select v-model=\"filterForm.wasteTypeId\" placeholder=\"选择废物类型\" style=\"width: 100%\" clearable>\r\n                    <el-option \r\n                      v-for=\"type in wasteTypes\" \r\n                      :key=\"type.id\" \r\n                      :label=\"type.name\" \r\n                      :value=\"type.id\" \r\n                    />\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            \r\n            <el-row :gutter=\"20\">\r\n              <!-- 数量范围 -->\r\n              <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n                <el-form-item label=\"数量范围(吨)\">\r\n                  <div class=\"quantity-range\">\r\n                    <el-input-number \r\n                      v-model=\"filterForm.minQuantity\" \r\n                      :min=\"0\"\r\n                      :precision=\"3\"\r\n                      :step=\"0.001\"\r\n                      placeholder=\"最小值\"\r\n                      style=\"width: 48%\"\r\n                    />\r\n                    <span class=\"range-separator\">至</span>\r\n                    <el-input-number \r\n                      v-model=\"filterForm.maxQuantity\" \r\n                      :min=\"filterForm.minQuantity || 0\"\r\n                      :precision=\"3\"\r\n                      :step=\"0.001\"\r\n                      placeholder=\"最大值\"\r\n                      style=\"width: 48%\"\r\n                    />\r\n                  </div>\r\n                </el-form-item>\r\n              </el-col>\r\n              \r\n              <!-- 产生地点 -->\r\n              <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\r\n                <el-form-item label=\"产生地点\">\r\n                  <el-input \r\n                    v-model=\"filterForm.location\" \r\n                    placeholder=\"输入地点关键词搜索\" \r\n                    clearable\r\n                  />\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            \r\n            <div class=\"filter-actions\">\r\n              <el-button type=\"primary\" @click=\"applyFilter\">筛选</el-button>\r\n              <el-button @click=\"resetFilter\">重置</el-button>\r\n            </div>\r\n          </el-form>\r\n        </div>\r\n      </el-card>\r\n      \r\n      <div class=\"records-wrapper\">\r\n        <el-card class=\"records-card\">\r\n          <div class=\"card-header\">\r\n          <h3>废物记录列表</h3>\r\n          <div class=\"card-actions\">\r\n          <el-button type=\"primary\" @click=\"addNewRecord\">\r\n              <el-icon><plus /></el-icon> 新增填报\r\n          </el-button>\r\n          <el-button type=\"success\" @click=\"goToUserManagement\" v-if=\"isAdmin || isUnitAdmin\">\r\n              <el-icon><user /></el-icon> 人员管理\r\n          </el-button>\r\n          <el-button type=\"warning\" @click=\"exportRecords\">\r\n              <el-icon><download /></el-icon> 导出记录\r\n          </el-button>\r\n          <el-button @click=\"refreshRecords\">\r\n            <el-icon><refresh /></el-icon> 刷新\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n          \r\n          <el-table \r\n            :data=\"filteredRecords\" \r\n            style=\"width: 100%\" \r\n            border \r\n            v-loading=\"loading\"\r\n            stripe\r\n            class=\"responsive-table\"\r\n            height=\"500\"\r\n            @scroll=\"handleScroll\"\r\n          >\r\n            <el-table-column prop=\"waste_type_name\" label=\"废物类型\" min-width=\"110\" />\r\n            <el-table-column prop=\"location\" label=\"产生地点\" min-width=\"120\" />\r\n            <el-table-column prop=\"collection_start_time\" label=\"收集开始时间\" min-width=\"160\" />\r\n            <el-table-column label=\"数量(吨)\" min-width=\"100\">\r\n              <template #default=\"scope\">\r\n                {{ parseFloat(scope.row.quantity).toFixed(3) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"created_at\" label=\"记录时间\" min-width=\"160\" class=\"mobile-hidden\" />\r\n            <el-table-column prop=\"creator_name\" label=\"汇报人\" min-width=\"100\" class=\"mobile-hidden\" />\r\n            <el-table-column\r\n              label=\"现场照片（清理前）\"\r\n              width=\"120\"\r\n              align=\"center\"\r\n            >\r\n              <template #default=\"scope\">\r\n                <div v-if=\"scope.row.photo_path_before\" class=\"photo-preview\">\r\n                  <el-image\r\n                    style=\"width: 50px; height: 50px\"\r\n                    :src=\"`${baseUrl}/${scope.row.photo_path_before}`\"\r\n                    :preview-src-list=\"[`${baseUrl}/${scope.row.photo_path_before}`]\"\r\n                    fit=\"cover\"\r\n                  ></el-image>\r\n                </div>\r\n                <span v-else>无</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n              label=\"现场照片（清理后）\"\r\n              width=\"120\"\r\n              align=\"center\"\r\n            >\r\n              <template #default=\"scope\">\r\n                <div v-if=\"scope.row.photo_path_after\" class=\"photo-preview\">\r\n                  <el-image\r\n                    style=\"width: 50px; height: 50px\"\r\n                    :src=\"`${baseUrl}/${scope.row.photo_path_after}`\"\r\n                    :preview-src-list=\"[`${baseUrl}/${scope.row.photo_path_after}`]\"\r\n                    fit=\"cover\"\r\n                  ></el-image>\r\n                </div>\r\n                <span v-else>无</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" min-width=\"70\" fixed=\"right\">\r\n              <template #default=\"scope\">\r\n                <div class=\"operation-buttons\">\r\n                  <el-button \r\n                    type=\"primary\" \r\n                    size=\"small\" \r\n                    @click=\"editRecord(scope.row.id)\"\r\n                    text\r\n                    v-if=\"canEdit(scope.row)\"\r\n                  >\r\n                    编辑\r\n                  </el-button>\r\n                  <el-button \r\n                    type=\"danger\" \r\n                    size=\"small\" \r\n                    @click=\"confirmDelete(scope.row)\"\r\n                    text\r\n                    v-if=\"canEdit(scope.row)\"\r\n                  >\r\n                    删除\r\n                  </el-button>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          \r\n          <div v-if=\"loadingMore\" class=\"loading-more\">\r\n            <el-icon class=\"loading\"><loading /></el-icon>\r\n            加载更多...\r\n          </div>\r\n          \r\n          <div class=\"empty-block\" v-if=\"records.length === 0 && !loading\">\r\n            <el-empty description=\"暂无废物记录\" />\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n\r\n    <!-- 添加独立的图片预览组件 -->\r\n    <el-image-viewer\r\n      v-if=\"showViewer\"\r\n      :url-list=\"previewImages\"\r\n      :initial-index=\"previewIndex\"\r\n      @close=\"closeViewer\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage, ElMessageBox, ElImageViewer } from 'element-plus';\r\nimport httpService from '../config/httpService';\r\nimport apiConfig from '../config/api';\r\nimport { ArrowLeft, Home, Refresh, Plus, User, ArrowDown, ArrowUp, Download, Loading } from '@element-plus/icons-vue';\r\nimport { exportToExcel } from '../utils/exportUtils';\r\nimport auth from '../store/auth';\r\n\r\nexport default {\r\n  name: 'RecordsList',\r\n  components: {\r\n    ArrowLeft,\r\n    Home,\r\n    Refresh,\r\n    Plus,\r\n    User,\r\n    ArrowDown,\r\n    ArrowUp,\r\n    Download,\r\n    ElImageViewer,\r\n    Loading\r\n  },\r\n  props: {\r\n    unitId: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const router = useRouter();\r\n    const records = ref([]);\r\n    const loading = ref(false);\r\n    const unitName = ref('');\r\n    const wasteTypes = ref([]);\r\n    const showFilterPanel = ref(true);\r\n    \r\n    // 添加分页相关的响应式变量\r\n    const page = ref(1);\r\n    const pageSize = ref(20);\r\n    const hasMore = ref(true);\r\n    const loadingMore = ref(false);\r\n    \r\n    // 筛选表单\r\n    const filterForm = reactive({\r\n      dateRange: null,\r\n      wasteTypeId: null,\r\n      minQuantity: null,\r\n      maxQuantity: null,\r\n      location: ''\r\n    });\r\n    \r\n    // 过滤后的记录\r\n    const filteredRecords = computed(() => {\r\n      if (!records.value || !Array.isArray(records.value)) {\r\n        return [];\r\n      }\r\n      \r\n      return records.value.filter(record => {\r\n        // 检查废物类型\r\n        if (filterForm.wasteTypeId && record.waste_type_id !== filterForm.wasteTypeId) {\r\n          return false;\r\n        }\r\n        \r\n        // 检查数量范围\r\n        if (filterForm.minQuantity !== null && parseFloat(record.quantity) < filterForm.minQuantity) {\r\n          return false;\r\n        }\r\n        if (filterForm.maxQuantity !== null && parseFloat(record.quantity) > filterForm.maxQuantity) {\r\n          return false;\r\n        }\r\n        \r\n        // 检查地点关键词\r\n        if (filterForm.location && !record.location.toLowerCase().includes(filterForm.location.toLowerCase())) {\r\n          return false;\r\n        }\r\n        \r\n        // 检查日期范围\r\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\r\n          const startDate = new Date(filterForm.dateRange[0]);\r\n          const endDate = new Date(filterForm.dateRange[1]);\r\n          endDate.setHours(23, 59, 59); // 设置为当天结束时间\r\n          \r\n          const recordDate = new Date(record.collection_start_time);\r\n          if (recordDate < startDate || recordDate > endDate) {\r\n            return false;\r\n          }\r\n        }\r\n        \r\n        return true;\r\n      });\r\n    });\r\n    \r\n    // 判断是否为管理员\r\n    const isAdmin = computed(() => {\r\n      return auth.isAdmin();\r\n    });\r\n    \r\n    // 判断是否为单位管理员\r\n    const isUnitAdmin = computed(() => {\r\n      return auth.isUnitAdmin();\r\n    });\r\n    \r\n    // 格式化日期时间\r\n    const parseFormattedDateTime = (dateTimeStr) => {\r\n      if (!dateTimeStr) return '';\r\n      const date = new Date(dateTimeStr);\r\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\r\n    };\r\n    \r\n    // 刷新记录\r\n    const refreshRecords = async () => {\r\n      await fetchRecords();\r\n      ElMessage.success('记录已刷新');\r\n    };\r\n    \r\n    // 返回填报页面\r\n    const goBack = () => {\r\n      router.push('/waste-form');\r\n    };\r\n    \r\n    // 返回首页\r\n    const goHome = () => {\r\n      router.push('/');\r\n    };\r\n    \r\n    // 前往人员管理\r\n    const goToUserManagement = () => {\r\n      router.push(`/unit-users/${props.unitId}`);\r\n    };\r\n    \r\n    // 添加新记录\r\n    const addNewRecord = () => {\r\n      router.push(`/waste-form?unitId=${props.unitId}`);\r\n    };\r\n    \r\n    // 编辑记录\r\n    const editRecord = (recordId) => {\r\n      router.push(`/edit-record/${recordId}`);\r\n    };\r\n    \r\n    // 判断是否可以编辑记录\r\n    const canEdit = (record) => {\r\n      if (!record) return false;\r\n      \r\n      // 超级管理员可以编辑所有记录\r\n      if (isAdmin.value) return true;\r\n      \r\n      // 单位管理员可以编辑本单位的记录\r\n      const unitId = auth.getUnitId();\r\n      if (isUnitAdmin.value && unitId && record.unit_id === parseInt(unitId)) return true;\r\n      \r\n      // 普通用户只能编辑自己创建的记录\r\n      const userId = auth.getUserId();\r\n      return userId && record.creator_id === parseInt(userId);\r\n    };\r\n    \r\n    // 确认删除\r\n    const confirmDelete = (record) => {\r\n      ElMessageBox.confirm(\r\n        `确定要删除这条废物记录吗？此操作不可逆。`,\r\n        '删除确认',\r\n        {\r\n          confirmButtonText: '确定删除',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }\r\n      )\r\n        .then(async () => {\r\n          try {\r\n            await httpService.delete(`${apiConfig.endpoints.wasteRecords}/${record.id}`);\r\n            ElMessage.success('记录已成功删除');\r\n            await fetchRecords(); // 重新加载记录\r\n          } catch (error) {\r\n            console.error('删除记录失败:', error);\r\n            ElMessage.error('删除记录失败，请重试');\r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage.info('已取消删除');\r\n        });\r\n    };\r\n    \r\n    // 应用筛选\r\n    const applyFilter = async () => {\r\n      try {\r\n        // 重置分页\r\n        page.value = 1;\r\n        \r\n        // 重新获取记录\r\n        await fetchRecords();\r\n        \r\n        ElMessage.success('筛选条件已应用');\r\n      } catch (error) {\r\n        console.error('应用筛选失败:', error);\r\n        ElMessage.error('应用筛选失败');\r\n      }\r\n    };\r\n    \r\n    // 重置筛选\r\n    const resetFilter = async () => {\r\n      filterForm.dateRange = null;\r\n      filterForm.wasteTypeId = null;\r\n      filterForm.minQuantity = null;\r\n      filterForm.maxQuantity = null;\r\n      filterForm.location = '';\r\n      \r\n      // 重置分页\r\n      page.value = 1;\r\n      \r\n      // 重新获取记录\r\n      await fetchRecords();\r\n      \r\n      ElMessage.success('筛选条件已重置');\r\n    };\r\n    \r\n    // 导出记录\r\n    const exportRecords = () => {\r\n      // 使用后端API导出记录\r\n      try {\r\n        const userId = auth.getUserId();\r\n        if (!userId) {\r\n          ElMessage.error('用户未登录');\r\n          return;\r\n        }\r\n        \r\n        // 构建筛选参数\r\n        const params = {};\r\n        if (filterForm.wasteTypeId) params.wasteTypeId = filterForm.wasteTypeId;\r\n        if (filterForm.minQuantity !== null) params.minQuantity = filterForm.minQuantity;\r\n        if (filterForm.maxQuantity !== null) params.maxQuantity = filterForm.maxQuantity;\r\n        if (filterForm.location) params.location = filterForm.location;\r\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\r\n          params.dateRange = JSON.stringify(filterForm.dateRange);\r\n        }\r\n        \r\n        // 使用前端导出工具\r\n        const dataToExport = filteredRecords.value.map(record => {\r\n          return {\r\n            '废物类型': record.waste_type_name,\r\n            '产生地点': record.location,\r\n            '收集开始时间': record.collection_start_time,\r\n            '数量(吨)': parseFloat(record.quantity).toFixed(3),\r\n            '记录时间': record.created_at,\r\n            '汇报人': record.creator_name || '未知'\r\n          };\r\n        });\r\n        \r\n        exportToExcel(dataToExport, `${unitName.value}危险废物记录`);\r\n        ElMessage.success('导出成功');\r\n      } catch (error) {\r\n        console.error('导出记录失败:', error);\r\n        ElMessage.error('导出记录失败');\r\n      }\r\n    };\r\n    \r\n    // 图片预览相关\r\n    const showViewer = ref(false);\r\n    const previewImages = ref([]);\r\n    const previewIndex = ref(0);\r\n    \r\n    // 预览照片\r\n    const previewPhoto = (photo) => {\r\n      previewImages.value = [`${apiConfig.baseURL}${photo}`];\r\n      previewIndex.value = 0;\r\n      showViewer.value = true;\r\n    };\r\n    \r\n    // 关闭预览\r\n    const closeViewer = () => {\r\n      showViewer.value = false;\r\n    };\r\n\r\n    onMounted(async () => {\r\n      await fetchUnitName();\r\n      await fetchWasteTypes();\r\n      await fetchRecords();\r\n    });\r\n\r\n    // 获取废物类型列表\r\n    const fetchWasteTypes = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\r\n        wasteTypes.value = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching waste types:', error);\r\n        ElMessage.error('获取废物类型列表失败');\r\n      }\r\n    };\r\n    \r\n    const fetchUnitName = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\r\n        if (unit) {\r\n          unitName.value = unit.name;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching unit name:', error);\r\n        ElMessage.error('获取单位信息失败');\r\n      }\r\n    };\r\n\r\n    const fetchRecords = async (isLoadMore = false) => {\r\n      if (!isLoadMore) {\r\n        loading.value = true;\r\n        page.value = 1;\r\n        records.value = [];\r\n      } else {\r\n        loadingMore.value = true;\r\n      }\r\n      \r\n      try {\r\n        const params = {\r\n          page: page.value,\r\n          pageSize: pageSize.value\r\n        };\r\n        \r\n        // 获取当前用户ID\r\n        const userId = auth.getUserId();\r\n        if (!userId) {\r\n          throw new Error('用户未登录');\r\n        }\r\n        \r\n        // 使用用户ID获取记录\r\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecordsByUser}/${userId}`, { params });\r\n        \r\n        // 确保响应数据包含records字段，并且是一个数组\r\n        if (response.data && Array.isArray(response.data.records)) {\r\n          if (isLoadMore) {\r\n            records.value = [...records.value, ...response.data.records];\r\n          } else {\r\n            records.value = response.data.records;\r\n          }\r\n          \r\n          hasMore.value = !!response.data.hasMore;\r\n        } else {\r\n          console.error('Invalid response format:', response.data);\r\n          records.value = [];\r\n          hasMore.value = false;\r\n          ElMessage.error('获取废物记录失败：数据格式错误');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching records:', error);\r\n        records.value = [];\r\n        hasMore.value = false;\r\n        ElMessage.error('获取废物记录失败');\r\n      } finally {\r\n        loading.value = false;\r\n        loadingMore.value = false;\r\n      }\r\n    };\r\n    \r\n    // 处理滚动加载更多\r\n    const handleScroll = async (e) => {\r\n      const { scrollHeight, scrollTop, clientHeight } = e.target;\r\n      \r\n      // 当滚动到底部时加载更多\r\n      if (scrollHeight - scrollTop - clientHeight < 50 && hasMore.value && !loadingMore.value) {\r\n        page.value++;\r\n        await fetchRecords(true);\r\n      }\r\n    };\r\n\r\n    return {\r\n      records,\r\n      filteredRecords,\r\n      loading,\r\n      unitName,\r\n      wasteTypes,\r\n      isAdmin,\r\n      isUnitAdmin,\r\n      parseFormattedDateTime,\r\n      refreshRecords,\r\n      goBack,\r\n      goHome,\r\n      goToUserManagement,\r\n      addNewRecord,\r\n      editRecord,\r\n      canEdit,\r\n      confirmDelete,\r\n      apiConfig,\r\n      // 筛选相关\r\n      showFilterPanel,\r\n      filterForm,\r\n      applyFilter,\r\n      resetFilter,\r\n      // 导出相关\r\n      exportRecords,\r\n      // 图片预览相关\r\n      showViewer,\r\n      previewImages,\r\n      previewIndex,\r\n      previewPhoto,\r\n      closeViewer,\r\n      // 分页相关\r\n      page,\r\n      pageSize,\r\n      hasMore,\r\n      loadingMore,\r\n      handleScroll\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.records-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.back-button, .home-link {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 30px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.unit-info {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.unit-info h2 {\r\n  color: #333;\r\n  margin: 0;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.filter-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.filter-form-container {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.filter-form {\r\n  margin-top: 15px;\r\n}\r\n\r\n.quantity-range {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.range-separator {\r\n  margin: 0 5px;\r\n}\r\n\r\n.filter-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.records-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.card-actions {\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.record-image {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 4px;\r\n  object-fit: cover;\r\n}\r\n\r\n.photo-thumbnail-container {\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.photo-count {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n}\r\n\r\n.image-error {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #f5f7fa;\r\n  color: #909399;\r\n  font-size: 20px;\r\n}\r\n\r\n.operation-buttons {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f7fa;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: #606266;\r\n}\r\n\r\n.loading-more {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px;\r\n  color: #909399;\r\n}\r\n\r\n.loading {\r\n  animation: rotating 2s linear infinite;\r\n  margin-right: 5px;\r\n}\r\n\r\n@keyframes rotating {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.empty-block {\r\n  padding: 30px;\r\n  text-align: center;\r\n}\r\n\r\n/* 响应式调整 */\r\n@media (max-width: 768px) {\r\n  .header {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .content {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .card-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .card-actions {\r\n    width: 100%;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .mobile-hidden {\r\n    display: none;\r\n  }\r\n  \r\n  .operation-buttons {\r\n    flex-direction: column;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}