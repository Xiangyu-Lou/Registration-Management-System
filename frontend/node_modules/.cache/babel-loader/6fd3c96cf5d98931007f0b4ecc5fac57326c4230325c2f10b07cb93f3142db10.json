{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { ArrowLeft, Home, Refresh, PictureFailed } from '@element-plus/icons-vue';\nexport default {\n  name: 'RecordsList',\n  components: {\n    ArrowLeft,\n    Home,\n    Refresh,\n    PictureFailed\n  },\n  props: {\n    unitId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const unitName = ref('');\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchRecords();\n    });\n    const fetchUnitName = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/units`);\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n    const fetchRecords = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get(`http://localhost:3000/api/waste-records/${props.unitId}`);\n        records.value = response.data;\n\n        // 格式化日期\n        records.value.forEach(record => {\n          record.created_at = formatDateTime(record.created_at);\n          record.collection_start_time = formatDateTime(record.collection_start_time);\n        });\n      } catch (error) {\n        console.error('Error fetching records:', error);\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const formatDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    };\n    const refreshRecords = () => {\n      fetchRecords();\n    };\n    const goBack = () => {\n      router.push({\n        name: 'WasteForm',\n        params: {\n          id: props.unitId\n        }\n      });\n    };\n    const goHome = () => {\n      router.push('/');\n    };\n    return {\n      records,\n      loading,\n      unitName,\n      refreshRecords,\n      goBack,\n      goHome\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","axios","ArrowLeft","Home","Refresh","PictureFailed","name","components","props","unitId","type","String","Number","required","setup","router","records","loading","unitName","fetchUnitName","fetchRecords","response","get","unit","data","find","u","id","parseInt","value","error","console","forEach","record","created_at","formatDateTime","collection_start_time","dateTimeStr","date","Date","toLocaleString","year","month","day","hour","minute","second","hour12","refreshRecords","goBack","push","params","goHome"],"sources":["C:\\Users\\10150\\Desktop\\hazardous-waste-management\\frontend\\src\\views\\RecordsList.vue"],"sourcesContent":["<template>\n  <div class=\"records-container\">\n    <div class=\"header\">\n      <div class=\"back-button\" @click=\"goBack\">\n        <el-icon><arrow-left /></el-icon> 返回填报\n      </div>\n      <h1>废物记录查看</h1>\n      <div class=\"home-link\" @click=\"goHome\">\n        首页 <el-icon><home /></el-icon>\n      </div>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"unit-info\">\n        <h2>{{ unitName }} - 危险废物记录</h2>\n      </div>\n      \n      <div class=\"records-wrapper\">\n        <el-card class=\"records-card\">\n          <div class=\"card-header\">\n            <h3>废物记录列表</h3>\n            <el-button type=\"primary\" @click=\"refreshRecords\">\n              <el-icon><refresh /></el-icon> 刷新\n            </el-button>\n          </div>\n          \n          <el-table \n            :data=\"records\" \n            style=\"width: 100%\" \n            border \n            v-loading=\"loading\"\n            stripe\n          >\n            <el-table-column prop=\"waste_type_name\" label=\"废物类型\" width=\"110\" />\n            <el-table-column prop=\"location\" label=\"产生地点\" />\n            <el-table-column prop=\"collection_start_time\" label=\"收集开始时间\" width=\"160\" />\n            <el-table-column prop=\"quantity\" label=\"数量(kg)\" width=\"100\" />\n            <el-table-column prop=\"created_at\" label=\"记录时间\" width=\"160\" />\n            <el-table-column label=\"现场照片\" width=\"100\">\n              <template #default=\"scope\">\n                <el-image \n                  v-if=\"scope.row.photo_path\"\n                  :src=\"`http://localhost:3000${scope.row.photo_path}`\"\n                  :preview-src-list=\"[`http://localhost:3000${scope.row.photo_path}`]\"\n                  fit=\"cover\"\n                  class=\"record-image\"\n                >\n                  <template #error>\n                    <div class=\"image-error\">\n                      <el-icon><picture-failed /></el-icon>\n                    </div>\n                  </template>\n                </el-image>\n                <span v-else>无照片</span>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"empty-block\" v-if=\"records.length === 0 && !loading\">\n            <el-empty description=\"暂无废物记录\" />\n          </div>\n        </el-card>\n      </div>\n    </div>\n\n    <div class=\"footer\">\n      <p>&copy; 2025 危险废物管理系统</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport { ArrowLeft, Home, Refresh, PictureFailed } from '@element-plus/icons-vue';\n\nexport default {\n  name: 'RecordsList',\n  components: {\n    ArrowLeft,\n    Home,\n    Refresh,\n    PictureFailed\n  },\n  props: {\n    unitId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const unitName = ref('');\n\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchRecords();\n    });\n\n    const fetchUnitName = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/units`);\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n\n    const fetchRecords = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get(`http://localhost:3000/api/waste-records/${props.unitId}`);\n        records.value = response.data;\n        \n        // 格式化日期\n        records.value.forEach(record => {\n          record.created_at = formatDateTime(record.created_at);\n          record.collection_start_time = formatDateTime(record.collection_start_time);\n        });\n      } catch (error) {\n        console.error('Error fetching records:', error);\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const formatDateTime = (dateTimeStr) => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    };\n\n    const refreshRecords = () => {\n      fetchRecords();\n    };\n\n    const goBack = () => {\n      router.push({ name: 'WasteForm', params: { id: props.unitId } });\n    };\n\n    const goHome = () => {\n      router.push('/');\n    };\n\n    return {\n      records,\n      loading,\n      unitName,\n      refreshRecords,\n      goBack,\n      goHome\n    };\n  }\n};\n</script>\n\n<style scoped>\n.records-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.header {\n  background-color: #409EFF;\n  color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.back-button, .home-link {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.content {\n  flex: 1;\n  padding: 30px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.unit-info {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.unit-info h2 {\n  color: #333;\n  border-bottom: 2px solid #409EFF;\n  display: inline-block;\n  padding-bottom: 5px;\n}\n\n.records-wrapper {\n  margin-top: 20px;\n}\n\n.records-card {\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.card-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.record-image {\n  width: 50px;\n  height: 50px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.image-error {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  background-color: #f5f7fa;\n  color: #909399;\n}\n\n.empty-block {\n  margin: 20px 0;\n}\n\n.footer {\n  background-color: #f5f5f5;\n  padding: 15px;\n  text-align: center;\n  color: #666;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}