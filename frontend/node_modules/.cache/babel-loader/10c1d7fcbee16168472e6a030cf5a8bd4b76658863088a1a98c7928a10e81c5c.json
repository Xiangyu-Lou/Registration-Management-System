{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Document, Plus, Clock } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nexport default {\n  name: 'WasteForm',\n  components: {\n    ArrowLeft,\n    Document,\n    Plus,\n    Clock\n  },\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const wasteForm = ref(null);\n    const loading = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const photoFilesBefore = ref([]);\n    const photoFilesAfter = ref([]);\n    const fileListBefore = ref([]);\n    const fileListAfter = ref([]);\n\n    // 检查用户是否为超级管理员\n    const isAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    // 初始化表单，将日期和时间分开\n    const form = reactive({\n      wasteTypeId: '',\n      location: '',\n      collectionDate: new Date().toISOString().slice(0, 10),\n      // 默认为当天\n      collectionTime: '08:00',\n      quantity: 0,\n      photosBefore: [],\n      photosAfter: []\n    });\n    const rules = {\n      wasteTypeId: [{\n        required: true,\n        message: '请选择废物类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入废物产生地点',\n        trigger: 'blur'\n      }],\n      collectionDate: [{\n        required: false\n      }],\n      collectionTime: [{\n        required: false\n      }],\n      quantity: [{\n        required: true,\n        message: '请输入收集数量',\n        trigger: 'change'\n      }]\n    };\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchWasteTypes();\n    });\n    const fetchUnitName = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(props.id));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('Error fetching waste types:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    // 处理上传前的文件处理\n    const handleBeforeUpload = file => {\n      if (!file.uid) {\n        file.uid = Date.now() + '-' + Math.random().toString(36).substr(2, 10);\n      }\n      return true; // 允许上传\n    };\n\n    // 处理收集前照片变更\n    const handlePhotoBeforeChange = (file, fileList) => {\n      // 更新文件列表\n      fileListBefore.value = fileList;\n      photoFilesBefore.value = fileList.map(f => f.raw);\n    };\n\n    // 处理收集前照片移除\n    const handlePhotoBeforeRemove = (file, fileList) => {\n      fileListBefore.value = fileList;\n      photoFilesBefore.value = fileList.map(f => f.raw);\n    };\n\n    // 处理收集后照片变更\n    const handlePhotoAfterChange = (file, fileList) => {\n      // 更新文件列表\n      fileListAfter.value = fileList;\n      photoFilesAfter.value = fileList.map(f => f.raw);\n    };\n\n    // 处理收集后照片移除\n    const handlePhotoAfterRemove = (file, fileList) => {\n      fileListAfter.value = fileList;\n      photoFilesAfter.value = fileList.map(f => f.raw);\n    };\n    const submitForm = () => {\n      wasteForm.value.validate(async valid => {\n        if (valid) {\n          loading.value = true;\n          try {\n            const formData = new FormData();\n            formData.append('unitId', props.id);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n\n            // 组合日期和时间，如果有的话\n            if (form.collectionDate && form.collectionTime) {\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\n              formData.append('collectionStartTime', combinedDateTime);\n            }\n            formData.append('quantity', form.quantity);\n\n            // 添加创建者ID（如果用户已登录）\n            if (auth.state.isLoggedIn && auth.state.user) {\n              formData.append('creatorId', auth.state.user.id);\n            }\n            console.log('提交表单数据:', {\n              unitId: props.id,\n              wasteTypeId: form.wasteTypeId,\n              location: form.location,\n              quantity: form.quantity,\n              photosBefore: photoFilesBefore.value ? photoFilesBefore.value.length : 0,\n              photosAfter: photoFilesAfter.value ? photoFilesAfter.value.length : 0\n            });\n\n            // 添加收集前照片\n            if (photoFilesBefore.value && photoFilesBefore.value.length > 0) {\n              console.log('添加收集前照片数量:', photoFilesBefore.value.length);\n              photoFilesBefore.value.forEach((file, index) => {\n                if (file) {\n                  console.log(`收集前照片 ${index + 1}:`, file.name);\n                  formData.append('photosBefore', file);\n                }\n              });\n            }\n\n            // 添加收集后照片\n            if (photoFilesAfter.value && photoFilesAfter.value.length > 0) {\n              console.log('添加收集后照片数量:', photoFilesAfter.value.length);\n              photoFilesAfter.value.forEach((file, index) => {\n                if (file) {\n                  console.log(`收集后照片 ${index + 1}:`, file.name);\n                  formData.append('photosAfter', file);\n                }\n              });\n            }\n            const response = await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\n            console.log('提交响应:', response.data);\n            ElMessage.success('废物记录提交成功');\n            resetForm();\n          } catch (error) {\n            console.error('Error submitting form:', error);\n            if (error.response) {\n              console.error('错误响应数据:', error.response.data);\n              console.error('错误状态码:', error.response.status);\n            }\n            ElMessage.error('提交失败，请稍后再试');\n          } finally {\n            loading.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n    const resetForm = () => {\n      if (wasteForm.value) {\n        wasteForm.value.resetFields();\n      }\n      photoFilesBefore.value = [];\n      photoFilesAfter.value = [];\n      fileListBefore.value = [];\n      fileListAfter.value = [];\n      form.quantity = 0;\n      form.collectionDate = new Date().toISOString().slice(0, 10); // 重置为今天\n      form.collectionTime = '08:00'; // 重置为默认时间\n    };\n    const goBack = () => {\n      // 只有超级管理员才能返回到单位选择页面\n      if (isAdmin.value) {\n        router.push('/');\n      }\n    };\n    const viewRecords = () => {\n      router.push({\n        name: 'RecordsList',\n        params: {\n          unitId: props.id\n        }\n      });\n    };\n    return {\n      form,\n      rules,\n      wasteForm,\n      loading,\n      unitName,\n      wasteTypes,\n      isAdmin,\n      fileListBefore,\n      fileListAfter,\n      handlePhotoBeforeChange,\n      handlePhotoBeforeRemove,\n      handlePhotoAfterChange,\n      handlePhotoAfterRemove,\n      handleBeforeUpload,\n      submitForm,\n      resetForm,\n      goBack,\n      viewRecords\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useRouter","ElMessage","httpService","apiConfig","ArrowLeft","Document","Plus","Clock","auth","name","components","props","id","type","String","Number","required","setup","router","wasteForm","loading","unitName","wasteTypes","photoFilesBefore","photoFilesAfter","fileListBefore","fileListAfter","isAdmin","state","isLoggedIn","user","role_id","form","wasteTypeId","location","collectionDate","Date","toISOString","slice","collectionTime","quantity","photosBefore","photosAfter","rules","message","trigger","fetchUnitName","fetchWasteTypes","response","get","endpoints","units","unit","data","find","u","parseInt","value","error","console","handleBeforeUpload","file","uid","now","Math","random","toString","substr","handlePhotoBeforeChange","fileList","map","f","raw","handlePhotoBeforeRemove","handlePhotoAfterChange","handlePhotoAfterRemove","submitForm","validate","valid","formData","FormData","append","combinedDateTime","log","unitId","length","forEach","index","postForm","wasteRecords","success","resetForm","status","warning","resetFields","goBack","push","viewRecords","params"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\WasteForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"waste-form-container\">\r\n    <div class=\"header\">\r\n      <div class=\"back-button\" @click=\"goBack\" v-if=\"isAdmin\">\r\n        <el-icon><arrow-left /></el-icon> 返回\r\n      </div>\r\n      <div v-else></div>\r\n      <h1>危险废物填报</h1>\r\n      <div class=\"view-records\" @click=\"viewRecords\">\r\n        查看记录 <el-icon><document /></el-icon>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"unit-info\">\r\n        <h2>{{ unitName }}</h2>\r\n      </div>\r\n\r\n      <el-form \r\n        ref=\"wasteForm\" \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        label-width=\"120px\"\r\n        class=\"waste-form\"\r\n      >\r\n        <el-form-item label=\"废物类型\" prop=\"wasteTypeId\">\r\n          <el-select v-model=\"form.wasteTypeId\" placeholder=\"请选择废物类型\" style=\"width: 100%\">\r\n            <el-option \r\n              v-for=\"type in wasteTypes\" \r\n              :key=\"type.id\" \r\n              :label=\"type.name\" \r\n              :value=\"type.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"产生地点\" prop=\"location\">\r\n          <el-input v-model=\"form.location\" placeholder=\"请输入废物产生地点\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集日期\">\r\n          <el-date-picker\r\n            v-model=\"form.collectionDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            format=\"YYYY-MM-DD\"\r\n            value-format=\"YYYY-MM-DD\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集时间\">\r\n          <el-time-picker\r\n            v-model=\"form.collectionTime\"\r\n            format=\"HH:mm\"\r\n            placeholder=\"选择时间\"\r\n            value-format=\"HH:mm\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <template #prefix>\r\n              <el-icon><clock /></el-icon>\r\n            </template>\r\n          </el-time-picker>\r\n          <!-- <div class=\"time-tip\">只需选择小时和分钟</div> -->\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集数量(吨)\" prop=\"quantity\">\r\n          <el-input-number \r\n            v-model=\"form.quantity\" \r\n            :min=\"0\" \r\n            :precision=\"3\" \r\n            :step=\"0.001\" \r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片（收集前）\" prop=\"photosBefore\">\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoBeforeChange\"\r\n            :on-remove=\"handlePhotoBeforeRemove\"\r\n            :file-list=\"fileListBefore\"\r\n            :limit=\"10\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n          <div class=\"photo-tip\">请上传废物收集前的现场照片（最多10张）</div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片（收集后）\" prop=\"photosAfter\">\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoAfterChange\"\r\n            :on-remove=\"handlePhotoAfterRemove\"\r\n            :file-list=\"fileListAfter\"\r\n            :limit=\"10\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n          <div class=\"photo-tip\">请上传废物收集后的现场照片（最多10张）</div>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"loading\">提交</el-button>\r\n          <el-button @click=\"resetForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage } from 'element-plus';\r\nimport httpService from '../config/httpService';\r\nimport apiConfig from '../config/api';\r\nimport { ArrowLeft, Document, Plus, Clock } from '@element-plus/icons-vue';\r\nimport auth from '../store/auth';\r\n\r\nexport default {\r\n  name: 'WasteForm',\r\n  components: {\r\n    ArrowLeft,\r\n    Document,\r\n    Plus,\r\n    Clock\r\n  },\r\n  props: {\r\n    id: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const router = useRouter();\r\n    const wasteForm = ref(null);\r\n    const loading = ref(false);\r\n    const unitName = ref('');\r\n    const wasteTypes = ref([]);\r\n    const photoFilesBefore = ref([]);\r\n    const photoFilesAfter = ref([]);\r\n    const fileListBefore = ref([]);\r\n    const fileListAfter = ref([]);\r\n    \r\n    // 检查用户是否为超级管理员\r\n    const isAdmin = computed(() => {\r\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\r\n    });\r\n\r\n    // 初始化表单，将日期和时间分开\r\n    const form = reactive({\r\n      wasteTypeId: '',\r\n      location: '',\r\n      collectionDate: new Date().toISOString().slice(0, 10), // 默认为当天\r\n      collectionTime: '08:00',\r\n      quantity: 0,\r\n      photosBefore: [],\r\n      photosAfter: []\r\n    });\r\n\r\n    const rules = {\r\n      wasteTypeId: [\r\n        { required: true, message: '请选择废物类型', trigger: 'change' }\r\n      ],\r\n      location: [\r\n        { required: true, message: '请输入废物产生地点', trigger: 'blur' }\r\n      ],\r\n      collectionDate: [\r\n        { required: false }\r\n      ],\r\n      collectionTime: [\r\n        { required: false }\r\n      ],\r\n      quantity: [\r\n        { required: true, message: '请输入收集数量', trigger: 'change' }\r\n      ]\r\n    };\r\n\r\n    onMounted(async () => {\r\n      await fetchUnitName();\r\n      await fetchWasteTypes();\r\n    });\r\n\r\n    const fetchUnitName = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        const unit = response.data.find(u => u.id === parseInt(props.id));\r\n        if (unit) {\r\n          unitName.value = unit.name;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching unit name:', error);\r\n        ElMessage.error('获取单位信息失败');\r\n      }\r\n    };\r\n\r\n    const fetchWasteTypes = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\r\n        wasteTypes.value = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching waste types:', error);\r\n        ElMessage.error('获取废物类型失败');\r\n      }\r\n    };\r\n\r\n    // 处理上传前的文件处理\r\n    const handleBeforeUpload = (file) => {\r\n      if (!file.uid) {\r\n        file.uid = Date.now() + '-' + Math.random().toString(36).substr(2, 10);\r\n      }\r\n      return true; // 允许上传\r\n    };\r\n\r\n    // 处理收集前照片变更\r\n    const handlePhotoBeforeChange = (file, fileList) => {\r\n      // 更新文件列表\r\n      fileListBefore.value = fileList;\r\n      photoFilesBefore.value = fileList.map(f => f.raw);\r\n    };\r\n\r\n    // 处理收集前照片移除\r\n    const handlePhotoBeforeRemove = (file, fileList) => {\r\n      fileListBefore.value = fileList;\r\n      photoFilesBefore.value = fileList.map(f => f.raw);\r\n    };\r\n\r\n    // 处理收集后照片变更\r\n    const handlePhotoAfterChange = (file, fileList) => {\r\n      // 更新文件列表\r\n      fileListAfter.value = fileList;\r\n      photoFilesAfter.value = fileList.map(f => f.raw);\r\n    };\r\n\r\n    // 处理收集后照片移除\r\n    const handlePhotoAfterRemove = (file, fileList) => {\r\n      fileListAfter.value = fileList;\r\n      photoFilesAfter.value = fileList.map(f => f.raw);\r\n    };\r\n\r\n    const submitForm = () => {\r\n      wasteForm.value.validate(async (valid) => {\r\n        if (valid) {\r\n          loading.value = true;\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('unitId', props.id);\r\n            formData.append('wasteTypeId', form.wasteTypeId);\r\n            formData.append('location', form.location);\r\n            \r\n            // 组合日期和时间，如果有的话\r\n            if (form.collectionDate && form.collectionTime) {\r\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\r\n              formData.append('collectionStartTime', combinedDateTime);\r\n            }\r\n            formData.append('quantity', form.quantity);\r\n            \r\n            // 添加创建者ID（如果用户已登录）\r\n            if (auth.state.isLoggedIn && auth.state.user) {\r\n              formData.append('creatorId', auth.state.user.id);\r\n            }\r\n            \r\n            console.log('提交表单数据:', {\r\n              unitId: props.id,\r\n              wasteTypeId: form.wasteTypeId,\r\n              location: form.location,\r\n              quantity: form.quantity,\r\n              photosBefore: photoFilesBefore.value ? photoFilesBefore.value.length : 0,\r\n              photosAfter: photoFilesAfter.value ? photoFilesAfter.value.length : 0\r\n            });\r\n            \r\n            // 添加收集前照片\r\n            if (photoFilesBefore.value && photoFilesBefore.value.length > 0) {\r\n              console.log('添加收集前照片数量:', photoFilesBefore.value.length);\r\n              photoFilesBefore.value.forEach((file, index) => {\r\n                if (file) {\r\n                  console.log(`收集前照片 ${index+1}:`, file.name);\r\n                  formData.append('photosBefore', file);\r\n                }\r\n              });\r\n            }\r\n            \r\n            // 添加收集后照片\r\n            if (photoFilesAfter.value && photoFilesAfter.value.length > 0) {\r\n              console.log('添加收集后照片数量:', photoFilesAfter.value.length);\r\n              photoFilesAfter.value.forEach((file, index) => {\r\n                if (file) {\r\n                  console.log(`收集后照片 ${index+1}:`, file.name);\r\n                  formData.append('photosAfter', file);\r\n                }\r\n              });\r\n            }\r\n\r\n            const response = await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\r\n            console.log('提交响应:', response.data);\r\n\r\n            ElMessage.success('废物记录提交成功');\r\n            resetForm();\r\n          } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            if (error.response) {\r\n              console.error('错误响应数据:', error.response.data);\r\n              console.error('错误状态码:', error.response.status);\r\n            }\r\n            ElMessage.error('提交失败，请稍后再试');\r\n          } finally {\r\n            loading.value = false;\r\n          }\r\n        } else {\r\n          ElMessage.warning('请完成必填项');\r\n        }\r\n      });\r\n    };\r\n\r\n    const resetForm = () => {\r\n      if (wasteForm.value) {\r\n        wasteForm.value.resetFields();\r\n      }\r\n      photoFilesBefore.value = [];\r\n      photoFilesAfter.value = [];\r\n      fileListBefore.value = [];\r\n      fileListAfter.value = [];\r\n      form.quantity = 0;\r\n      form.collectionDate = new Date().toISOString().slice(0, 10); // 重置为今天\r\n      form.collectionTime = '08:00'; // 重置为默认时间\r\n    };\r\n\r\n    const goBack = () => {\r\n      // 只有超级管理员才能返回到单位选择页面\r\n      if (isAdmin.value) {\r\n        router.push('/');\r\n      }\r\n    };\r\n\r\n    const viewRecords = () => {\r\n      router.push({ name: 'RecordsList', params: { unitId: props.id } });\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      wasteForm,\r\n      loading,\r\n      unitName,\r\n      wasteTypes,\r\n      isAdmin,\r\n      fileListBefore,\r\n      fileListAfter,\r\n      handlePhotoBeforeChange,\r\n      handlePhotoBeforeRemove,\r\n      handlePhotoAfterChange,\r\n      handlePhotoAfterRemove,\r\n      handleBeforeUpload,\r\n      submitForm,\r\n      resetForm,\r\n      goBack,\r\n      viewRecords\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.waste-form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.back-button, .view-records {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 30px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.unit-info {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.unit-info h2 {\r\n  color: #333;\r\n  border-bottom: 2px solid #409EFF;\r\n  display: inline-block;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.waste-form {\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.waste-photo-uploader {\r\n  width: 100%;\r\n}\r\n\r\n.photo-tip, .time-tip {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f5f5;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}