{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nexport default {\n  name: 'EditRecordView',\n  components: {\n    ArrowLeft,\n    Plus,\n    Clock,\n    ElImageViewer\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const recordForm = ref(null);\n    const loading = ref(false);\n    const submitting = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const units = ref([]);\n    const photoFiles = ref([]);\n    const photoList = ref([]);\n    const previewImages = ref([]);\n    const showViewer = ref(false);\n    const previewIndex = ref(0);\n    const existingPhotoPaths = ref([]);\n    const createdAt = ref('');\n\n    // 确定是新增还是编辑\n    const isNew = computed(() => !route.params.id || route.params.id === 'new');\n\n    // 是否为超级管理员\n    const isSuperAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n    const form = reactive({\n      unitId: '',\n      wasteTypeId: '',\n      location: '',\n      collectionDate: new Date().toISOString().slice(0, 10),\n      // 默认为当天\n      collectionTime: '08:00',\n      quantity: 0,\n      recordId: null,\n      creatorId: auth.state.user?.id || null\n    });\n    const rules = {\n      unitId: [{\n        required: true,\n        message: '请选择单位',\n        trigger: 'change'\n      }],\n      wasteTypeId: [{\n        required: true,\n        message: '请选择废物类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入废物产生地点',\n        trigger: 'blur'\n      }],\n      collectionDate: [{\n        required: false\n      }],\n      collectionTime: [{\n        required: false\n      }],\n      quantity: [{\n        required: true,\n        message: '请输入收集数量',\n        trigger: 'change'\n      }]\n    };\n    onMounted(async () => {\n      loading.value = true;\n      try {\n        // 获取废物类型\n        await fetchWasteTypes();\n\n        // 如果是超级管理员，获取所有单位\n        if (isSuperAdmin.value) {\n          await fetchUnits();\n        }\n\n        // 如果有记录ID，则获取记录详情\n        if (!isNew.value) {\n          await fetchRecordDetails(route.params.id);\n        } else {\n          // 新增记录默认使用当前用户的单位（非超级管理员）\n          if (!isSuperAdmin.value && auth.state.user) {\n            form.unitId = auth.state.user.unit_id;\n            await fetchUnitName(form.unitId);\n          }\n        }\n      } catch (error) {\n        console.error('初始化数据失败:', error);\n        ElMessage.error('加载数据失败，请刷新重试');\n      } finally {\n        loading.value = false;\n      }\n    });\n\n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        units.value = response.data;\n      } catch (error) {\n        console.error('获取单位列表失败:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n\n    // 获取单位名称\n    const fetchUnitName = async unitId => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('获取单位信息失败:', error);\n      }\n    };\n\n    // 获取废物类型\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('获取废物类型失败:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    // 获取记录详情\n    const fetchRecordDetails = async recordId => {\n      loading.value = true;\n      try {\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/${recordId}`);\n        const record = response.data;\n\n        // 填充表单数据\n        form.wasteTypeId = record.waste_type_id;\n        form.location = record.location;\n\n        // 处理收集时间\n        if (record.collection_start_time) {\n          const dateTime = new Date(record.collection_start_time);\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\n          form.collectionTime = dateTime.toTimeString().slice(0, 5);\n        }\n        form.quantity = record.quantity;\n\n        // 处理照片\n        if (record.photo_path) {\n          // 解析JSON格式的照片路径\n          try {\n            const photoPaths = JSON.parse(record.photo_path);\n\n            // 设置预览图片\n            previewImages.value = photoPaths.map(path => `${apiConfig.baseURL}${path}`);\n\n            // 设置已有照片路径\n            existingPhotoPaths.value = photoPaths;\n          } catch (error) {\n            console.error('解析照片路径失败:', error);\n            previewImages.value = [];\n            existingPhotoPaths.value = [];\n          }\n        }\n\n        // 获取单位名称\n        unitName.value = record.unit_name;\n\n        // 设置创建时间\n        createdAt.value = record.created_at;\n      } catch (error) {\n        console.error('获取记录详情失败:', error);\n        ElMessage.error('获取记录详情失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 处理照片变更\n    const handlePhotoChange = (file, fileList) => {\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\n      // 更新预览图片列表\n      updatePreviewImages(fileList);\n    };\n\n    // 处理照片移除\n    const handlePhotoRemove = (file, fileList) => {\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\n      // 更新预览图片列表\n      updatePreviewImages(fileList);\n    };\n\n    // 更新预览图片列表\n    const updatePreviewImages = fileList => {\n      previewImages.value = fileList.map(file => {\n        if (file.url) {\n          return file.url;\n        } else if (file.raw) {\n          return URL.createObjectURL(file.raw);\n        }\n        return '';\n      }).filter(url => url);\n    };\n\n    // 处理图片预览\n    const handlePictureCardPreview = file => {\n      // 找到当前图片在预览列表中的索引\n      const index = previewImages.value.findIndex(url => {\n        return url === file.url || file.raw && url === URL.createObjectURL(file.raw);\n      });\n      if (index !== -1) {\n        previewIndex.value = index;\n      } else {\n        previewIndex.value = 0;\n      }\n\n      // 显示图片预览器\n      showViewer.value = true;\n    };\n\n    // 关闭图片预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n\n    // 提交表单\n    const submitForm = () => {\n      recordForm.value.validate(async valid => {\n        if (valid) {\n          submitting.value = true;\n          try {\n            const formData = new FormData();\n            formData.append('unitId', form.unitId);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n\n            // 组合日期和时间，如果有的话\n            if (form.collectionDate && form.collectionTime) {\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\n              formData.append('collectionStartTime', combinedDateTime);\n            }\n            formData.append('quantity', form.quantity);\n            formData.append('creatorId', form.creatorId);\n\n            // 添加多张照片\n            if (photoFiles.value && photoFiles.value.length > 0) {\n              photoFiles.value.forEach(file => {\n                if (file) {\n                  formData.append('photos', file);\n                }\n              });\n            }\n            if (isNew.value) {\n              // 新增记录\n              await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\n              ElMessage.success('废物记录添加成功');\n            } else {\n              // 更新记录\n              await httpService.postForm(`${apiConfig.endpoints.wasteRecords}/${form.recordId}`, formData);\n              ElMessage.success('废物记录更新成功');\n            }\n\n            // 返回记录列表\n            goBack();\n          } catch (error) {\n            console.error('提交表单失败:', error);\n            ElMessage.error('保存失败，请稍后再试');\n          } finally {\n            submitting.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n\n    // 返回上一页\n    const goBack = () => {\n      if (isSuperAdmin.value) {\n        router.push('/admin-records');\n      } else {\n        router.push({\n          name: 'RecordsList',\n          params: {\n            unitId: auth.state.user.unit_id\n          }\n        });\n      }\n    };\n    return {\n      form,\n      rules,\n      recordForm,\n      loading,\n      submitting,\n      unitName,\n      wasteTypes,\n      units,\n      photoList,\n      previewImages,\n      showViewer,\n      previewIndex,\n      isNew,\n      isSuperAdmin,\n      handlePhotoChange,\n      handlePhotoRemove,\n      handlePictureCardPreview,\n      closeViewer,\n      submitForm,\n      goBack\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useRouter","useRoute","ElMessage","ElImageViewer","httpService","apiConfig","ArrowLeft","Plus","Clock","auth","name","components","setup","router","route","recordForm","loading","submitting","unitName","wasteTypes","units","photoFiles","photoList","previewImages","showViewer","previewIndex","existingPhotoPaths","createdAt","isNew","params","id","isSuperAdmin","state","isLoggedIn","user","role_id","form","unitId","wasteTypeId","location","collectionDate","Date","toISOString","slice","collectionTime","quantity","recordId","creatorId","rules","required","message","trigger","value","fetchWasteTypes","fetchUnits","fetchRecordDetails","unit_id","fetchUnitName","error","console","response","get","endpoints","data","unit","find","u","parseInt","wasteRecords","record","waste_type_id","collection_start_time","dateTime","toTimeString","photo_path","photoPaths","JSON","parse","map","path","baseURL","unit_name","created_at","handlePhotoChange","file","fileList","f","raw","filter","updatePreviewImages","handlePhotoRemove","url","URL","createObjectURL","handlePictureCardPreview","index","findIndex","closeViewer","submitForm","validate","valid","formData","FormData","append","combinedDateTime","length","forEach","postForm","success","goBack","warning","push"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\EditRecord.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-record-container\">\r\n    <div class=\"header\">\r\n      <div class=\"back-button\" @click=\"goBack\">\r\n        <el-icon><arrow-left /></el-icon> 返回\r\n      </div>\r\n      <h1>{{ isNew ? '新增废物记录' : '编辑废物记录' }}</h1>\r\n      <div></div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"form-header\">\r\n        <h2>{{ unitName }}</h2>\r\n      </div>\r\n\r\n      <el-form \r\n        ref=\"recordForm\" \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        label-width=\"120px\"\r\n        class=\"record-form\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <!-- 如果是超级管理员且是新增记录，显示单位选择 -->\r\n        <el-form-item label=\"单位\" prop=\"unitId\" v-if=\"isSuperAdmin && isNew\">\r\n          <el-select v-model=\"form.unitId\" placeholder=\"请选择单位\" style=\"width: 100%\">\r\n            <el-option \r\n              v-for=\"unit in units\" \r\n              :key=\"unit.id\" \r\n              :label=\"unit.name\" \r\n              :value=\"unit.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"废物类型\" prop=\"wasteTypeId\">\r\n          <el-select v-model=\"form.wasteTypeId\" placeholder=\"请选择废物类型\" style=\"width: 100%\">\r\n            <el-option \r\n              v-for=\"type in wasteTypes\" \r\n              :key=\"type.id\" \r\n              :label=\"type.name\" \r\n              :value=\"type.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"产生地点\" prop=\"location\">\r\n          <el-input v-model=\"form.location\" placeholder=\"请输入废物产生地点\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集日期\">\r\n          <el-date-picker\r\n            v-model=\"form.collectionDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            format=\"YYYY-MM-DD\"\r\n            value-format=\"YYYY-MM-DD\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集时间\">\r\n          <el-time-picker\r\n            v-model=\"form.collectionTime\"\r\n            format=\"HH:mm\"\r\n            placeholder=\"选择时间\"\r\n            value-format=\"HH:mm\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <template #prefix>\r\n              <el-icon><clock /></el-icon>\r\n            </template>\r\n          </el-time-picker>\r\n          <!-- <div class=\"time-tip\">只需选择小时和分钟</div> -->\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集数量(吨)\" prop=\"quantity\">\r\n          <el-input-number \r\n            v-model=\"form.quantity\" \r\n            :min=\"0\" \r\n            :precision=\"3\" \r\n            :step=\"0.001\" \r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片\" prop=\"photos\">\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoChange\"\r\n            :on-remove=\"handlePhotoRemove\"\r\n            :file-list=\"photoList\"\r\n            :limit=\"10\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :on-preview=\"handlePictureCardPreview\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n          <div class=\"photo-tip\">请上传废物现场照片（最多10张）</div>\r\n          \r\n          <!-- 添加独立的图片预览组件 -->\r\n          <el-image-viewer\r\n            v-if=\"showViewer\"\r\n            :url-list=\"previewImages\"\r\n            :initial-index=\"previewIndex\"\r\n            @close=\"closeViewer\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">保存</el-button>\r\n          <el-button @click=\"goBack\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { ElMessage, ElImageViewer } from 'element-plus';\r\nimport httpService from '../config/httpService';\r\nimport apiConfig from '../config/api';\r\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\r\nimport auth from '../store/auth';\r\n\r\nexport default {\r\n  name: 'EditRecordView',\r\n  components: {\r\n    ArrowLeft,\r\n    Plus,\r\n    Clock,\r\n    ElImageViewer\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const recordForm = ref(null);\r\n    const loading = ref(false);\r\n    const submitting = ref(false);\r\n    const unitName = ref('');\r\n    const wasteTypes = ref([]);\r\n    const units = ref([]);\r\n    const photoFiles = ref([]);\r\n    const photoList = ref([]);\r\n    const previewImages = ref([]);\r\n    const showViewer = ref(false);\r\n    const previewIndex = ref(0);\r\n    const existingPhotoPaths = ref([]);\r\n    const createdAt = ref('');\r\n\r\n    // 确定是新增还是编辑\r\n    const isNew = computed(() => !route.params.id || route.params.id === 'new');\r\n    \r\n    // 是否为超级管理员\r\n    const isSuperAdmin = computed(() => {\r\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\r\n    });\r\n\r\n    const form = reactive({\r\n      unitId: '',\r\n      wasteTypeId: '',\r\n      location: '',\r\n      collectionDate: new Date().toISOString().slice(0, 10), // 默认为当天\r\n      collectionTime: '08:00',\r\n      quantity: 0,\r\n      recordId: null,\r\n      creatorId: auth.state.user?.id || null\r\n    });\r\n\r\n    const rules = {\r\n      unitId: [\r\n        { required: true, message: '请选择单位', trigger: 'change' }\r\n      ],\r\n      wasteTypeId: [\r\n        { required: true, message: '请选择废物类型', trigger: 'change' }\r\n      ],\r\n      location: [\r\n        { required: true, message: '请输入废物产生地点', trigger: 'blur' }\r\n      ],\r\n      collectionDate: [\r\n        { required: false }\r\n      ],\r\n      collectionTime: [\r\n        { required: false }\r\n      ],\r\n      quantity: [\r\n        { required: true, message: '请输入收集数量', trigger: 'change' }\r\n      ]\r\n    };\r\n\r\n    onMounted(async () => {\r\n      loading.value = true;\r\n      \r\n      try {\r\n        // 获取废物类型\r\n        await fetchWasteTypes();\r\n        \r\n        // 如果是超级管理员，获取所有单位\r\n        if (isSuperAdmin.value) {\r\n          await fetchUnits();\r\n        }\r\n        \r\n        // 如果有记录ID，则获取记录详情\r\n        if (!isNew.value) {\r\n          await fetchRecordDetails(route.params.id);\r\n        } else {\r\n          // 新增记录默认使用当前用户的单位（非超级管理员）\r\n          if (!isSuperAdmin.value && auth.state.user) {\r\n            form.unitId = auth.state.user.unit_id;\r\n            await fetchUnitName(form.unitId);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('初始化数据失败:', error);\r\n        ElMessage.error('加载数据失败，请刷新重试');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    });\r\n\r\n    // 获取单位列表\r\n    const fetchUnits = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        units.value = response.data;\r\n      } catch (error) {\r\n        console.error('获取单位列表失败:', error);\r\n        ElMessage.error('获取单位列表失败');\r\n      }\r\n    };\r\n\r\n    // 获取单位名称\r\n    const fetchUnitName = async (unitId) => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        const unit = response.data.find(u => u.id === parseInt(unitId));\r\n        if (unit) {\r\n          unitName.value = unit.name;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取单位信息失败:', error);\r\n      }\r\n    };\r\n\r\n    // 获取废物类型\r\n    const fetchWasteTypes = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\r\n        wasteTypes.value = response.data;\r\n      } catch (error) {\r\n        console.error('获取废物类型失败:', error);\r\n        ElMessage.error('获取废物类型失败');\r\n      }\r\n    };\r\n\r\n    // 获取记录详情\r\n    const fetchRecordDetails = async (recordId) => {\r\n      loading.value = true;\r\n      try {\r\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/${recordId}`);\r\n        const record = response.data;\r\n        \r\n        // 填充表单数据\r\n        form.wasteTypeId = record.waste_type_id;\r\n        form.location = record.location;\r\n        \r\n        // 处理收集时间\r\n        if (record.collection_start_time) {\r\n          const dateTime = new Date(record.collection_start_time);\r\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\r\n          form.collectionTime = dateTime.toTimeString().slice(0, 5);\r\n        }\r\n        \r\n        form.quantity = record.quantity;\r\n        \r\n        // 处理照片\r\n        if (record.photo_path) {\r\n          // 解析JSON格式的照片路径\r\n          try {\r\n            const photoPaths = JSON.parse(record.photo_path);\r\n            \r\n            // 设置预览图片\r\n            previewImages.value = photoPaths.map(path => `${apiConfig.baseURL}${path}`);\r\n            \r\n            // 设置已有照片路径\r\n            existingPhotoPaths.value = photoPaths;\r\n          } catch (error) {\r\n            console.error('解析照片路径失败:', error);\r\n            previewImages.value = [];\r\n            existingPhotoPaths.value = [];\r\n          }\r\n        }\r\n        \r\n        // 获取单位名称\r\n        unitName.value = record.unit_name;\r\n        \r\n        // 设置创建时间\r\n        createdAt.value = record.created_at;\r\n        \r\n      } catch (error) {\r\n        console.error('获取记录详情失败:', error);\r\n        ElMessage.error('获取记录详情失败');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 处理照片变更\r\n    const handlePhotoChange = (file, fileList) => {\r\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\r\n      // 更新预览图片列表\r\n      updatePreviewImages(fileList);\r\n    };\r\n\r\n    // 处理照片移除\r\n    const handlePhotoRemove = (file, fileList) => {\r\n      photoFiles.value = fileList.map(f => f.raw).filter(f => f);\r\n      // 更新预览图片列表\r\n      updatePreviewImages(fileList);\r\n    };\r\n\r\n    // 更新预览图片列表\r\n    const updatePreviewImages = (fileList) => {\r\n      previewImages.value = fileList.map(file => {\r\n        if (file.url) {\r\n          return file.url;\r\n        } else if (file.raw) {\r\n          return URL.createObjectURL(file.raw);\r\n        }\r\n        return '';\r\n      }).filter(url => url);\r\n    };\r\n\r\n    // 处理图片预览\r\n    const handlePictureCardPreview = (file) => {\r\n      // 找到当前图片在预览列表中的索引\r\n      const index = previewImages.value.findIndex(url => {\r\n        return url === file.url || (file.raw && url === URL.createObjectURL(file.raw));\r\n      });\r\n      \r\n      if (index !== -1) {\r\n        previewIndex.value = index;\r\n      } else {\r\n        previewIndex.value = 0;\r\n      }\r\n      \r\n      // 显示图片预览器\r\n      showViewer.value = true;\r\n    };\r\n    \r\n    // 关闭图片预览\r\n    const closeViewer = () => {\r\n      showViewer.value = false;\r\n    };\r\n\r\n    // 提交表单\r\n    const submitForm = () => {\r\n      recordForm.value.validate(async (valid) => {\r\n        if (valid) {\r\n          submitting.value = true;\r\n          \r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('unitId', form.unitId);\r\n            formData.append('wasteTypeId', form.wasteTypeId);\r\n            formData.append('location', form.location);\r\n            \r\n            // 组合日期和时间，如果有的话\r\n            if (form.collectionDate && form.collectionTime) {\r\n              const combinedDateTime = `${form.collectionDate} ${form.collectionTime}:00`;\r\n              formData.append('collectionStartTime', combinedDateTime);\r\n            }\r\n            formData.append('quantity', form.quantity);\r\n            formData.append('creatorId', form.creatorId);\r\n            \r\n            // 添加多张照片\r\n            if (photoFiles.value && photoFiles.value.length > 0) {\r\n              photoFiles.value.forEach(file => {\r\n                if (file) {\r\n                  formData.append('photos', file);\r\n                }\r\n              });\r\n            }\r\n            \r\n            if (isNew.value) {\r\n              // 新增记录\r\n              await httpService.postForm(apiConfig.endpoints.wasteRecords, formData);\r\n              ElMessage.success('废物记录添加成功');\r\n            } else {\r\n              // 更新记录\r\n              await httpService.postForm(`${apiConfig.endpoints.wasteRecords}/${form.recordId}`, formData);\r\n              ElMessage.success('废物记录更新成功');\r\n            }\r\n            \r\n            // 返回记录列表\r\n            goBack();\r\n          } catch (error) {\r\n            console.error('提交表单失败:', error);\r\n            ElMessage.error('保存失败，请稍后再试');\r\n          } finally {\r\n            submitting.value = false;\r\n          }\r\n        } else {\r\n          ElMessage.warning('请完成必填项');\r\n        }\r\n      });\r\n    };\r\n\r\n    // 返回上一页\r\n    const goBack = () => {\r\n      if (isSuperAdmin.value) {\r\n        router.push('/admin-records');\r\n      } else {\r\n        router.push({ \r\n          name: 'RecordsList', \r\n          params: { unitId: auth.state.user.unit_id } \r\n        });\r\n      }\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      recordForm,\r\n      loading,\r\n      submitting,\r\n      unitName,\r\n      wasteTypes,\r\n      units,\r\n      photoList,\r\n      previewImages,\r\n      showViewer,\r\n      previewIndex,\r\n      isNew,\r\n      isSuperAdmin,\r\n      handlePhotoChange,\r\n      handlePhotoRemove,\r\n      handlePictureCardPreview,\r\n      closeViewer,\r\n      submitForm,\r\n      goBack\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.edit-record-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.back-button {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 30px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.form-header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-header h2 {\r\n  color: #333;\r\n  border-bottom: 2px solid #409EFF;\r\n  display: inline-block;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.record-form {\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.waste-photo-uploader {\r\n  width: 100%;\r\n}\r\n\r\n.photo-tip, .time-tip {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f5f5;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 修复Element Plus图片预览组件的z-index问题 */\r\n.el-image-viewer__wrapper {\r\n  z-index: 2147483647 !important; /* 使用最大可能的z-index值 */\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的遮罩层也在最上层 */\r\n.el-image-viewer__mask {\r\n  z-index: 2147483646 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的操作按钮在最上层 */\r\n.el-image-viewer__btn {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的关闭按钮在最上层 */\r\n.el-image-viewer__close {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的图片在最上层 */\r\n.el-image-viewer__img {\r\n  z-index: 2147483646 !important;\r\n  position: relative !important;\r\n}\r\n\r\n/* 确保图片预览的操作栏在最上层 */\r\n.el-image-viewer__actions {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的缩放按钮在最上层 */\r\n.el-image-viewer__actions__inner {\r\n  z-index: 2147483647 !important;\r\n  position: relative !important;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}