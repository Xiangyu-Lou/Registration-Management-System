{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nexport default {\n  name: 'EditRecordView',\n  components: {\n    ArrowLeft,\n    Plus,\n    Clock,\n    ElImageViewer\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const recordForm = ref(null);\n    const loading = ref(false);\n    const submitting = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const units = ref([]);\n    const fileListBefore = ref([]);\n    const fileListAfter = ref([]);\n    const previewImages = ref([]);\n    const showViewer = ref(false);\n    const previewIndex = ref(0);\n    const createdAt = ref('');\n    const showUploadProgress = ref(false);\n    const uploadPercentage = ref(0);\n    const uploadStatus = ref('准备上传...');\n    const showLargeFileWarning = ref(false);\n\n    // 是否为新增记录\n    const isNew = computed(() => {\n      return !route.params.id || route.params.id === 'new';\n    });\n\n    // 是否为超级管理员\n    const isSuperAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    // 表单数据\n    const form = reactive({\n      unitId: '',\n      wasteTypeId: '',\n      location: '',\n      collectionDate: '',\n      collectionTime: '',\n      quantity: 0,\n      recordId: null,\n      creatorId: auth.state.user?.id || null,\n      photo_path_before: '',\n      photo_path_after: '',\n      remarks: ''\n    });\n    const rules = {\n      unitId: [{\n        required: true,\n        message: '请选择单位',\n        trigger: 'change'\n      }],\n      wasteTypeId: [{\n        required: true,\n        message: '请选择废物类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入废物产生地点',\n        trigger: 'blur'\n      }],\n      collectionDate: [{\n        required: false\n      }],\n      collectionTime: [{\n        required: false\n      }],\n      quantity: [{\n        required: true,\n        message: '请输入收集数量',\n        trigger: 'change'\n      }]\n    };\n    onMounted(async () => {\n      loading.value = true;\n      try {\n        // 获取废物类型\n        await fetchWasteTypes();\n\n        // 如果是超级管理员，获取所有单位\n        if (isSuperAdmin.value) {\n          await fetchUnits();\n        }\n\n        // 如果是新增记录\n        if (isNew.value) {\n          // 新增记录默认使用当前用户的单位（非超级管理员）\n          if (!isSuperAdmin.value && auth.state.user) {\n            form.unitId = auth.state.user.unit_id;\n            await fetchUnitName(form.unitId);\n          }\n        } else {\n          // 只有在编辑现有记录时才获取记录详情\n          await fetchRecordDetails();\n        }\n      } catch (error) {\n        console.error('初始化数据失败:', error);\n        ElMessage.error('加载数据失败，请刷新重试');\n      } finally {\n        loading.value = false;\n      }\n    });\n\n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        units.value = response.data;\n      } catch (error) {\n        console.error('获取单位列表失败:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n\n    // 获取单位名称\n    const fetchUnitName = async unitId => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('获取单位信息失败:', error);\n      }\n    };\n\n    // 获取废物类型\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('获取废物类型失败:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    // 获取记录详情\n    const fetchRecordDetails = async () => {\n      try {\n        loading.value = true;\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/detail/${route.params.id}`);\n        const record = response.data;\n        console.log('获取到的记录详情:', record);\n        form.unitId = record.unit_id;\n        form.wasteTypeId = record.waste_type_id;\n        form.location = record.location;\n        form.recordId = record.id;\n\n        // 处理收集时间\n        if (record.collection_start_time) {\n          const dateTime = new Date(record.collection_start_time);\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\n          form.collectionTime = dateTime.toTimeString().slice(0, 5);\n        }\n        form.quantity = record.quantity;\n\n        // 处理照片\n        if (record.photo_path_before) {\n          fileListBefore.value = [{\n            name: record.photo_path_before.split('/').pop(),\n            url: record.photo_path_before.startsWith('http') ? record.photo_path_before : `${window.location.origin}/${record.photo_path_before}`\n          }];\n        }\n        if (record.photo_path_after) {\n          fileListAfter.value = [{\n            name: record.photo_path_after.split('/').pop(),\n            url: record.photo_path_after.startsWith('http') ? record.photo_path_after : `${window.location.origin}/${record.photo_path_after}`\n          }];\n        }\n\n        // 获取单位名称\n        unitName.value = record.unit_name;\n\n        // 设置创建时间\n        createdAt.value = record.created_at;\n\n        // 初始化预览图片列表\n        updatePreviewImages([...fileListBefore.value, ...fileListAfter.value]);\n      } catch (error) {\n        console.error('获取记录详情失败:', error);\n        ElMessage.error('获取记录详情失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 处理上传前的文件处理\n    const handleBeforeUpload = async file => {\n      // 检查文件类型是否为图片\n      const acceptedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/bmp', 'image/webp'];\n      const isImage = acceptedTypes.includes(file.type);\n      if (!isImage) {\n        ElMessage.error('只能上传图片文件!');\n        return false;\n      }\n\n      // 检查文件大小（50MB = 50 * 1024 * 1024 bytes）\n      const maxSize = 50 * 1024 * 1024;\n      if (file.size > maxSize) {\n        ElMessage.error('图片大小不能超过50MB!');\n        return false;\n      }\n\n      // 检查是否有大文件需要显示警告\n      const largeFileThreshold = 5 * 1024 * 1024; // 5MB\n      if (file.size > largeFileThreshold) {\n        showLargeFileWarning.value = true;\n      }\n\n      // 直接返回true，允许文件被添加到上传列表\n      return true;\n    };\n\n    // 处理收集前的照片变更\n    const handlePhotoBeforeChange = (file, fileList) => {\n      // 检查是否有大文件\n      checkForLargeFiles(fileList);\n\n      // 更新文件列表\n      fileListBefore.value = fileList;\n\n      // 更新表单数据\n      form.photo_path_before = fileList.map(f => f.url).join(',');\n      return false; // 阻止自动上传\n    };\n\n    // 处理收集前的照片移除\n    const handlePhotoBeforeRemove = (file, fileList) => {\n      console.log('收集前照片移除:', file, fileList);\n\n      // 更新fileListBefore\n      fileListBefore.value = fileList;\n\n      // 更新表单数据\n      form.photo_path_before = fileList.map(f => f.url).join(',');\n\n      // 如果没有大文件了，隐藏警告\n      if (!checkForLargeFiles([...fileListBefore.value, ...fileListAfter.value])) {\n        showLargeFileWarning.value = false;\n      }\n\n      // 更新预览图片\n      updatePreviewImages([...fileListBefore.value, ...fileListAfter.value]);\n    };\n\n    // 处理收集后的照片变更\n    const handlePhotoAfterChange = (file, fileList) => {\n      // 检查是否有大文件\n      checkForLargeFiles(fileList);\n\n      // 更新文件列表\n      fileListAfter.value = fileList;\n\n      // 更新表单数据\n      form.photo_path_after = fileList.map(f => f.url).join(',');\n      return false; // 阻止自动上传\n    };\n\n    // 处理收集后的照片移除\n    const handlePhotoAfterRemove = (file, fileList) => {\n      console.log('收集后照片移除:', file, fileList);\n\n      // 更新fileListAfter\n      fileListAfter.value = fileList;\n\n      // 更新表单数据\n      form.photo_path_after = fileList.map(f => f.url).join(',');\n\n      // 如果没有大文件了，隐藏警告\n      if (!checkForLargeFiles([...fileListBefore.value, ...fileListAfter.value])) {\n        showLargeFileWarning.value = false;\n      }\n\n      // 更新预览图片\n      updatePreviewImages([...fileListBefore.value, ...fileListAfter.value]);\n    };\n\n    // 更新预览图片\n    const updatePreviewImages = fileList => {\n      previewImages.value = fileList.map(file => {\n        if (file.url) {\n          return file.url;\n        } else if (file.raw) {\n          return URL.createObjectURL(file.raw);\n        } else if (file instanceof File) {\n          return URL.createObjectURL(file);\n        }\n        return '';\n      }).filter(url => url);\n      console.log('预览图片列表:', previewImages.value);\n    };\n\n    // 处理图片预览\n    const handlePictureCardPreview = file => {\n      console.log('预览图片:', file);\n\n      // 更新预览图片列表\n      updatePreviewImages([...fileListBefore.value, ...fileListAfter.value]);\n\n      // 找到当前图片在预览列表中的索引\n      const index = previewImages.value.findIndex(url => {\n        return url === file.url || file.raw && url === URL.createObjectURL(file.raw);\n      });\n      if (index !== -1) {\n        previewIndex.value = index;\n      } else {\n        previewIndex.value = 0;\n      }\n\n      // 显示图片预览器\n      showViewer.value = true;\n    };\n\n    // 关闭图片预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n\n    // 检查是否有大文件\n    const checkForLargeFiles = files => {\n      const largeFileThreshold = 5 * 1024 * 1024; // 5MB\n      return files.some(file => file.size > largeFileThreshold);\n    };\n\n    // 处理上传进度\n    const handleUploadProgress = progressEvent => {\n      if (progressEvent.total) {\n        const percentage = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        uploadPercentage.value = percentage;\n        if (percentage < 33) {\n          uploadStatus.value = '正在上传文件...';\n        } else if (percentage < 66) {\n          uploadStatus.value = '正在处理文件...';\n        } else if (percentage < 100) {\n          uploadStatus.value = '即将完成...';\n        } else {\n          uploadStatus.value = '上传完成，正在保存...';\n        }\n      }\n    };\n\n    // 格式化百分比显示\n    const percentageFormat = percentage => {\n      return percentage === 100 ? '完成' : `${percentage}%`;\n    };\n\n    // 提交表单\n    const submitForm = async () => {\n      if (!recordForm.value) return;\n      await recordForm.value.validate(async valid => {\n        if (valid) {\n          // 显示上传进度对话框\n          uploadPercentage.value = 0;\n          uploadStatus.value = '正在上传文件...';\n          showUploadProgress.value = true;\n          try {\n            const formData = new FormData();\n            formData.append('unitId', form.unitId);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n            formData.append('collectionDate', form.collectionDate);\n            formData.append('collectionTime', form.collectionTime);\n            formData.append('quantity', form.quantity);\n\n            // 添加照片文件\n            if (fileListBefore.value.length > 0) {\n              if (fileListBefore.value[0] instanceof File) {\n                formData.append('photo_before', fileListBefore.value[0]);\n              } else {\n                formData.append('photo_path_before', form.photo_path_before);\n              }\n            }\n            if (fileListAfter.value.length > 0) {\n              if (fileListAfter.value[0] instanceof File) {\n                formData.append('photo_after', fileListAfter.value[0]);\n              } else {\n                formData.append('photo_path_after', form.photo_path_after);\n              }\n            }\n\n            // 根据是新增还是编辑选择不同的API\n            if (form.recordId) {\n              await httpService.putForm(`${apiConfig.endpoints.wasteRecords}/${form.recordId}`, formData, handleUploadProgress);\n              ElMessage.success('废物记录更新成功');\n            } else {\n              await httpService.postForm(apiConfig.endpoints.wasteRecords, formData, handleUploadProgress);\n              ElMessage.success('废物记录添加成功');\n            }\n\n            // 关闭上传进度对话框\n            showUploadProgress.value = false;\n\n            // 返回列表页\n            goBack();\n          } catch (error) {\n            console.error('提交表单失败:', error);\n            ElMessage.error('提交表单失败');\n            showUploadProgress.value = false;\n          }\n        } else {\n          console.log('表单验证失败');\n          ElMessage.error('请填写所有必填字段');\n          return false;\n        }\n      });\n    };\n\n    // 返回上一页\n    const goBack = () => {\n      if (isSuperAdmin.value) {\n        router.push('/admin-records');\n      } else {\n        router.push({\n          name: 'RecordsList',\n          params: {\n            unitId: auth.state.user.unit_id\n          }\n        });\n      }\n    };\n    return {\n      form,\n      rules,\n      recordForm,\n      loading,\n      submitting,\n      unitName,\n      wasteTypes,\n      units,\n      fileListBefore,\n      fileListAfter,\n      previewImages,\n      showViewer,\n      previewIndex,\n      isNew,\n      isSuperAdmin,\n      handlePhotoBeforeChange,\n      handlePhotoBeforeRemove,\n      handlePhotoAfterChange,\n      handlePhotoAfterRemove,\n      handlePictureCardPreview,\n      handleBeforeUpload,\n      closeViewer,\n      submitForm,\n      goBack,\n      showUploadProgress,\n      uploadPercentage,\n      uploadStatus,\n      percentageFormat,\n      showLargeFileWarning\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useRouter","useRoute","ElMessage","ElImageViewer","httpService","apiConfig","ArrowLeft","Plus","Clock","auth","name","components","setup","router","route","recordForm","loading","submitting","unitName","wasteTypes","units","fileListBefore","fileListAfter","previewImages","showViewer","previewIndex","createdAt","showUploadProgress","uploadPercentage","uploadStatus","showLargeFileWarning","isNew","params","id","isSuperAdmin","state","isLoggedIn","user","role_id","form","unitId","wasteTypeId","location","collectionDate","collectionTime","quantity","recordId","creatorId","photo_path_before","photo_path_after","remarks","rules","required","message","trigger","value","fetchWasteTypes","fetchUnits","unit_id","fetchUnitName","fetchRecordDetails","error","console","response","get","endpoints","data","unit","find","u","parseInt","wasteRecords","record","log","waste_type_id","collection_start_time","dateTime","Date","toISOString","slice","toTimeString","split","pop","url","startsWith","window","origin","unit_name","created_at","updatePreviewImages","handleBeforeUpload","file","acceptedTypes","isImage","includes","type","maxSize","size","largeFileThreshold","handlePhotoBeforeChange","fileList","checkForLargeFiles","map","f","join","handlePhotoBeforeRemove","handlePhotoAfterChange","handlePhotoAfterRemove","raw","URL","createObjectURL","File","filter","handlePictureCardPreview","index","findIndex","closeViewer","files","some","handleUploadProgress","progressEvent","total","percentage","Math","round","loaded","percentageFormat","submitForm","validate","valid","formData","FormData","append","length","putForm","success","postForm","goBack","push"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\EditRecord.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-record-container\">\r\n    <div class=\"header\">\r\n      <div class=\"back-button\" @click=\"goBack\">\r\n        <el-icon><arrow-left /></el-icon> 返回\r\n      </div>\r\n      <h1>{{ isNew ? '新增废物记录' : '编辑废物记录' }}</h1>\r\n      <div></div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"form-header\">\r\n        <h2>{{ unitName }}</h2>\r\n      </div>\r\n\r\n      <el-form \r\n        ref=\"recordForm\" \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        label-width=\"120px\"\r\n        class=\"record-form\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <!-- 如果是超级管理员且是新增记录，显示单位选择 -->\r\n        <el-form-item label=\"单位\" prop=\"unitId\" v-if=\"isSuperAdmin && isNew\">\r\n          <el-select v-model=\"form.unitId\" placeholder=\"请选择单位\" style=\"width: 100%\">\r\n            <el-option \r\n              v-for=\"unit in units\" \r\n              :key=\"unit.id\" \r\n              :label=\"unit.name\" \r\n              :value=\"unit.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"废物类型\" prop=\"wasteTypeId\">\r\n          <el-select v-model=\"form.wasteTypeId\" placeholder=\"请选择废物类型\" style=\"width: 100%\">\r\n            <el-option \r\n              v-for=\"type in wasteTypes\" \r\n              :key=\"type.id\" \r\n              :label=\"type.name\" \r\n              :value=\"type.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"产生地点\" prop=\"location\">\r\n          <el-input v-model=\"form.location\" placeholder=\"请输入废物产生地点\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集日期\">\r\n          <el-date-picker\r\n            v-model=\"form.collectionDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            format=\"YYYY-MM-DD\"\r\n            value-format=\"YYYY-MM-DD\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集时间\">\r\n          <el-time-picker\r\n            v-model=\"form.collectionTime\"\r\n            format=\"HH:mm\"\r\n            placeholder=\"选择时间\"\r\n            value-format=\"HH:mm\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <template #prefix>\r\n              <el-icon><clock /></el-icon>\r\n            </template>\r\n          </el-time-picker>\r\n          <!-- <div class=\"time-tip\">只需选择小时和分钟</div> -->\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集数量(吨)\" prop=\"quantity\">\r\n          <el-input-number \r\n            v-model=\"form.quantity\" \r\n            :min=\"0\" \r\n            :precision=\"3\" \r\n            :step=\"0.001\" \r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片（收集前）\" prop=\"photo_path_before\">\r\n          <div class=\"photo-tip\">请上传废物收集前的现场照片（最多5张）</div>\r\n          <div class=\"upload-warning\" v-if=\"showLargeFileWarning\">\r\n            <el-alert\r\n              title=\"上传大文件可能会导致处理时间较长，请耐心等待\"\r\n              type=\"warning\"\r\n              :closable=\"false\"\r\n              show-icon\r\n            />\r\n          </div>\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoBeforeChange\"\r\n            :on-remove=\"handlePhotoBeforeRemove\"\r\n            :file-list=\"fileListBefore\"\r\n            :limit=\"5\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :on-preview=\"handlePictureCardPreview\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n            accept=\"image/jpeg,image/jpg,image/png,image/gif,image/bmp,image/webp,.jpeg,.jpg,.png,.gif,.bmp,.webp\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片（收集后）\" prop=\"photo_path_after\">\r\n          <div class=\"photo-tip\">请上传废物收集后的现场照片（最多5张）</div>\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoAfterChange\"\r\n            :on-remove=\"handlePhotoAfterRemove\"\r\n            :file-list=\"fileListAfter\"\r\n            :limit=\"5\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :on-preview=\"handlePictureCardPreview\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n            accept=\"image/jpeg,image/jpg,image/png,image/gif,image/bmp,image/webp,.jpeg,.jpg,.png,.gif,.bmp,.webp\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n          \r\n          <!-- 添加独立的图片预览组件 -->\r\n          <el-image-viewer\r\n            v-if=\"showViewer\"\r\n            :url-list=\"previewImages\"\r\n            :initial-index=\"previewIndex\"\r\n            @close=\"closeViewer\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"loading\">保存</el-button>\r\n          <el-button @click=\"goBack\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 上传进度条对话框 -->\r\n    <el-dialog\r\n      v-model=\"showUploadProgress\"\r\n      title=\"正在上传文件\"\r\n      width=\"30%\"\r\n      :close-on-click-modal=\"false\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <div class=\"upload-progress\">\r\n        <p>正在上传文件，请勿关闭页面...</p>\r\n        <el-progress \r\n          :percentage=\"uploadPercentage\" \r\n          :format=\"percentageFormat\"\r\n          :status=\"uploadPercentage === 100 ? 'success' : ''\"\r\n        ></el-progress>\r\n        <p class=\"upload-status\">{{ uploadStatus }}</p>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { ElMessage, ElImageViewer } from 'element-plus';\r\nimport httpService from '../config/httpService';\r\nimport apiConfig from '../config/api';\r\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\r\nimport auth from '../store/auth';\r\n\r\nexport default {\r\n  name: 'EditRecordView',\r\n  components: {\r\n    ArrowLeft,\r\n    Plus,\r\n    Clock,\r\n    ElImageViewer\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const recordForm = ref(null);\r\n    const loading = ref(false);\r\n    const submitting = ref(false);\r\n    const unitName = ref('');\r\n    const wasteTypes = ref([]);\r\n    const units = ref([]);\r\n    const fileListBefore = ref([]);\r\n    const fileListAfter = ref([]);\r\n    const previewImages = ref([]);\r\n    const showViewer = ref(false);\r\n    const previewIndex = ref(0);\r\n    const createdAt = ref('');\r\n    const showUploadProgress = ref(false);\r\n    const uploadPercentage = ref(0);\r\n    const uploadStatus = ref('准备上传...');\r\n    const showLargeFileWarning = ref(false);\r\n    \r\n    // 是否为新增记录\r\n    const isNew = computed(() => {\r\n      return !route.params.id || route.params.id === 'new';\r\n    });\r\n    \r\n    // 是否为超级管理员\r\n    const isSuperAdmin = computed(() => {\r\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\r\n    });\r\n    \r\n    // 表单数据\r\n    const form = reactive({\r\n      unitId: '',\r\n      wasteTypeId: '',\r\n      location: '',\r\n      collectionDate: '',\r\n      collectionTime: '',\r\n      quantity: 0,\r\n      recordId: null,\r\n      creatorId: auth.state.user?.id || null,\r\n      photo_path_before: '',\r\n      photo_path_after: '',\r\n      remarks: ''\r\n    });\r\n\r\n    const rules = {\r\n      unitId: [\r\n        { required: true, message: '请选择单位', trigger: 'change' }\r\n      ],\r\n      wasteTypeId: [\r\n        { required: true, message: '请选择废物类型', trigger: 'change' }\r\n      ],\r\n      location: [\r\n        { required: true, message: '请输入废物产生地点', trigger: 'blur' }\r\n      ],\r\n      collectionDate: [\r\n        { required: false }\r\n      ],\r\n      collectionTime: [\r\n        { required: false }\r\n      ],\r\n      quantity: [\r\n        { required: true, message: '请输入收集数量', trigger: 'change' }\r\n      ]\r\n    };\r\n\r\n    onMounted(async () => {\r\n      loading.value = true;\r\n      \r\n      try {\r\n        // 获取废物类型\r\n        await fetchWasteTypes();\r\n        \r\n        // 如果是超级管理员，获取所有单位\r\n        if (isSuperAdmin.value) {\r\n          await fetchUnits();\r\n        }\r\n        \r\n        // 如果是新增记录\r\n        if (isNew.value) {\r\n          // 新增记录默认使用当前用户的单位（非超级管理员）\r\n          if (!isSuperAdmin.value && auth.state.user) {\r\n            form.unitId = auth.state.user.unit_id;\r\n            await fetchUnitName(form.unitId);\r\n          }\r\n        } else {\r\n          // 只有在编辑现有记录时才获取记录详情\r\n          await fetchRecordDetails();\r\n        }\r\n      } catch (error) {\r\n        console.error('初始化数据失败:', error);\r\n        ElMessage.error('加载数据失败，请刷新重试');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    });\r\n\r\n    // 获取单位列表\r\n    const fetchUnits = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        units.value = response.data;\r\n      } catch (error) {\r\n        console.error('获取单位列表失败:', error);\r\n        ElMessage.error('获取单位列表失败');\r\n      }\r\n    };\r\n\r\n    // 获取单位名称\r\n    const fetchUnitName = async (unitId) => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        const unit = response.data.find(u => u.id === parseInt(unitId));\r\n        if (unit) {\r\n          unitName.value = unit.name;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取单位信息失败:', error);\r\n      }\r\n    };\r\n\r\n    // 获取废物类型\r\n    const fetchWasteTypes = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\r\n        wasteTypes.value = response.data;\r\n      } catch (error) {\r\n        console.error('获取废物类型失败:', error);\r\n        ElMessage.error('获取废物类型失败');\r\n      }\r\n    };\r\n\r\n    // 获取记录详情\r\n    const fetchRecordDetails = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/detail/${route.params.id}`);\r\n        \r\n        const record = response.data;\r\n        console.log('获取到的记录详情:', record);\r\n        \r\n        form.unitId = record.unit_id;\r\n        form.wasteTypeId = record.waste_type_id;\r\n        form.location = record.location;\r\n        form.recordId = record.id;\r\n        \r\n        // 处理收集时间\r\n        if (record.collection_start_time) {\r\n          const dateTime = new Date(record.collection_start_time);\r\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\r\n          form.collectionTime = dateTime.toTimeString().slice(0, 5);\r\n        }\r\n        \r\n        form.quantity = record.quantity;\r\n        \r\n        // 处理照片\r\n        if (record.photo_path_before) {\r\n          fileListBefore.value = [{\r\n            name: record.photo_path_before.split('/').pop(),\r\n            url: record.photo_path_before.startsWith('http') ? record.photo_path_before : `${window.location.origin}/${record.photo_path_before}`\r\n          }];\r\n        }\r\n        \r\n        if (record.photo_path_after) {\r\n          fileListAfter.value = [{\r\n            name: record.photo_path_after.split('/').pop(),\r\n            url: record.photo_path_after.startsWith('http') ? record.photo_path_after : `${window.location.origin}/${record.photo_path_after}`\r\n          }];\r\n        }\r\n        \r\n        // 获取单位名称\r\n        unitName.value = record.unit_name;\r\n        \r\n        // 设置创建时间\r\n        createdAt.value = record.created_at;\r\n        \r\n        // 初始化预览图片列表\r\n        updatePreviewImages([...fileListBefore.value, ...fileListAfter.value]);\r\n        \r\n      } catch (error) {\r\n        console.error('获取记录详情失败:', error);\r\n        ElMessage.error('获取记录详情失败');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 处理上传前的文件处理\r\n    const handleBeforeUpload = async (file) => {\r\n      // 检查文件类型是否为图片\r\n      const acceptedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/bmp', 'image/webp'];\r\n      const isImage = acceptedTypes.includes(file.type);\r\n      \r\n      if (!isImage) {\r\n        ElMessage.error('只能上传图片文件!');\r\n        return false;\r\n      }\r\n\r\n      // 检查文件大小（50MB = 50 * 1024 * 1024 bytes）\r\n      const maxSize = 50 * 1024 * 1024;\r\n      if (file.size > maxSize) {\r\n        ElMessage.error('图片大小不能超过50MB!');\r\n        return false;\r\n      }\r\n      \r\n      // 检查是否有大文件需要显示警告\r\n      const largeFileThreshold = 5 * 1024 * 1024; // 5MB\r\n      if (file.size > largeFileThreshold) {\r\n        showLargeFileWarning.value = true;\r\n      }\r\n      \r\n      // 直接返回true，允许文件被添加到上传列表\r\n      return true;\r\n    };\r\n\r\n    // 处理收集前的照片变更\r\n    const handlePhotoBeforeChange = (file, fileList) => {\r\n      // 检查是否有大文件\r\n      checkForLargeFiles(fileList);\r\n      \r\n      // 更新文件列表\r\n      fileListBefore.value = fileList;\r\n      \r\n      // 更新表单数据\r\n      form.photo_path_before = fileList.map(f => f.url).join(',');\r\n      \r\n      return false; // 阻止自动上传\r\n    };\r\n\r\n    // 处理收集前的照片移除\r\n    const handlePhotoBeforeRemove = (file, fileList) => {\r\n      console.log('收集前照片移除:', file, fileList);\r\n      \r\n      // 更新fileListBefore\r\n      fileListBefore.value = fileList;\r\n      \r\n      // 更新表单数据\r\n      form.photo_path_before = fileList.map(f => f.url).join(',');\r\n      \r\n      // 如果没有大文件了，隐藏警告\r\n      if (!checkForLargeFiles([...fileListBefore.value, ...fileListAfter.value])) {\r\n        showLargeFileWarning.value = false;\r\n      }\r\n      \r\n      // 更新预览图片\r\n      updatePreviewImages([...fileListBefore.value, ...fileListAfter.value]);\r\n    };\r\n\r\n    // 处理收集后的照片变更\r\n    const handlePhotoAfterChange = (file, fileList) => {\r\n      // 检查是否有大文件\r\n      checkForLargeFiles(fileList);\r\n      \r\n      // 更新文件列表\r\n      fileListAfter.value = fileList;\r\n      \r\n      // 更新表单数据\r\n      form.photo_path_after = fileList.map(f => f.url).join(',');\r\n      \r\n      return false; // 阻止自动上传\r\n    };\r\n\r\n    // 处理收集后的照片移除\r\n    const handlePhotoAfterRemove = (file, fileList) => {\r\n      console.log('收集后照片移除:', file, fileList);\r\n      \r\n      // 更新fileListAfter\r\n      fileListAfter.value = fileList;\r\n      \r\n      // 更新表单数据\r\n      form.photo_path_after = fileList.map(f => f.url).join(',');\r\n      \r\n      // 如果没有大文件了，隐藏警告\r\n      if (!checkForLargeFiles([...fileListBefore.value, ...fileListAfter.value])) {\r\n        showLargeFileWarning.value = false;\r\n      }\r\n      \r\n      // 更新预览图片\r\n      updatePreviewImages([...fileListBefore.value, ...fileListAfter.value]);\r\n    };\r\n\r\n    // 更新预览图片\r\n    const updatePreviewImages = (fileList) => {\r\n      previewImages.value = fileList.map(file => {\r\n        if (file.url) {\r\n          return file.url;\r\n        } else if (file.raw) {\r\n          return URL.createObjectURL(file.raw);\r\n        } else if (file instanceof File) {\r\n          return URL.createObjectURL(file);\r\n        }\r\n        return '';\r\n      }).filter(url => url);\r\n      \r\n      console.log('预览图片列表:', previewImages.value);\r\n    };\r\n\r\n    // 处理图片预览\r\n    const handlePictureCardPreview = (file) => {\r\n      console.log('预览图片:', file);\r\n      \r\n      // 更新预览图片列表\r\n      updatePreviewImages([...fileListBefore.value, ...fileListAfter.value]);\r\n      \r\n      // 找到当前图片在预览列表中的索引\r\n      const index = previewImages.value.findIndex(url => {\r\n        return url === file.url || (file.raw && url === URL.createObjectURL(file.raw));\r\n      });\r\n      \r\n      if (index !== -1) {\r\n        previewIndex.value = index;\r\n      } else {\r\n        previewIndex.value = 0;\r\n      }\r\n      \r\n      // 显示图片预览器\r\n      showViewer.value = true;\r\n    };\r\n    \r\n    // 关闭图片预览\r\n    const closeViewer = () => {\r\n      showViewer.value = false;\r\n    };\r\n\r\n    // 检查是否有大文件\r\n    const checkForLargeFiles = (files) => {\r\n      const largeFileThreshold = 5 * 1024 * 1024; // 5MB\r\n      return files.some(file => file.size > largeFileThreshold);\r\n    };\r\n\r\n    // 处理上传进度\r\n    const handleUploadProgress = (progressEvent) => {\r\n      if (progressEvent.total) {\r\n        const percentage = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n        uploadPercentage.value = percentage;\r\n        \r\n        if (percentage < 33) {\r\n          uploadStatus.value = '正在上传文件...';\r\n        } else if (percentage < 66) {\r\n          uploadStatus.value = '正在处理文件...';\r\n        } else if (percentage < 100) {\r\n          uploadStatus.value = '即将完成...';\r\n        } else {\r\n          uploadStatus.value = '上传完成，正在保存...';\r\n        }\r\n      }\r\n    };\r\n\r\n    // 格式化百分比显示\r\n    const percentageFormat = (percentage) => {\r\n      return percentage === 100 ? '完成' : `${percentage}%`;\r\n    };\r\n\r\n    // 提交表单\r\n    const submitForm = async () => {\r\n      if (!recordForm.value) return;\r\n      \r\n      await recordForm.value.validate(async (valid) => {\r\n        if (valid) {\r\n          // 显示上传进度对话框\r\n          uploadPercentage.value = 0;\r\n          uploadStatus.value = '正在上传文件...';\r\n          showUploadProgress.value = true;\r\n          \r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('unitId', form.unitId);\r\n            formData.append('wasteTypeId', form.wasteTypeId);\r\n            formData.append('location', form.location);\r\n            formData.append('collectionDate', form.collectionDate);\r\n            formData.append('collectionTime', form.collectionTime);\r\n            formData.append('quantity', form.quantity);\r\n            \r\n            // 添加照片文件\r\n            if (fileListBefore.value.length > 0) {\r\n              if (fileListBefore.value[0] instanceof File) {\r\n                formData.append('photo_before', fileListBefore.value[0]);\r\n              } else {\r\n                formData.append('photo_path_before', form.photo_path_before);\r\n              }\r\n            }\r\n            \r\n            if (fileListAfter.value.length > 0) {\r\n              if (fileListAfter.value[0] instanceof File) {\r\n                formData.append('photo_after', fileListAfter.value[0]);\r\n              } else {\r\n                formData.append('photo_path_after', form.photo_path_after);\r\n              }\r\n            }\r\n            \r\n            // 根据是新增还是编辑选择不同的API\r\n            if (form.recordId) {\r\n              await httpService.putForm(\r\n                `${apiConfig.endpoints.wasteRecords}/${form.recordId}`, \r\n                formData,\r\n                handleUploadProgress\r\n              );\r\n              ElMessage.success('废物记录更新成功');\r\n            } else {\r\n              await httpService.postForm(\r\n                apiConfig.endpoints.wasteRecords, \r\n                formData,\r\n                handleUploadProgress\r\n              );\r\n              ElMessage.success('废物记录添加成功');\r\n            }\r\n            \r\n            // 关闭上传进度对话框\r\n            showUploadProgress.value = false;\r\n            \r\n            // 返回列表页\r\n            goBack();\r\n          } catch (error) {\r\n            console.error('提交表单失败:', error);\r\n            ElMessage.error('提交表单失败');\r\n            showUploadProgress.value = false;\r\n          }\r\n        } else {\r\n          console.log('表单验证失败');\r\n          ElMessage.error('请填写所有必填字段');\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n\r\n    // 返回上一页\r\n    const goBack = () => {\r\n      if (isSuperAdmin.value) {\r\n        router.push('/admin-records');\r\n      } else {\r\n        router.push({ \r\n          name: 'RecordsList', \r\n          params: { unitId: auth.state.user.unit_id } \r\n        });\r\n      }\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      recordForm,\r\n      loading,\r\n      submitting,\r\n      unitName,\r\n      wasteTypes,\r\n      units,\r\n      fileListBefore,\r\n      fileListAfter,\r\n      previewImages,\r\n      showViewer,\r\n      previewIndex,\r\n      isNew,\r\n      isSuperAdmin,\r\n      handlePhotoBeforeChange,\r\n      handlePhotoBeforeRemove,\r\n      handlePhotoAfterChange,\r\n      handlePhotoAfterRemove,\r\n      handlePictureCardPreview,\r\n      handleBeforeUpload,\r\n      closeViewer,\r\n      submitForm,\r\n      goBack,\r\n      showUploadProgress,\r\n      uploadPercentage,\r\n      uploadStatus,\r\n      percentageFormat,\r\n      showLargeFileWarning\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.edit-record-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.back-button {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 30px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.form-header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-header h2 {\r\n  color: #333;\r\n  border-bottom: 2px solid #409EFF;\r\n  display: inline-block;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.record-form {\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.waste-photo-uploader {\r\n  width: 100%;\r\n}\r\n\r\n.photo-tip, .time-tip {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f5f5;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.upload-warning {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.upload-progress {\r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.upload-status {\r\n  margin-top: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 修复Element Plus图片预览组件的z-index问题 */\r\n.el-image-viewer__wrapper {\r\n  z-index: 2147483647 !important; /* 使用最大可能的z-index值 */\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的遮罩层也在最上层 */\r\n.el-image-viewer__mask {\r\n  z-index: 2147483646 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的操作按钮在最上层 */\r\n.el-image-viewer__btn {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的关闭按钮在最上层 */\r\n.el-image-viewer__close {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的图片在最上层 */\r\n.el-image-viewer__img {\r\n  z-index: 2147483646 !important;\r\n  position: relative !important;\r\n}\r\n\r\n/* 确保图片预览的操作栏在最上层 */\r\n.el-image-viewer__actions {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的缩放按钮在最上层 */\r\n.el-image-viewer__actions__inner {\r\n  z-index: 2147483647 !important;\r\n  position: relative !important;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}