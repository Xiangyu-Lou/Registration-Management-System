{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Plus } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nexport default {\n  name: 'UserManagement',\n  components: {\n    ArrowLeft,\n    Plus\n  },\n  setup() {\n    const router = useRouter();\n    const loading = ref(false);\n    const formLoading = ref(false);\n    const dialogVisible = ref(false);\n    const isEdit = ref(false);\n    const userForm = ref(null);\n    const users = ref([]);\n    const units = ref([]);\n\n    // 判断当前用户是否为超级管理员\n    const isSuperAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    // 当前登录用户的单位ID\n    const currentUnitId = computed(() => {\n      return auth.state.isLoggedIn ? auth.state.user.unit_id : null;\n    });\n\n    // 表单数据\n    const form = reactive({\n      id: null,\n      username: '',\n      phone: '',\n      roleId: 1,\n      unitId: null,\n      password: ''\n    });\n\n    // 表单验证规则\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入姓名',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 20,\n        message: '长度在 2 到 20 个字符',\n        trigger: 'blur'\n      }],\n      phone: [{\n        required: true,\n        message: '请输入手机号',\n        trigger: 'blur'\n      }, {\n        pattern: /^1[3-9]\\d{9}$/,\n        message: '请输入有效的手机号码',\n        trigger: 'blur'\n      }],\n      roleId: [{\n        required: true,\n        message: '请选择角色',\n        trigger: 'change'\n      }],\n      unitId: [{\n        required: true,\n        message: '请选择单位',\n        trigger: 'change'\n      }],\n      password: [{\n        required: function () {\n          // 新增账号时密码必填\n          return !isEdit.value;\n        },\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 1,\n        max: 20,\n        message: '长度在 1 到 20 个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 获取用户列表\n    const fetchUsers = async () => {\n      loading.value = true;\n      try {\n        let response;\n        if (isSuperAdmin.value) {\n          // 超级管理员获取所有用户\n          response = await httpService.get(apiConfig.endpoints.users);\n        } else {\n          // 单位管理员只获取本单位员工\n          response = await httpService.get(`${apiConfig.endpoints.units}/${currentUnitId.value}/users`);\n        }\n        users.value = response.data;\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        ElMessage.error('获取用户列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        units.value = response.data;\n      } catch (error) {\n        console.error('Error fetching units:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n\n    // 打开添加对话框\n    const openAddDialog = () => {\n      isEdit.value = false;\n      resetForm();\n      dialogVisible.value = true;\n\n      // 如果是单位管理员，默认选择当前单位\n      if (!isSuperAdmin.value) {\n        form.unitId = currentUnitId.value;\n      }\n    };\n\n    // 处理编辑\n    const handleEdit = row => {\n      isEdit.value = true;\n      form.id = row.id;\n      form.username = row.username;\n      form.phone = row.phone;\n      form.roleId = row.role_id;\n      form.unitId = row.unit_id;\n      form.password = ''; // 编辑时密码字段为空\n      dialogVisible.value = true;\n    };\n\n    // 处理删除\n    const handleDelete = async row => {\n      try {\n        await httpService.delete(`${apiConfig.endpoints.users}/${row.id}`);\n        ElMessage.success('用户删除成功');\n        fetchUsers();\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        let errorMsg = '删除用户失败';\n        if (error.response && error.response.data && error.response.data.error) {\n          errorMsg = error.response.data.error;\n        }\n        ElMessage.error(errorMsg);\n      }\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      if (userForm.value) {\n        userForm.value.resetFields();\n      }\n      form.id = null;\n      form.username = '';\n      form.phone = '';\n      form.roleId = 1;\n      form.unitId = null;\n      form.password = '';\n    };\n\n    // 提交表单\n    const submitForm = () => {\n      userForm.value.validate(async valid => {\n        if (valid) {\n          formLoading.value = true;\n          try {\n            const userData = {\n              username: form.username,\n              phone: form.phone,\n              roleId: form.roleId,\n              unitId: form.roleId !== 3 ? form.unitId : null\n            };\n\n            // 仅当有输入密码时，才添加密码字段\n            if (form.password) {\n              userData.password = form.password;\n            }\n            if (isEdit.value) {\n              // 更新用户\n              await httpService.put(`${apiConfig.endpoints.users}/${form.id}`, userData);\n              ElMessage.success('用户更新成功');\n            } else {\n              // 添加用户\n              await httpService.post(apiConfig.endpoints.users, userData);\n              ElMessage.success('用户添加成功');\n            }\n            dialogVisible.value = false;\n            fetchUsers();\n          } catch (error) {\n            console.error('Error submitting user form:', error);\n            let errorMsg = isEdit.value ? '更新用户失败' : '添加用户失败';\n            if (error.response && error.response.data && error.response.data.error) {\n              errorMsg = error.response.data.error;\n            }\n            ElMessage.error(errorMsg);\n          } finally {\n            formLoading.value = false;\n          }\n        } else {\n          ElMessage.warning('请完成必填项');\n        }\n      });\n    };\n\n    // 返回上一页\n    const goBack = () => {\n      router.back();\n    };\n    onMounted(() => {\n      fetchUsers();\n      fetchUnits();\n    });\n    return {\n      loading,\n      formLoading,\n      dialogVisible,\n      isEdit,\n      userForm,\n      users,\n      units,\n      form,\n      rules,\n      isSuperAdmin,\n      currentUnitId,\n      openAddDialog,\n      handleEdit,\n      handleDelete,\n      submitForm,\n      goBack\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useRouter","ElMessage","httpService","apiConfig","ArrowLeft","Plus","auth","name","components","setup","router","loading","formLoading","dialogVisible","isEdit","userForm","users","units","isSuperAdmin","state","isLoggedIn","user","role_id","currentUnitId","unit_id","form","id","username","phone","roleId","unitId","password","rules","required","message","trigger","min","max","pattern","value","fetchUsers","response","get","endpoints","data","error","console","fetchUnits","openAddDialog","resetForm","handleEdit","row","handleDelete","delete","success","errorMsg","resetFields","submitForm","validate","valid","userData","put","post","warning","goBack","back"],"sources":["F:\\Project\\Hazardous-waste-management-system\\frontend\\src\\views\\UserManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-management-container\">\r\n    <div class=\"header\">\r\n      <div class=\"back-button\" @click=\"goBack\">\r\n        <el-icon><arrow-left /></el-icon> 返回\r\n      </div>\r\n      <h1>人员管理</h1>\r\n      <div></div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"toolbar\">\r\n        <el-button type=\"primary\" @click=\"openAddDialog\">\r\n          <el-icon><plus /></el-icon> 添加用户\r\n        </el-button>\r\n      </div>\r\n\r\n      <el-table\r\n        v-loading=\"loading\"\r\n        :data=\"users\"\r\n        border\r\n        stripe\r\n        style=\"width: 100%; margin-top: 20px;\"\r\n      >\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\" />\r\n        <el-table-column prop=\"username\" label=\"姓名\" width=\"120\" />\r\n        <el-table-column prop=\"phone\" label=\"手机号\" width=\"140\" />\r\n        <el-table-column prop=\"role_name\" label=\"角色\" width=\"120\" />\r\n        <el-table-column prop=\"unit_name\" label=\"单位\" min-width=\"120\" />\r\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-popconfirm\r\n              title=\"确定要删除此用户吗？\"\r\n              @confirm=\"handleDelete(scope.row)\"\r\n            >\r\n              <template #reference>\r\n                <el-button size=\"small\" type=\"danger\">删除</el-button>\r\n              </template>\r\n            </el-popconfirm>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 添加/编辑用户对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :title=\"isEdit ? '编辑用户' : '添加用户'\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form\r\n        ref=\"userForm\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"100px\"\r\n        style=\"max-width: 400px; margin: 0 auto;\"\r\n      >\r\n        <el-form-item label=\"姓名\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" placeholder=\"请输入姓名\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" placeholder=\"请输入手机号\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"角色\" prop=\"roleId\">\r\n          <el-select v-model=\"form.roleId\" placeholder=\"请选择角色\" style=\"width: 100%\">\r\n            <!-- 如果是超级管理员，可以添加所有类型用户 -->\r\n            <el-option v-if=\"isSuperAdmin\" :value=\"3\" label=\"超级管理员\" />\r\n            <el-option :value=\"2\" label=\"单位管理员\" />\r\n            <el-option :value=\"1\" label=\"基层员工\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"单位\" prop=\"unitId\" v-if=\"form.roleId !== 3\">\r\n          <el-select \r\n            v-model=\"form.unitId\" \r\n            placeholder=\"请选择单位\" \r\n            style=\"width: 100%\"\r\n            :disabled=\"!isSuperAdmin && isEdit\"\r\n          >\r\n            <el-option \r\n              v-for=\"unit in units\" \r\n              :key=\"unit.id\" \r\n              :label=\"unit.name\" \r\n              :value=\"unit.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input \r\n            v-model=\"form.password\" \r\n            placeholder=\"请输入密码\" \r\n            type=\"password\"\r\n            show-password\r\n          />\r\n          <div class=\"password-hint\" v-if=\"!isEdit\">新建账号必须设置密码</div>\r\n          <div class=\"password-hint\" v-else>不修改密码请留空</div>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"formLoading\">\r\n            确认\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage } from 'element-plus';\r\nimport httpService from '../config/httpService';\r\nimport apiConfig from '../config/api';\r\nimport { ArrowLeft, Plus } from '@element-plus/icons-vue';\r\nimport auth from '../store/auth';\r\n\r\nexport default {\r\n  name: 'UserManagement',\r\n  components: {\r\n    ArrowLeft,\r\n    Plus\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const loading = ref(false);\r\n    const formLoading = ref(false);\r\n    const dialogVisible = ref(false);\r\n    const isEdit = ref(false);\r\n    const userForm = ref(null);\r\n    const users = ref([]);\r\n    const units = ref([]);\r\n    \r\n    // 判断当前用户是否为超级管理员\r\n    const isSuperAdmin = computed(() => {\r\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\r\n    });\r\n    \r\n    // 当前登录用户的单位ID\r\n    const currentUnitId = computed(() => {\r\n      return auth.state.isLoggedIn ? auth.state.user.unit_id : null;\r\n    });\r\n    \r\n    // 表单数据\r\n    const form = reactive({\r\n      id: null,\r\n      username: '',\r\n      phone: '',\r\n      roleId: 1,\r\n      unitId: null,\r\n      password: ''\r\n    });\r\n    \r\n    // 表单验证规则\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: '请输入姓名', trigger: 'blur' },\r\n        { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      phone: [\r\n        { required: true, message: '请输入手机号', trigger: 'blur' },\r\n        { pattern: /^1[3-9]\\d{9}$/, message: '请输入有效的手机号码', trigger: 'blur' }\r\n      ],\r\n      roleId: [\r\n        { required: true, message: '请选择角色', trigger: 'change' }\r\n      ],\r\n      unitId: [\r\n        { required: true, message: '请选择单位', trigger: 'change' }\r\n      ],\r\n      password: [\r\n        { \r\n          required: function() {\r\n            // 新增账号时密码必填\r\n            return !isEdit.value;\r\n          }, \r\n          message: '请输入密码', \r\n          trigger: 'blur' \r\n        },\r\n        { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\r\n      ]\r\n    };\r\n    \r\n    // 获取用户列表\r\n    const fetchUsers = async () => {\r\n      loading.value = true;\r\n      try {\r\n        let response;\r\n        if (isSuperAdmin.value) {\r\n          // 超级管理员获取所有用户\r\n          response = await httpService.get(apiConfig.endpoints.users);\r\n        } else {\r\n          // 单位管理员只获取本单位员工\r\n          response = await httpService.get(`${apiConfig.endpoints.units}/${currentUnitId.value}/users`);\r\n        }\r\n        users.value = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n        ElMessage.error('获取用户列表失败');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // 获取单位列表\r\n    const fetchUnits = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        units.value = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching units:', error);\r\n        ElMessage.error('获取单位列表失败');\r\n      }\r\n    };\r\n    \r\n    // 打开添加对话框\r\n    const openAddDialog = () => {\r\n      isEdit.value = false;\r\n      resetForm();\r\n      dialogVisible.value = true;\r\n      \r\n      // 如果是单位管理员，默认选择当前单位\r\n      if (!isSuperAdmin.value) {\r\n        form.unitId = currentUnitId.value;\r\n      }\r\n    };\r\n    \r\n    // 处理编辑\r\n    const handleEdit = (row) => {\r\n      isEdit.value = true;\r\n      form.id = row.id;\r\n      form.username = row.username;\r\n      form.phone = row.phone;\r\n      form.roleId = row.role_id;\r\n      form.unitId = row.unit_id;\r\n      form.password = ''; // 编辑时密码字段为空\r\n      dialogVisible.value = true;\r\n    };\r\n    \r\n    // 处理删除\r\n    const handleDelete = async (row) => {\r\n      try {\r\n        await httpService.delete(`${apiConfig.endpoints.users}/${row.id}`);\r\n        ElMessage.success('用户删除成功');\r\n        fetchUsers();\r\n      } catch (error) {\r\n        console.error('Error deleting user:', error);\r\n        let errorMsg = '删除用户失败';\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          errorMsg = error.response.data.error;\r\n        }\r\n        ElMessage.error(errorMsg);\r\n      }\r\n    };\r\n    \r\n    // 重置表单\r\n    const resetForm = () => {\r\n      if (userForm.value) {\r\n        userForm.value.resetFields();\r\n      }\r\n      form.id = null;\r\n      form.username = '';\r\n      form.phone = '';\r\n      form.roleId = 1;\r\n      form.unitId = null;\r\n      form.password = '';\r\n    };\r\n    \r\n    // 提交表单\r\n    const submitForm = () => {\r\n      userForm.value.validate(async (valid) => {\r\n        if (valid) {\r\n          formLoading.value = true;\r\n          try {\r\n            const userData = {\r\n              username: form.username,\r\n              phone: form.phone,\r\n              roleId: form.roleId,\r\n              unitId: form.roleId !== 3 ? form.unitId : null\r\n            };\r\n            \r\n            // 仅当有输入密码时，才添加密码字段\r\n            if (form.password) {\r\n              userData.password = form.password;\r\n            }\r\n            \r\n            if (isEdit.value) {\r\n              // 更新用户\r\n              await httpService.put(`${apiConfig.endpoints.users}/${form.id}`, userData);\r\n              ElMessage.success('用户更新成功');\r\n            } else {\r\n              // 添加用户\r\n              await httpService.post(apiConfig.endpoints.users, userData);\r\n              ElMessage.success('用户添加成功');\r\n            }\r\n            \r\n            dialogVisible.value = false;\r\n            fetchUsers();\r\n          } catch (error) {\r\n            console.error('Error submitting user form:', error);\r\n            let errorMsg = isEdit.value ? '更新用户失败' : '添加用户失败';\r\n            if (error.response && error.response.data && error.response.data.error) {\r\n              errorMsg = error.response.data.error;\r\n            }\r\n            ElMessage.error(errorMsg);\r\n          } finally {\r\n            formLoading.value = false;\r\n          }\r\n        } else {\r\n          ElMessage.warning('请完成必填项');\r\n        }\r\n      });\r\n    };\r\n    \r\n    // 返回上一页\r\n    const goBack = () => {\r\n      router.back();\r\n    };\r\n    \r\n    onMounted(() => {\r\n      fetchUsers();\r\n      fetchUnits();\r\n    });\r\n    \r\n    return {\r\n      loading,\r\n      formLoading,\r\n      dialogVisible,\r\n      isEdit,\r\n      userForm,\r\n      users,\r\n      units,\r\n      form,\r\n      rules,\r\n      isSuperAdmin,\r\n      currentUnitId,\r\n      openAddDialog,\r\n      handleEdit,\r\n      handleDelete,\r\n      submitForm,\r\n      goBack\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-management-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.back-button {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 30px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.toolbar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.password-hint {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f5f5;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}