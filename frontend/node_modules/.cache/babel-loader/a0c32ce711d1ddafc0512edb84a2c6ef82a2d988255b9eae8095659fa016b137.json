{"ast":null,"code":"/**\r\n * 图片处理工具函数\r\n */\n\n/**\r\n * 简单的图片处理函数（不进行转换或压缩）\r\n * @param {File} file - 原始图片文件\r\n * @param {number} quality - 未使用，保留参数以兼容旧代码\r\n * @param {Function} onProgress - 进度回调函数\r\n * @returns {Promise<File>} - 原始图片文件\r\n */\nexport const convertAndCompressImage = (file, quality = 0.8, onProgress) => {\n  return new Promise(resolve => {\n    // 报告进度：开始\n    if (onProgress) onProgress(0);\n\n    // 立即报告100%进度\n    setTimeout(() => {\n      if (onProgress) onProgress(100);\n      // 直接返回原始文件\n      resolve(file);\n    }, 10);\n  });\n};\n\n/**\r\n * 批量处理图片文件（不进行实际处理）\r\n * @param {File[]} files - 图片文件数组\r\n * @param {number} quality - 未使用，保留参数以兼容旧代码\r\n * @param {Function} onProgress - 进度回调函数\r\n * @returns {Promise<File[]>} - 原始图片文件数组\r\n */\nexport const batchProcessImages = async (files, quality = 0.8, onProgress) => {\n  if (!files || files.length === 0) {\n    return [];\n  }\n\n  // 立即报告100%进度\n  if (onProgress) onProgress(100);\n\n  // 直接返回原始文件数组\n  return files;\n};","map":{"version":3,"names":["convertAndCompressImage","file","quality","onProgress","Promise","resolve","setTimeout","batchProcessImages","files","length"],"sources":["C:/Users/10150/Desktop/Hazardous-waste-management-system/frontend/src/utils/imageUtils.js"],"sourcesContent":["/**\r\n * 图片处理工具函数\r\n */\r\n\r\n/**\r\n * 简单的图片处理函数（不进行转换或压缩）\r\n * @param {File} file - 原始图片文件\r\n * @param {number} quality - 未使用，保留参数以兼容旧代码\r\n * @param {Function} onProgress - 进度回调函数\r\n * @returns {Promise<File>} - 原始图片文件\r\n */\r\nexport const convertAndCompressImage = (file, quality = 0.8, onProgress) => {\r\n  return new Promise((resolve) => {\r\n    // 报告进度：开始\r\n    if (onProgress) onProgress(0);\r\n    \r\n    // 立即报告100%进度\r\n    setTimeout(() => {\r\n      if (onProgress) onProgress(100);\r\n      // 直接返回原始文件\r\n      resolve(file);\r\n    }, 10);\r\n  });\r\n};\r\n\r\n/**\r\n * 批量处理图片文件（不进行实际处理）\r\n * @param {File[]} files - 图片文件数组\r\n * @param {number} quality - 未使用，保留参数以兼容旧代码\r\n * @param {Function} onProgress - 进度回调函数\r\n * @returns {Promise<File[]>} - 原始图片文件数组\r\n */\r\nexport const batchProcessImages = async (files, quality = 0.8, onProgress) => {\r\n  if (!files || files.length === 0) {\r\n    return [];\r\n  }\r\n  \r\n  // 立即报告100%进度\r\n  if (onProgress) onProgress(100);\r\n  \r\n  // 直接返回原始文件数组\r\n  return files;\r\n}; "],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,uBAAuB,GAAGA,CAACC,IAAI,EAAEC,OAAO,GAAG,GAAG,EAAEC,UAAU,KAAK;EAC1E,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9B;IACA,IAAIF,UAAU,EAAEA,UAAU,CAAC,CAAC,CAAC;;IAE7B;IACAG,UAAU,CAAC,MAAM;MACf,IAAIH,UAAU,EAAEA,UAAU,CAAC,GAAG,CAAC;MAC/B;MACAE,OAAO,CAACJ,IAAI,CAAC;IACf,CAAC,EAAE,EAAE,CAAC;EACR,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMM,kBAAkB,GAAG,MAAAA,CAAOC,KAAK,EAAEN,OAAO,GAAG,GAAG,EAAEC,UAAU,KAAK;EAC5E,IAAI,CAACK,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAChC,OAAO,EAAE;EACX;;EAEA;EACA,IAAIN,UAAU,EAAEA,UAAU,CAAC,GAAG,CAAC;;EAE/B;EACA,OAAOK,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}