{"ast":null,"code":"import axios from 'axios';\nimport apiConfig from './api';\n\n// 创建 axios 实例\nconst httpClient = axios.create({\n  baseURL: apiConfig.baseURL,\n  timeout: 10000,\n  // 10秒超时\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\nhttpClient.interceptors.request.use(config => {\n  // 这里可以添加认证 token 等逻辑\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nhttpClient.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // 统一错误处理\n  console.error('API请求错误:', error);\n  return Promise.reject(error);\n});\n\n// HTTP服务\nconst httpService = {\n  // GET请求\n  get(endpoint, params = {}) {\n    return httpClient.get(endpoint, {\n      params\n    });\n  },\n  // POST请求\n  post(endpoint, data = {}) {\n    return httpClient.post(endpoint, data);\n  },\n  // 带文件上传的POST请求\n  postForm(endpoint, formData) {\n    return httpClient.post(endpoint, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // PUT请求\n  put(endpoint, data = {}) {\n    return httpClient.put(endpoint, data);\n  },\n  // 带文件上传的PUT请求\n  putForm(endpoint, formData) {\n    return httpClient.put(endpoint, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // DELETE请求\n  delete(endpoint) {\n    return httpClient.delete(endpoint);\n  }\n};\nexport default httpService;","map":{"version":3,"names":["axios","apiConfig","httpClient","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","console","httpService","get","endpoint","params","post","data","postForm","formData","put","putForm","delete"],"sources":["C:/Users/10150/Desktop/Hazardous-waste-management-system/frontend/src/config/httpService.js"],"sourcesContent":["import axios from 'axios';\r\nimport apiConfig from './api';\r\n\r\n// 创建 axios 实例\r\nconst httpClient = axios.create({\r\n  baseURL: apiConfig.baseURL,\r\n  timeout: 10000, // 10秒超时\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// 请求拦截器\r\nhttpClient.interceptors.request.use(\r\n  config => {\r\n    // 这里可以添加认证 token 等逻辑\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 响应拦截器\r\nhttpClient.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    // 统一错误处理\r\n    console.error('API请求错误:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// HTTP服务\r\nconst httpService = {\r\n  // GET请求\r\n  get(endpoint, params = {}) {\r\n    return httpClient.get(endpoint, { params });\r\n  },\r\n  \r\n  // POST请求\r\n  post(endpoint, data = {}) {\r\n    return httpClient.post(endpoint, data);\r\n  },\r\n  \r\n  // 带文件上传的POST请求\r\n  postForm(endpoint, formData) {\r\n    return httpClient.post(endpoint, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n  },\r\n  \r\n  // PUT请求\r\n  put(endpoint, data = {}) {\r\n    return httpClient.put(endpoint, data);\r\n  },\r\n  \r\n  // 带文件上传的PUT请求\r\n  putForm(endpoint, formData) {\r\n    return httpClient.put(endpoint, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n  },\r\n  \r\n  // DELETE请求\r\n  delete(endpoint) {\r\n    return httpClient.delete(endpoint);\r\n  }\r\n};\r\n\r\nexport default httpService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,OAAO;;AAE7B;AACA,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC9BC,OAAO,EAAEH,SAAS,CAACG,OAAO;EAC1BC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,UAAU,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAI;EACR;EACA,OAAOA,MAAM;AACf,CAAC,EACDC,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAT,UAAU,CAACK,YAAY,CAACO,QAAQ,CAACL,GAAG,CAClCK,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP;EACAI,OAAO,CAACJ,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;EAChC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,MAAMK,WAAW,GAAG;EAClB;EACAC,GAAGA,CAACC,QAAQ,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE;IACzB,OAAOjB,UAAU,CAACe,GAAG,CAACC,QAAQ,EAAE;MAAEC;IAAO,CAAC,CAAC;EAC7C,CAAC;EAED;EACAC,IAAIA,CAACF,QAAQ,EAAEG,IAAI,GAAG,CAAC,CAAC,EAAE;IACxB,OAAOnB,UAAU,CAACkB,IAAI,CAACF,QAAQ,EAAEG,IAAI,CAAC;EACxC,CAAC;EAED;EACAC,QAAQA,CAACJ,QAAQ,EAAEK,QAAQ,EAAE;IAC3B,OAAOrB,UAAU,CAACkB,IAAI,CAACF,QAAQ,EAAEK,QAAQ,EAAE;MACzCjB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAkB,GAAGA,CAACN,QAAQ,EAAEG,IAAI,GAAG,CAAC,CAAC,EAAE;IACvB,OAAOnB,UAAU,CAACsB,GAAG,CAACN,QAAQ,EAAEG,IAAI,CAAC;EACvC,CAAC;EAED;EACAI,OAAOA,CAACP,QAAQ,EAAEK,QAAQ,EAAE;IAC1B,OAAOrB,UAAU,CAACsB,GAAG,CAACN,QAAQ,EAAEK,QAAQ,EAAE;MACxCjB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAoB,MAAMA,CAACR,QAAQ,EAAE;IACf,OAAOhB,UAAU,CAACwB,MAAM,CAACR,QAAQ,CAAC;EACpC;AACF,CAAC;AAED,eAAeF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}