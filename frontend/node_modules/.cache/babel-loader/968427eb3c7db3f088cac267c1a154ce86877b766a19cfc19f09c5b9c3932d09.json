{"ast":null,"code":"import { ref, onMounted, computed, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox, ElImageViewer } from 'element-plus';\nimport axios from 'axios';\nimport { Plus, Refresh, User, ArrowDown, ArrowUp, Download, Loading } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nimport { exportToExcel } from '../utils/exportUtils';\nimport apiConfig from '../config/api';\n\n// API基础URL\n// const apiBaseURL = apiConfig.baseURL;\n\n// 解析照片路径\nconst parsePhotoPath = path => {\n  if (!path) return [];\n  try {\n    // 尝试解析为JSON\n    if (path.startsWith('[') && path.endsWith(']')) {\n      return JSON.parse(path);\n    }\n    // 如果不是JSON格式，则将其作为单个路径返回\n    return [path];\n  } catch (error) {\n    console.error('解析照片路径失败:', error);\n    // 如果解析失败，将其作为单个路径返回\n    return [path];\n  }\n};\n\n// 获取指定类型的照片\nconst getPhotosByType = (record, type) => {\n  if (!record.photos) return [];\n  try {\n    const photos = JSON.parse(record.photos);\n    if (Array.isArray(photos)) {\n      return photos.filter(photo => photo.type === type);\n    }\n    return [];\n  } catch (error) {\n    console.error('解析照片JSON失败:', error);\n    return [];\n  }\n};\nexport default {\n  name: 'AdminRecordsView',\n  components: {\n    Plus,\n    Refresh,\n    User,\n    ArrowDown,\n    ArrowUp,\n    Download,\n    ElImageViewer,\n    Loading\n  },\n  setup() {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const units = ref([]);\n    const wasteTypes = ref([]);\n    const showFilterPanel = ref(true);\n\n    // 添加baseUrl定义\n    const baseUrl = apiConfig.baseURL;\n\n    // 图片预览相关\n    const showViewer = ref(false);\n    const previewImages = ref([]);\n    const previewIndex = ref(0);\n\n    // 添加分页相关的响应式变量\n    const page = ref(1);\n    const pageSize = ref(20);\n    const hasMore = ref(true);\n    const loadingMore = ref(false);\n\n    // 筛选表单\n    const filterForm = reactive({\n      unitId: null,\n      dateRange: null,\n      wasteTypeId: null,\n      minQuantity: null,\n      maxQuantity: null,\n      location: ''\n    });\n\n    // 过滤后的记录\n    const filteredRecords = computed(() => {\n      return records.value.filter(record => {\n        // 检查所属单位\n        if (filterForm.unitId && record.unit_id !== filterForm.unitId) {\n          return false;\n        }\n\n        // 检查废物类型\n        if (filterForm.wasteTypeId && record.waste_type_id !== filterForm.wasteTypeId) {\n          return false;\n        }\n\n        // 检查数量范围\n        if (filterForm.minQuantity !== null && parseFloat(record.quantity) < filterForm.minQuantity) {\n          return false;\n        }\n        if (filterForm.maxQuantity !== null && parseFloat(record.quantity) > filterForm.maxQuantity) {\n          return false;\n        }\n\n        // 检查地点关键词\n        if (filterForm.location && !record.location.toLowerCase().includes(filterForm.location.toLowerCase())) {\n          return false;\n        }\n\n        // 检查日期范围\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\n          const startDate = new Date(filterForm.dateRange[0]);\n          // 将结束日期设置为当天的23:59:59，以包含整天\n          const endDate = new Date(filterForm.dateRange[1]);\n          endDate.setHours(23, 59, 59, 999);\n\n          // 解析记录中的收集开始时间\n          if (record.collection_start_time) {\n            // 处理已格式化的日期时间字符串\n            const recordDate = parseFormattedDateTime(record.collection_start_time);\n            if (recordDate < startDate || recordDate > endDate) {\n              return false;\n            }\n          } else {\n            // 如果记录没有收集时间，并且筛选设置了日期范围，则排除该记录\n            return false;\n          }\n        }\n        return true;\n      });\n    });\n\n    // 解析已格式化的日期时间字符串\n    const parseFormattedDateTime = formattedDateTime => {\n      // 假设格式是 \"2025-03-01 14:30:00\"\n      // 移除所有非数字和连字符、冒号的字符\n      const cleanedStr = formattedDateTime.replace(/[^0-9\\-: ]/g, '');\n      return new Date(cleanedStr);\n    };\n    onMounted(async () => {\n      // 验证用户是否为超级管理员\n      if (!auth.state.isLoggedIn || auth.state.user.role_id !== 3) {\n        ElMessage.error('权限不足');\n        router.push('/login');\n        return;\n      }\n      await Promise.all([fetchUnits(), fetchWasteTypes(), fetchRecords()]);\n    });\n\n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await axios.get(apiConfig.getUrl(apiConfig.endpoints.units));\n        units.value = response.data;\n      } catch (error) {\n        console.error('获取单位列表失败:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n\n    // 获取废物类型列表\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await axios.get(apiConfig.getUrl(apiConfig.endpoints.wasteTypes));\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('获取废物类型列表失败:', error);\n        ElMessage.error('获取废物类型列表失败');\n      }\n    };\n    const fetchRecords = async (isLoadMore = false) => {\n      if (!isLoadMore) {\n        loading.value = true;\n        page.value = 1;\n        records.value = [];\n      } else {\n        loadingMore.value = true;\n      }\n      try {\n        const params = {\n          page: page.value,\n          pageSize: pageSize.value,\n          wasteTypeId: filterForm.wasteTypeId,\n          minQuantity: filterForm.minQuantity,\n          maxQuantity: filterForm.maxQuantity,\n          location: filterForm.location\n        };\n\n        // Only add dateRange if it exists and has both start and end dates\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\n          params.dateRange = JSON.stringify(filterForm.dateRange);\n        }\n        const response = await axios.get(`${apiConfig.getUrl(apiConfig.endpoints.wasteRecords)}/user/${auth.state.user.id}`, {\n          params\n        });\n\n        // 格式化日期\n        const formattedRecords = response.data.records.map(record => ({\n          ...record,\n          created_at: formatDateTime(record.created_at),\n          collection_start_time: formatDateTime(record.collection_start_time)\n        }));\n        if (isLoadMore) {\n          records.value = [...records.value, ...formattedRecords];\n        } else {\n          records.value = formattedRecords;\n        }\n        hasMore.value = response.data.hasMore;\n        if (hasMore.value) {\n          page.value++;\n        }\n      } catch (error) {\n        console.error('获取废物记录失败:', error);\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n        loadingMore.value = false;\n      }\n    };\n    const formatDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n    };\n    const refreshRecords = () => {\n      fetchRecords();\n    };\n    const addNewRecord = () => {\n      if (auth.state.user.role_id === 3) {\n        router.push('/record/new');\n      } else {\n        router.push(`/unit/${auth.state.user.unit_id}`);\n      }\n    };\n    const goToUserManagement = () => {\n      router.push('/user-management');\n    };\n    const editRecord = recordId => {\n      router.push(`/record/${recordId}`);\n    };\n\n    // 应用筛选\n    const applyFilter = async () => {\n      await fetchRecords();\n      ElMessage.success('筛选已应用');\n    };\n\n    // 重置筛选\n    const resetFilter = async () => {\n      filterForm.unitId = null;\n      filterForm.dateRange = null;\n      filterForm.wasteTypeId = null;\n      filterForm.minQuantity = null;\n      filterForm.maxQuantity = null;\n      filterForm.location = '';\n      await fetchRecords();\n      ElMessage.info('筛选条件已重置');\n    };\n\n    // 导出筛选后的记录为Excel\n    const exportRecords = async () => {\n      try {\n        loading.value = true;\n\n        // 准备筛选条件\n        const queryParams = {\n          wasteTypeId: filterForm.wasteTypeId ? filterForm.wasteTypeId : undefined,\n          minQuantity: filterForm.minQuantity ? filterForm.minQuantity : undefined,\n          maxQuantity: filterForm.maxQuantity ? filterForm.maxQuantity : undefined,\n          location: filterForm.location || undefined,\n          dateRange: filterForm.dateRange ? JSON.stringify(filterForm.dateRange) : undefined,\n          unitId: filterForm.unitId ? filterForm.unitId : undefined\n        };\n        console.log('导出记录的筛选条件:', queryParams);\n\n        // 调用后端API获取完整的记录数据\n        const {\n          data\n        } = await axios.get(`${apiConfig.getUrl(apiConfig.endpoints.wasteRecords)}/export/user/${auth.state.user.id}`, {\n          params: queryParams\n        });\n        console.log(`从后端获取到 ${data.length} 条记录用于导出`);\n        if (data.length === 0) {\n          ElMessage.warning('没有符合条件的记录可导出');\n          loading.value = false;\n          return;\n        }\n\n        // 准备导出数据\n        const exportData = data.map(record => ({\n          '记录ID': record.id,\n          '单位': record.unit_name,\n          '废物类型': record.waste_type_name,\n          '产生地点': record.location,\n          '数量(kg)': record.quantity,\n          '收集开始时间': formatDateTime(record.collection_start_time),\n          '收集结束时间': formatDateTime(record.collection_end_time),\n          '填报时间': formatDateTime(record.record_time),\n          '填报人': record.creator_name || '系统',\n          '备注': record.remarks || '',\n          '清理前照片': '查看原始记录',\n          '清理后照片': '查看原始记录'\n        }));\n\n        // 设置文件名\n        const unitName = filterForm.unitId ? units.value.find(u => u.id === filterForm.unitId)?.name || '未知单位' : '全部单位';\n        const fileName = `危险废物记录_${unitName}`;\n\n        // 设置表头\n        const exportHeaders = [{\n          text: '记录ID',\n          field: '记录ID'\n        }, {\n          text: '单位',\n          field: '单位'\n        }, {\n          text: '废物类型',\n          field: '废物类型'\n        }, {\n          text: '产生地点',\n          field: '产生地点'\n        }, {\n          text: '数量(kg)',\n          field: '数量(kg)'\n        }, {\n          text: '收集开始时间',\n          field: '收集开始时间'\n        }, {\n          text: '收集结束时间',\n          field: '收集结束时间'\n        }, {\n          text: '填报时间',\n          field: '填报时间'\n        }, {\n          text: '填报人',\n          field: '填报人'\n        }, {\n          text: '备注',\n          field: '备注'\n        }, {\n          text: '清理前照片',\n          field: '清理前照片'\n        }, {\n          text: '清理后照片',\n          field: '清理后照片'\n        }];\n\n        // 执行导出\n        const result = exportToExcel(exportData, fileName, exportHeaders);\n        if (result) {\n          ElMessage.success('导出成功');\n        } else {\n          ElMessage.error('导出失败，请重试');\n        }\n      } catch (error) {\n        console.error('导出记录失败:', error);\n        ElMessage.error('导出失败: ' + (error.message || '未知错误'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 确认删除记录\n    const confirmDelete = record => {\n      ElMessageBox.confirm('此操作将永久删除该记录，是否继续？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await axios.delete(`${apiConfig.getUrl(apiConfig.endpoints.wasteRecords)}/${record.id}`);\n          ElMessage.success('删除成功');\n          await fetchRecords();\n        } catch (error) {\n          console.error('删除记录失败:', error);\n          ElMessage.error('删除记录失败');\n        }\n      }).catch(() => {\n        ElMessage.info('已取消删除');\n      });\n    };\n\n    // 预览照片\n    const previewPhoto = (paths, index) => {\n      // 确保paths是数组\n      const photoArray = Array.isArray(paths) ? paths : [paths];\n      previewImages.value = photoArray.map(path => `${baseUrl}${path}`);\n      previewIndex.value = index || 0;\n      showViewer.value = true;\n    };\n\n    // 关闭预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n\n    // 添加滚动加载处理函数\n    const handleScroll = async e => {\n      const element = e.target;\n      // 添加安全检查，确保element存在且有必要的属性\n      if (element && element.scrollHeight && !loadingMore.value && hasMore.value && element.scrollHeight - element.scrollTop - element.clientHeight < 100) {\n        await fetchRecords(true);\n      }\n    };\n    return {\n      records,\n      filteredRecords,\n      loading,\n      units,\n      wasteTypes,\n      showFilterPanel,\n      filterForm,\n      applyFilter,\n      resetFilter,\n      exportRecords,\n      parsePhotoPath,\n      getPhotosByType,\n      refreshRecords,\n      addNewRecord,\n      goToUserManagement,\n      editRecord,\n      confirmDelete,\n      // 图片预览相关\n      showViewer,\n      previewImages,\n      previewIndex,\n      previewPhoto,\n      closeViewer,\n      baseUrl,\n      page,\n      pageSize,\n      hasMore,\n      loadingMore,\n      handleScroll\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","reactive","useRouter","ElMessage","ElMessageBox","ElImageViewer","axios","Plus","Refresh","User","ArrowDown","ArrowUp","Download","Loading","auth","exportToExcel","apiConfig","parsePhotoPath","path","startsWith","endsWith","JSON","parse","error","console","getPhotosByType","record","type","photos","Array","isArray","filter","photo","name","components","setup","router","records","loading","units","wasteTypes","showFilterPanel","baseUrl","baseURL","showViewer","previewImages","previewIndex","page","pageSize","hasMore","loadingMore","filterForm","unitId","dateRange","wasteTypeId","minQuantity","maxQuantity","location","filteredRecords","value","unit_id","waste_type_id","parseFloat","quantity","toLowerCase","includes","length","startDate","Date","endDate","setHours","collection_start_time","recordDate","parseFormattedDateTime","formattedDateTime","cleanedStr","replace","state","isLoggedIn","user","role_id","push","Promise","all","fetchUnits","fetchWasteTypes","fetchRecords","response","get","getUrl","endpoints","data","isLoadMore","params","stringify","wasteRecords","id","formattedRecords","map","created_at","formatDateTime","dateTimeStr","date","toLocaleString","year","month","day","hour","minute","hour12","refreshRecords","addNewRecord","goToUserManagement","editRecord","recordId","applyFilter","success","resetFilter","info","exportRecords","queryParams","undefined","log","warning","exportData","unit_name","waste_type_name","collection_end_time","record_time","creator_name","remarks","unitName","find","u","fileName","exportHeaders","text","field","result","message","confirmDelete","confirm","confirmButtonText","cancelButtonText","then","delete","catch","previewPhoto","paths","index","photoArray","closeViewer","handleScroll","e","element","target","scrollHeight","scrollTop","clientHeight"],"sources":["F:\\Project\\Hazardous-waste-management-system\\frontend\\src\\views\\AdminRecords.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-records-container\">\r\n    <div class=\"header\">\r\n      <h1>危险废物管理系统 - 全部记录</h1>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"actions\">\r\n        <el-button type=\"primary\" @click=\"addNewRecord\">\r\n          <el-icon><plus /></el-icon> 新增填报\r\n        </el-button>\r\n        <el-button type=\"success\" @click=\"goToUserManagement\">\r\n          <el-icon><user /></el-icon> 人员管理\r\n        </el-button>\r\n        <el-button @click=\"refreshRecords\">\r\n          <el-icon><refresh /></el-icon> 刷新\r\n        </el-button>\r\n      </div>\r\n      \r\n      <!-- 筛选面板 -->\r\n      <el-card class=\"filter-card\">\r\n        <div class=\"filter-header\">\r\n          <h3>筛选条件</h3>\r\n          <el-button type=\"primary\" link @click=\"showFilterPanel = !showFilterPanel\">\r\n            {{ showFilterPanel ? '收起' : '展开' }} \r\n            <el-icon v-if=\"!showFilterPanel\"><arrow-down /></el-icon>\r\n            <el-icon v-else><arrow-up /></el-icon>\r\n          </el-button>\r\n        </div>\r\n        \r\n        <div v-show=\"showFilterPanel\" class=\"filter-form-container\">\r\n          <el-form :model=\"filterForm\" label-width=\"100px\" class=\"filter-form\">\r\n            <el-row :gutter=\"20\">\r\n              <!-- 所属单位（超级管理员特有） -->\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"所属单位\">\r\n                  <el-select v-model=\"filterForm.unitId\" placeholder=\"选择单位\" style=\"width: 100%\" clearable>\r\n                    <el-option \r\n                      v-for=\"unit in units\" \r\n                      :key=\"unit.id\" \r\n                      :label=\"unit.name\" \r\n                      :value=\"unit.id\" \r\n                    />\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-col>\r\n              \r\n              <!-- 收集时间范围 -->\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"收集时间\">\r\n                  <el-date-picker\r\n                    v-model=\"filterForm.dateRange\"\r\n                    type=\"daterange\"\r\n                    range-separator=\"至\"\r\n                    start-placeholder=\"开始日期\"\r\n                    end-placeholder=\"结束日期\"\r\n                    format=\"YYYY-MM-DD\"\r\n                    value-format=\"YYYY-MM-DD\"\r\n                    style=\"width: 100%\"\r\n                  />\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            \r\n            <el-row :gutter=\"20\">\r\n              <!-- 废物类型 -->\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"废物类型\">\r\n                  <el-select v-model=\"filterForm.wasteTypeId\" placeholder=\"选择废物类型\" style=\"width: 100%\" clearable>\r\n                    <el-option \r\n                      v-for=\"type in wasteTypes\" \r\n                      :key=\"type.id\" \r\n                      :label=\"type.name\" \r\n                      :value=\"type.id\" \r\n                    />\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-col>\r\n              \r\n              <!-- 数量范围 -->\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"数量范围(吨)\">\r\n                  <div class=\"quantity-range\">\r\n                    <el-input-number \r\n                      v-model=\"filterForm.minQuantity\" \r\n                      :min=\"0\"\r\n                      :precision=\"3\"\r\n                      :step=\"0.001\"\r\n                      placeholder=\"最小值\"\r\n                      style=\"width: 47%\"\r\n                    />\r\n                    <span class=\"range-separator\">至</span>\r\n                    <el-input-number \r\n                      v-model=\"filterForm.maxQuantity\" \r\n                      :min=\"filterForm.minQuantity || 0\"\r\n                      :precision=\"3\"\r\n                      :step=\"0.001\"\r\n                      placeholder=\"最大值\"\r\n                      style=\"width: 47%\"\r\n                    />\r\n                  </div>\r\n                </el-form-item>\r\n              </el-col>\r\n              \r\n              <!-- 产生地点 -->\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"产生地点\">\r\n                  <el-input \r\n                    v-model=\"filterForm.location\" \r\n                    placeholder=\"输入地点关键词搜索\" \r\n                    clearable\r\n                  />\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            \r\n            <div class=\"filter-actions\">\r\n              <el-button type=\"primary\" @click=\"applyFilter\">筛选</el-button>\r\n              <el-button @click=\"resetFilter\">重置</el-button>\r\n            </div>\r\n          </el-form>\r\n        </div>\r\n      </el-card>\r\n      \r\n      <div class=\"records-wrapper\">\r\n        <el-card class=\"records-card\">\r\n          <div class=\"card-header\">\r\n            <h3>所有废物记录</h3>\r\n            <div class=\"card-actions\">\r\n              <el-button type=\"warning\" @click=\"exportRecords\">\r\n                <el-icon><download /></el-icon> 导出记录\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n          \r\n          <el-table \r\n            :data=\"filteredRecords\" \r\n            style=\"width: 100%\" \r\n            border \r\n            v-loading=\"loading\"\r\n            stripe\r\n            class=\"responsive-table\"\r\n            height=\"500\"\r\n            @scroll=\"handleScroll\"\r\n          >\r\n            <el-table-column prop=\"unit_name\" label=\"单位\" width=\"100\" />\r\n            <el-table-column prop=\"waste_type_name\" label=\"废物类型\" width=\"100\" />\r\n            <el-table-column prop=\"location\" label=\"产生地点\" />\r\n            <el-table-column prop=\"collection_start_time\" label=\"收集开始时间\" width=\"160\" />\r\n            <el-table-column label=\"数量(吨)\" width=\"80\">\r\n              <template #default=\"scope\">\r\n                {{ parseFloat(scope.row.quantity).toFixed(3) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"creator_name\" label=\"汇报人\" width=\"100\" />\r\n            <el-table-column prop=\"created_at\" label=\"记录时间\" width=\"160\" />\r\n            <el-table-column\r\n              label=\"现场照片（清理前）\"\r\n              width=\"120\"\r\n              align=\"center\"\r\n            >\r\n              <template #default=\"scope\">\r\n                <div v-if=\"scope.row.photo_path_before\" class=\"photo-preview\">\r\n                  <!-- 多张照片显示 -->\r\n                  <div \r\n                    v-for=\"(path, index) in parsePhotoPath(scope.row.photo_path_before)\" \r\n                    :key=\"index\"\r\n                    class=\"photo-thumbnail-container\"\r\n                    @click=\"previewPhoto(parsePhotoPath(scope.row.photo_path_before), index)\"\r\n                  >\r\n                    <el-image\r\n                      style=\"width: 50px; height: 50px\"\r\n                      :src=\"`${baseUrl}${path}`\"\r\n                      fit=\"cover\"\r\n                    ></el-image>\r\n                  </div>\r\n                  <div v-if=\"parsePhotoPath(scope.row.photo_path_before).length > 1\" class=\"photo-count\">\r\n                    {{ parsePhotoPath(scope.row.photo_path_before).length }}张\r\n                  </div>\r\n                </div>\r\n                <span v-else>无</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n              label=\"现场照片（清理后）\"\r\n              width=\"120\"\r\n              align=\"center\"\r\n            >\r\n              <template #default=\"scope\">\r\n                <div v-if=\"scope.row.photo_path_after\" class=\"photo-preview\">\r\n                  <!-- 多张照片显示 -->\r\n                  <div \r\n                    v-for=\"(path, index) in parsePhotoPath(scope.row.photo_path_after)\" \r\n                    :key=\"index\"\r\n                    class=\"photo-thumbnail-container\"\r\n                    @click=\"previewPhoto(parsePhotoPath(scope.row.photo_path_after), index)\"\r\n                  >\r\n                    <el-image\r\n                      style=\"width: 50px; height: 50px\"\r\n                      :src=\"`${baseUrl}${path}`\"\r\n                      fit=\"cover\"\r\n                    ></el-image>\r\n                  </div>\r\n                  <div v-if=\"parsePhotoPath(scope.row.photo_path_after).length > 1\" class=\"photo-count\">\r\n                    {{ parsePhotoPath(scope.row.photo_path_after).length }}张\r\n                  </div>\r\n                </div>\r\n                <span v-else>无</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"70\" fixed=\"right\">\r\n              <template #default=\"scope\">\r\n                <div class=\"operation-buttons\">\r\n                  <el-button \r\n                    type=\"primary\" \r\n                    size=\"small\" \r\n                    @click=\"editRecord(scope.row.id)\"\r\n                    text\r\n                  >\r\n                    编辑\r\n                  </el-button>\r\n                  <el-button \r\n                    type=\"danger\" \r\n                    size=\"small\" \r\n                    @click=\"confirmDelete(scope.row)\"\r\n                    text\r\n                  >\r\n                    删除\r\n                  </el-button>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          \r\n          <div v-if=\"loadingMore\" class=\"loading-more\">\r\n            <el-icon class=\"loading\"><loading /></el-icon>\r\n            加载更多...\r\n          </div>\r\n          \r\n          <div class=\"empty-block\" v-if=\"records.length === 0 && !loading\">\r\n            <el-empty description=\"暂无废物记录\" />\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n\r\n    <!-- 添加独立的图片预览组件 -->\r\n    <el-image-viewer\r\n      v-if=\"showViewer\"\r\n      :url-list=\"previewImages\"\r\n      :initial-index=\"previewIndex\"\r\n      @close=\"closeViewer\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage, ElMessageBox, ElImageViewer } from 'element-plus';\r\nimport axios from 'axios';\r\nimport { Plus, Refresh, User, ArrowDown, ArrowUp, Download, Loading } from '@element-plus/icons-vue';\r\nimport auth from '../store/auth';\r\nimport { exportToExcel } from '../utils/exportUtils';\r\nimport apiConfig from '../config/api';\r\n\r\n// API基础URL\r\n// const apiBaseURL = apiConfig.baseURL;\r\n\r\n// 解析照片路径\r\nconst parsePhotoPath = (path) => {\r\n  if (!path) return [];\r\n  \r\n  try {\r\n    // 尝试解析为JSON\r\n    if (path.startsWith('[') && path.endsWith(']')) {\r\n      return JSON.parse(path);\r\n    }\r\n    // 如果不是JSON格式，则将其作为单个路径返回\r\n    return [path];\r\n  } catch (error) {\r\n    console.error('解析照片路径失败:', error);\r\n    // 如果解析失败，将其作为单个路径返回\r\n    return [path];\r\n  }\r\n};\r\n\r\n// 获取指定类型的照片\r\nconst getPhotosByType = (record, type) => {\r\n  if (!record.photos) return [];\r\n  \r\n  try {\r\n    const photos = JSON.parse(record.photos);\r\n    if (Array.isArray(photos)) {\r\n      return photos.filter(photo => photo.type === type);\r\n    }\r\n    return [];\r\n  } catch (error) {\r\n    console.error('解析照片JSON失败:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default {\r\n  name: 'AdminRecordsView',\r\n  components: {\r\n    Plus,\r\n    Refresh,\r\n    User,\r\n    ArrowDown,\r\n    ArrowUp,\r\n    Download,\r\n    ElImageViewer,\r\n    Loading\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const records = ref([]);\r\n    const loading = ref(false);\r\n    const units = ref([]);\r\n    const wasteTypes = ref([]);\r\n    const showFilterPanel = ref(true);\r\n    \r\n    // 添加baseUrl定义\r\n    const baseUrl = apiConfig.baseURL;\r\n    \r\n    // 图片预览相关\r\n    const showViewer = ref(false);\r\n    const previewImages = ref([]);\r\n    const previewIndex = ref(0);\r\n    \r\n    // 添加分页相关的响应式变量\r\n    const page = ref(1);\r\n    const pageSize = ref(20);\r\n    const hasMore = ref(true);\r\n    const loadingMore = ref(false);\r\n    \r\n    // 筛选表单\r\n    const filterForm = reactive({\r\n      unitId: null,\r\n      dateRange: null,\r\n      wasteTypeId: null,\r\n      minQuantity: null,\r\n      maxQuantity: null,\r\n      location: ''\r\n    });\r\n    \r\n    // 过滤后的记录\r\n    const filteredRecords = computed(() => {\r\n      return records.value.filter(record => {\r\n        // 检查所属单位\r\n        if (filterForm.unitId && record.unit_id !== filterForm.unitId) {\r\n          return false;\r\n        }\r\n        \r\n        // 检查废物类型\r\n        if (filterForm.wasteTypeId && record.waste_type_id !== filterForm.wasteTypeId) {\r\n          return false;\r\n        }\r\n        \r\n        // 检查数量范围\r\n        if (filterForm.minQuantity !== null && parseFloat(record.quantity) < filterForm.minQuantity) {\r\n          return false;\r\n        }\r\n        if (filterForm.maxQuantity !== null && parseFloat(record.quantity) > filterForm.maxQuantity) {\r\n          return false;\r\n        }\r\n        \r\n        // 检查地点关键词\r\n        if (filterForm.location && !record.location.toLowerCase().includes(filterForm.location.toLowerCase())) {\r\n          return false;\r\n        }\r\n        \r\n        // 检查日期范围\r\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\r\n          const startDate = new Date(filterForm.dateRange[0]);\r\n          // 将结束日期设置为当天的23:59:59，以包含整天\r\n          const endDate = new Date(filterForm.dateRange[1]);\r\n          endDate.setHours(23, 59, 59, 999);\r\n          \r\n          // 解析记录中的收集开始时间\r\n          if (record.collection_start_time) {\r\n            // 处理已格式化的日期时间字符串\r\n            const recordDate = parseFormattedDateTime(record.collection_start_time);\r\n            if (recordDate < startDate || recordDate > endDate) {\r\n              return false;\r\n            }\r\n          } else {\r\n            // 如果记录没有收集时间，并且筛选设置了日期范围，则排除该记录\r\n            return false;\r\n          }\r\n        }\r\n        \r\n        return true;\r\n      });\r\n    });\r\n    \r\n    // 解析已格式化的日期时间字符串\r\n    const parseFormattedDateTime = (formattedDateTime) => {\r\n      // 假设格式是 \"2025-03-01 14:30:00\"\r\n      // 移除所有非数字和连字符、冒号的字符\r\n      const cleanedStr = formattedDateTime.replace(/[^0-9\\-: ]/g, '');\r\n      return new Date(cleanedStr);\r\n    };\r\n\r\n    onMounted(async () => {\r\n      // 验证用户是否为超级管理员\r\n      if (!auth.state.isLoggedIn || auth.state.user.role_id !== 3) {\r\n        ElMessage.error('权限不足');\r\n        router.push('/login');\r\n        return;\r\n      }\r\n      \r\n      await Promise.all([\r\n        fetchUnits(),\r\n        fetchWasteTypes(),\r\n        fetchRecords()\r\n      ]);\r\n    });\r\n    \r\n    // 获取单位列表\r\n    const fetchUnits = async () => {\r\n      try {\r\n        const response = await axios.get(apiConfig.getUrl(apiConfig.endpoints.units));\r\n        units.value = response.data;\r\n      } catch (error) {\r\n        console.error('获取单位列表失败:', error);\r\n        ElMessage.error('获取单位列表失败');\r\n      }\r\n    };\r\n    \r\n    // 获取废物类型列表\r\n    const fetchWasteTypes = async () => {\r\n      try {\r\n        const response = await axios.get(apiConfig.getUrl(apiConfig.endpoints.wasteTypes));\r\n        wasteTypes.value = response.data;\r\n      } catch (error) {\r\n        console.error('获取废物类型列表失败:', error);\r\n        ElMessage.error('获取废物类型列表失败');\r\n      }\r\n    };\r\n\r\n    const fetchRecords = async (isLoadMore = false) => {\r\n      if (!isLoadMore) {\r\n        loading.value = true;\r\n        page.value = 1;\r\n        records.value = [];\r\n      } else {\r\n        loadingMore.value = true;\r\n      }\r\n      \r\n      try {\r\n        const params = {\r\n          page: page.value,\r\n          pageSize: pageSize.value,\r\n          wasteTypeId: filterForm.wasteTypeId,\r\n          minQuantity: filterForm.minQuantity,\r\n          maxQuantity: filterForm.maxQuantity,\r\n          location: filterForm.location,\r\n        };\r\n        \r\n        // Only add dateRange if it exists and has both start and end dates\r\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\r\n          params.dateRange = JSON.stringify(filterForm.dateRange);\r\n        }\r\n        \r\n        const response = await axios.get(\r\n          `${apiConfig.getUrl(apiConfig.endpoints.wasteRecords)}/user/${auth.state.user.id}`,\r\n          { params }\r\n        );\r\n        \r\n        // 格式化日期\r\n        const formattedRecords = response.data.records.map(record => ({\r\n          ...record,\r\n          created_at: formatDateTime(record.created_at),\r\n          collection_start_time: formatDateTime(record.collection_start_time)\r\n        }));\r\n        \r\n        if (isLoadMore) {\r\n          records.value = [...records.value, ...formattedRecords];\r\n        } else {\r\n          records.value = formattedRecords;\r\n        }\r\n        \r\n        hasMore.value = response.data.hasMore;\r\n        if (hasMore.value) {\r\n          page.value++;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取废物记录失败:', error);\r\n        ElMessage.error('获取废物记录失败');\r\n      } finally {\r\n        loading.value = false;\r\n        loadingMore.value = false;\r\n      }\r\n    };\r\n\r\n    const formatDateTime = (dateTimeStr) => {\r\n      if (!dateTimeStr) return '';\r\n      const date = new Date(dateTimeStr);\r\n      return date.toLocaleString('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        hour12: false\r\n      });\r\n    };\r\n\r\n    const refreshRecords = () => {\r\n      fetchRecords();\r\n    };\r\n\r\n    const addNewRecord = () => {\r\n      if (auth.state.user.role_id === 3) {\r\n        router.push('/record/new');\r\n      } else {\r\n        router.push(`/unit/${auth.state.user.unit_id}`);\r\n      }\r\n    };\r\n\r\n    const goToUserManagement = () => {\r\n      router.push('/user-management');\r\n    };\r\n\r\n    const editRecord = (recordId) => {\r\n      router.push(`/record/${recordId}`);\r\n    };\r\n\r\n    // 应用筛选\r\n    const applyFilter = async () => {\r\n      await fetchRecords();\r\n      ElMessage.success('筛选已应用');\r\n    };\r\n    \r\n    // 重置筛选\r\n    const resetFilter = async () => {\r\n      filterForm.unitId = null;\r\n      filterForm.dateRange = null;\r\n      filterForm.wasteTypeId = null;\r\n      filterForm.minQuantity = null;\r\n      filterForm.maxQuantity = null;\r\n      filterForm.location = '';\r\n      await fetchRecords();\r\n      ElMessage.info('筛选条件已重置');\r\n    };\r\n    \r\n    // 导出筛选后的记录为Excel\r\n    const exportRecords = async () => {\r\n      try {\r\n        loading.value = true;\r\n        \r\n        // 准备筛选条件\r\n        const queryParams = {\r\n          wasteTypeId: filterForm.wasteTypeId ? filterForm.wasteTypeId : undefined,\r\n          minQuantity: filterForm.minQuantity ? filterForm.minQuantity : undefined,\r\n          maxQuantity: filterForm.maxQuantity ? filterForm.maxQuantity : undefined,\r\n          location: filterForm.location || undefined,\r\n          dateRange: filterForm.dateRange ? JSON.stringify(filterForm.dateRange) : undefined,\r\n          unitId: filterForm.unitId ? filterForm.unitId : undefined\r\n        };\r\n        \r\n        console.log('导出记录的筛选条件:', queryParams);\r\n        \r\n        // 调用后端API获取完整的记录数据\r\n        const { data } = await axios.get(\r\n          `${apiConfig.getUrl(apiConfig.endpoints.wasteRecords)}/export/user/${auth.state.user.id}`,\r\n          { params: queryParams }\r\n        );\r\n        \r\n        console.log(`从后端获取到 ${data.length} 条记录用于导出`);\r\n        \r\n        if (data.length === 0) {\r\n          ElMessage.warning('没有符合条件的记录可导出');\r\n          loading.value = false;\r\n          return;\r\n        }\r\n        \r\n        // 准备导出数据\r\n        const exportData = data.map(record => ({\r\n          '记录ID': record.id,\r\n          '单位': record.unit_name,\r\n          '废物类型': record.waste_type_name,\r\n          '产生地点': record.location,\r\n          '数量(kg)': record.quantity,\r\n          '收集开始时间': formatDateTime(record.collection_start_time),\r\n          '收集结束时间': formatDateTime(record.collection_end_time),\r\n          '填报时间': formatDateTime(record.record_time),\r\n          '填报人': record.creator_name || '系统',\r\n          '备注': record.remarks || '',\r\n          '清理前照片': '查看原始记录',\r\n          '清理后照片': '查看原始记录'\r\n        }));\r\n        \r\n        // 设置文件名\r\n        const unitName = filterForm.unitId \r\n          ? units.value.find(u => u.id === filterForm.unitId)?.name || '未知单位'\r\n          : '全部单位';\r\n        const fileName = `危险废物记录_${unitName}`;\r\n        \r\n        // 设置表头\r\n        const exportHeaders = [\r\n          { text: '记录ID', field: '记录ID' },\r\n          { text: '单位', field: '单位' },\r\n          { text: '废物类型', field: '废物类型' },\r\n          { text: '产生地点', field: '产生地点' },\r\n          { text: '数量(kg)', field: '数量(kg)' },\r\n          { text: '收集开始时间', field: '收集开始时间' },\r\n          { text: '收集结束时间', field: '收集结束时间' },\r\n          { text: '填报时间', field: '填报时间' },\r\n          { text: '填报人', field: '填报人' },\r\n          { text: '备注', field: '备注' },\r\n          { text: '清理前照片', field: '清理前照片' },\r\n          { text: '清理后照片', field: '清理后照片' }\r\n        ];\r\n        \r\n        // 执行导出\r\n        const result = exportToExcel(exportData, fileName, exportHeaders);\r\n        \r\n        if (result) {\r\n          ElMessage.success('导出成功');\r\n        } else {\r\n          ElMessage.error('导出失败，请重试');\r\n        }\r\n      } catch (error) {\r\n        console.error('导出记录失败:', error);\r\n        ElMessage.error('导出失败: ' + (error.message || '未知错误'));\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    // 确认删除记录\r\n    const confirmDelete = (record) => {\r\n      ElMessageBox.confirm(\r\n        '此操作将永久删除该记录，是否继续？',\r\n        '警告',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }\r\n      )\r\n        .then(async () => {\r\n          try {\r\n            await axios.delete(`${apiConfig.getUrl(apiConfig.endpoints.wasteRecords)}/${record.id}`);\r\n            ElMessage.success('删除成功');\r\n            await fetchRecords();\r\n          } catch (error) {\r\n            console.error('删除记录失败:', error);\r\n            ElMessage.error('删除记录失败');\r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage.info('已取消删除');\r\n        });\r\n    };\r\n\r\n    // 预览照片\r\n    const previewPhoto = (paths, index) => {\r\n      // 确保paths是数组\r\n      const photoArray = Array.isArray(paths) ? paths : [paths];\r\n      previewImages.value = photoArray.map(path => `${baseUrl}${path}`);\r\n      previewIndex.value = index || 0;\r\n      showViewer.value = true;\r\n    };\r\n    \r\n    // 关闭预览\r\n    const closeViewer = () => {\r\n      showViewer.value = false;\r\n    };\r\n\r\n    // 添加滚动加载处理函数\r\n    const handleScroll = async (e) => {\r\n      const element = e.target;\r\n      // 添加安全检查，确保element存在且有必要的属性\r\n      if (\r\n        element && \r\n        element.scrollHeight && \r\n        !loadingMore.value &&\r\n        hasMore.value &&\r\n        element.scrollHeight - element.scrollTop - element.clientHeight < 100\r\n      ) {\r\n        await fetchRecords(true);\r\n      }\r\n    };\r\n\r\n    return {\r\n      records,\r\n      filteredRecords,\r\n      loading,\r\n      units,\r\n      wasteTypes,\r\n      showFilterPanel,\r\n      filterForm,\r\n      applyFilter,\r\n      resetFilter,\r\n      exportRecords,\r\n      parsePhotoPath,\r\n      getPhotosByType,\r\n      refreshRecords,\r\n      addNewRecord,\r\n      goToUserManagement,\r\n      editRecord,\r\n      confirmDelete,\r\n      // 图片预览相关\r\n      showViewer,\r\n      previewImages,\r\n      previewIndex,\r\n      previewPhoto,\r\n      closeViewer,\r\n      baseUrl,\r\n      page,\r\n      pageSize,\r\n      hasMore,\r\n      loadingMore,\r\n      handleScroll\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-records-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 30px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.filter-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.filter-form-container {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.quantity-range {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.range-separator {\r\n  margin: 0 5px;\r\n}\r\n\r\n.filter-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.records-wrapper {\r\n  margin-top: 20px;\r\n}\r\n\r\n.records-card {\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.record-image {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: block;\r\n}\r\n\r\n.photo-count {\r\n  font-size: 12px;\r\n  color: #409EFF;\r\n  text-align: center;\r\n  margin-top: 2px;\r\n}\r\n\r\n.image-error {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: #f5f7fa;\r\n  color: #909399;\r\n}\r\n\r\n.empty-block {\r\n  margin: 20px 0;\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f5f5;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.photo-thumbnail-container {\r\n  cursor: pointer;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.photo-count {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  text-align: center;\r\n  margin-top: 2px;\r\n}\r\n\r\n.photo-preview {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.operation-buttons {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  align-items: center;\r\n}\r\n\r\n.operation-buttons .el-button {\r\n  margin-left: 0;\r\n  padding: 4px 8px;\r\n}\r\n\r\n.loading-more {\r\n  text-align: center;\r\n  padding: 10px 0;\r\n  color: #909399;\r\n}\r\n\r\n.loading-more .loading {\r\n  margin-right: 5px;\r\n  animation: rotating 2s linear infinite;\r\n}\r\n\r\n@keyframes rotating {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 修复Element Plus图片预览组件的z-index问题 */\r\n.el-image-viewer__wrapper {\r\n  z-index: 2147483647 !important; /* 使用最大可能的z-index值 */\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的遮罩层也在最上层 */\r\n.el-image-viewer__mask {\r\n  z-index: 2147483646 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的操作按钮在最上层 */\r\n.el-image-viewer__btn {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的关闭按钮在最上层 */\r\n.el-image-viewer__close {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的图片在最上层 */\r\n.el-image-viewer__img {\r\n  z-index: 2147483646 !important;\r\n  position: relative !important;\r\n}\r\n\r\n/* 确保图片预览的操作栏在最上层 */\r\n.el-image-viewer__actions {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的缩放按钮在最上层 */\r\n.el-image-viewer__actions__inner {\r\n  z-index: 2147483647 !important;\r\n  position: relative !important;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}