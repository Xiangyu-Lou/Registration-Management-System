{"ast":null,"code":"import { ref, onMounted, computed, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, HomeFilled, Refresh, Plus, User, ArrowDown, ArrowUp, Download, Loading } from '@element-plus/icons-vue';\nimport { exportToExcel, prepareImageExportData } from '../utils/exportUtils';\nimport auth from '../store/auth';\nexport default {\n  name: 'RecordsList',\n  components: {\n    ArrowLeft,\n    HomeFilled,\n    Refresh,\n    Plus,\n    User,\n    ArrowDown,\n    ArrowUp,\n    Download,\n    ElImageViewer,\n    Loading\n  },\n  props: {\n    unitId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const showFilterPanel = ref(true);\n\n    // 添加baseUrl定义\n    const baseUrl = apiConfig.baseURL;\n\n    // 添加解析照片路径的函数\n    const parsePhotoPath = path => {\n      if (!path) return [];\n      try {\n        // 尝试解析为JSON\n        if (path.startsWith('[') && path.endsWith(']')) {\n          return JSON.parse(path);\n        }\n        // 如果不是JSON格式，则将其作为单个路径返回\n        return [path];\n      } catch (error) {\n        console.error('解析照片路径失败:', error);\n        // 如果解析失败，将其作为单个路径返回\n        return [path];\n      }\n    };\n\n    // 添加分页相关的响应式变量\n    const page = ref(1);\n    const pageSize = ref(20);\n    const hasMore = ref(true);\n    const loadingMore = ref(false);\n\n    // 筛选表单\n    const filterForm = reactive({\n      dateRange: null,\n      wasteTypeId: null,\n      minQuantity: null,\n      maxQuantity: null,\n      location: ''\n    });\n\n    // 过滤后的记录\n    const filteredRecords = computed(() => {\n      if (!records.value || !Array.isArray(records.value)) {\n        return [];\n      }\n      return records.value.filter(record => {\n        // 检查废物类型\n        if (filterForm.wasteTypeId && record.waste_type_id !== filterForm.wasteTypeId) {\n          return false;\n        }\n\n        // 检查数量范围\n        if (filterForm.minQuantity !== null && parseFloat(record.quantity) < filterForm.minQuantity) {\n          return false;\n        }\n        if (filterForm.maxQuantity !== null && parseFloat(record.quantity) > filterForm.maxQuantity) {\n          return false;\n        }\n\n        // 检查地点关键词\n        if (filterForm.location && !record.location.toLowerCase().includes(filterForm.location.toLowerCase())) {\n          return false;\n        }\n\n        // 检查日期范围\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\n          const startDate = new Date(filterForm.dateRange[0]);\n          const endDate = new Date(filterForm.dateRange[1]);\n          endDate.setHours(23, 59, 59); // 设置为当天结束时间\n\n          const recordDate = new Date(record.collection_start_time);\n          if (recordDate < startDate || recordDate > endDate) {\n            return false;\n          }\n        }\n        return true;\n      });\n    });\n\n    // 判断是否为管理员\n    const isAdmin = computed(() => {\n      return auth.isAdmin();\n    });\n\n    // 判断是否为单位管理员\n    const isUnitAdmin = computed(() => {\n      return auth.isUnitAdmin();\n    });\n\n    // 格式化日期时间\n    const parseFormattedDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    };\n\n    // 刷新记录\n    const refreshRecords = async () => {\n      await fetchRecords();\n      ElMessage.success('记录已刷新');\n    };\n\n    // 返回填报页面\n    const goBack = () => {\n      // 获取当前用户的单位ID\n      const unitId = auth.getUnitId();\n      if (unitId) {\n        router.push(`/unit/${unitId}`);\n      } else {\n        // 如果没有单位ID，则返回首页\n        router.push('/');\n      }\n    };\n\n    // 返回首页\n    const goHome = () => {\n      router.push('/');\n    };\n\n    // 前往人员管理\n    const goToUserManagement = () => {\n      router.push(`/user-management`);\n    };\n\n    // 添加新记录\n    const addNewRecord = () => {\n      router.push(`/unit/${props.unitId}`);\n    };\n\n    // 编辑记录\n    const editRecord = recordId => {\n      router.push(`/record/${recordId}`);\n    };\n\n    // 判断是否可以编辑记录\n    const canEdit = record => {\n      if (!record) return false;\n\n      // 超级管理员可以编辑所有记录\n      if (isAdmin.value) return true;\n\n      // 单位管理员可以编辑本单位的记录\n      const unitId = auth.getUnitId();\n      if (isUnitAdmin.value && unitId && record.unit_id === parseInt(unitId)) return true;\n\n      // 普通用户只能编辑自己创建的记录\n      const userId = auth.getUserId();\n      return userId && record.creator_id === parseInt(userId);\n    };\n\n    // 确认删除\n    const confirmDelete = record => {\n      ElMessageBox.confirm(`确定要删除这条废物记录吗？此操作不可逆。`, '删除确认', {\n        confirmButtonText: '确定删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await httpService.delete(`${apiConfig.endpoints.wasteRecords}/${record.id}`);\n          ElMessage.success('记录已成功删除');\n          await fetchRecords(); // 重新加载记录\n        } catch (error) {\n          console.error('删除记录失败:', error);\n          ElMessage.error('删除记录失败，请重试');\n        }\n      }).catch(() => {\n        ElMessage.info('已取消删除');\n      });\n    };\n\n    // 应用筛选\n    const applyFilter = async () => {\n      try {\n        // 重置分页\n        page.value = 1;\n\n        // 重新获取记录\n        await fetchRecords();\n        ElMessage.success('筛选条件已应用');\n      } catch (error) {\n        console.error('应用筛选失败:', error);\n        ElMessage.error('应用筛选失败');\n      }\n    };\n\n    // 重置筛选\n    const resetFilter = async () => {\n      filterForm.dateRange = null;\n      filterForm.wasteTypeId = null;\n      filterForm.minQuantity = null;\n      filterForm.maxQuantity = null;\n      filterForm.location = '';\n\n      // 重置分页\n      page.value = 1;\n\n      // 重新获取记录\n      await fetchRecords();\n      ElMessage.success('筛选条件已重置');\n    };\n\n    // 导出记录\n    const exportRecords = async () => {\n      try {\n        loading.value = true;\n        console.log('开始导出记录...');\n\n        // 获取要导出的记录\n        const recordsToExport = filteredRecords.value;\n        console.log(`导出记录数量: ${recordsToExport.length}`);\n        if (recordsToExport.length === 0) {\n          ElMessage.warning('没有可导出的记录');\n          loading.value = false;\n          return;\n        }\n\n        // 设置导出基础URL\n        const exportBaseUrl = window.location.origin;\n        console.log('导出基础URL:', exportBaseUrl);\n\n        // 准备导出数据\n        const exportData = recordsToExport.map(record => ({\n          '单位': record.unit_name || '',\n          '废物类型': record.waste_type_name || '',\n          '收集地点': record.location || '',\n          '收集时间': record.collection_start_time ? new Date(record.collection_start_time).toLocaleString() : '',\n          '数量(kg)': record.quantity || 0,\n          '记录时间': record.created_at ? new Date(record.created_at).toLocaleString() : '',\n          '汇报人': record.creator_name || '未知',\n          '清理前照片': '',\n          // 这里留空，图片会通过imageData添加\n          '清理后照片': '' // 这里留空，图片会通过imageData添加\n        }));\n        console.log('导出数据准备完成');\n\n        // 准备图片数据\n        console.log('准备图片数据...');\n        // 使用正确的基础URL，确保能够访问到图片\n        const imageData = await prepareImageExportData(recordsToExport, baseUrl);\n        console.log('图片数据准备完成，数量:', Object.keys(imageData).length);\n\n        // 导出文件\n        const fileName = `${unitName.value}危险废物记录`;\n        const headers = [{\n          text: '单位',\n          field: '单位'\n        }, {\n          text: '废物类型',\n          field: '废物类型'\n        }, {\n          text: '收集地点',\n          field: '收集地点'\n        }, {\n          text: '收集时间',\n          field: '收集时间'\n        }, {\n          text: '数量(kg)',\n          field: '数量(kg)'\n        }, {\n          text: '记录时间',\n          field: '记录时间'\n        }, {\n          text: '汇报人',\n          field: '汇报人'\n        }, {\n          text: '清理前照片',\n          field: '清理前照片'\n        }, {\n          text: '清理后照片',\n          field: '清理后照片'\n        }];\n        console.log('开始导出Excel文件...');\n        try {\n          const result = await exportToExcel(exportData, fileName, headers, imageData);\n          if (result) {\n            console.log('导出成功');\n            ElMessage.success('导出成功');\n          } else {\n            console.log('导出失败，已回退到CSV导出');\n            ElMessage.warning('Excel导出失败，已回退到CSV导出');\n          }\n        } catch (exportError) {\n          console.error('导出Excel时发生错误:', exportError);\n          ElMessage.error('导出Excel失败: ' + exportError.message);\n        }\n      } catch (error) {\n        console.error('导出过程中发生错误:', error);\n        ElMessage.error('导出失败: ' + error.message);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 图片预览相关\n    const showViewer = ref(false);\n    const previewImages = ref([]);\n    const previewIndex = ref(0);\n\n    // 预览照片\n    const previewPhoto = (paths, index) => {\n      // 确保paths是数组\n      const photoArray = Array.isArray(paths) ? paths : [paths];\n      previewImages.value = photoArray.map(path => `${baseUrl}${path}`);\n      previewIndex.value = index || 0;\n      showViewer.value = true;\n    };\n\n    // 关闭预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchWasteTypes();\n      await fetchRecords();\n    });\n\n    // 获取废物类型列表\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('Error fetching waste types:', error);\n        ElMessage.error('获取废物类型列表失败');\n      }\n    };\n    const fetchUnitName = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n    const fetchRecords = async (isLoadMore = false) => {\n      if (!isLoadMore) {\n        loading.value = true;\n        page.value = 1;\n        records.value = [];\n      } else {\n        loadingMore.value = true;\n      }\n      try {\n        // 基本参数\n        const params = {\n          page: page.value,\n          pageSize: pageSize.value\n        };\n\n        // 添加筛选参数\n        if (filterForm.wasteTypeId) params.wasteTypeId = filterForm.wasteTypeId;\n        if (filterForm.minQuantity !== null) params.minQuantity = filterForm.minQuantity;\n        if (filterForm.maxQuantity !== null) params.maxQuantity = filterForm.maxQuantity;\n        if (filterForm.location) params.location = filterForm.location;\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\n          params.dateRange = JSON.stringify(filterForm.dateRange);\n        }\n\n        // 获取当前用户ID\n        const userId = auth.getUserId();\n        if (!userId) {\n          throw new Error('用户未登录');\n        }\n\n        // 使用用户ID获取记录\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecordsByUser}/${userId}`, {\n          params\n        });\n\n        // 确保响应数据包含records字段，并且是一个数组\n        if (response.data && Array.isArray(response.data.records)) {\n          if (isLoadMore) {\n            records.value = [...records.value, ...response.data.records];\n          } else {\n            records.value = response.data.records;\n          }\n          hasMore.value = !!response.data.hasMore;\n        } else {\n          console.error('Invalid response format:', response.data);\n          records.value = [];\n          hasMore.value = false;\n          ElMessage.error('获取废物记录失败：数据格式错误');\n        }\n      } catch (error) {\n        console.error('Error fetching records:', error);\n        records.value = [];\n        hasMore.value = false;\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n        loadingMore.value = false;\n      }\n    };\n\n    // 处理滚动加载更多\n    const handleScroll = async e => {\n      // 修复解构赋值问题，确保e.target存在且包含所需属性\n      if (!e || !e.target) return;\n      const scrollHeight = e.target.scrollHeight || 0;\n      const scrollTop = e.target.scrollTop || 0;\n      const clientHeight = e.target.clientHeight || 0;\n\n      // 当滚动到底部时加载更多\n      if (scrollHeight - scrollTop - clientHeight < 50 && hasMore.value && !loadingMore.value) {\n        page.value++;\n        await fetchRecords(true);\n      }\n    };\n    return {\n      records,\n      filteredRecords,\n      loading,\n      unitName,\n      wasteTypes,\n      isAdmin,\n      isUnitAdmin,\n      parseFormattedDateTime,\n      refreshRecords,\n      goBack,\n      goHome,\n      goToUserManagement,\n      addNewRecord,\n      editRecord,\n      canEdit,\n      confirmDelete,\n      apiConfig,\n      // 筛选相关\n      showFilterPanel,\n      filterForm,\n      applyFilter,\n      resetFilter,\n      // 导出相关\n      exportRecords,\n      // 图片预览相关\n      showViewer,\n      previewImages,\n      previewIndex,\n      previewPhoto,\n      closeViewer,\n      handleScroll,\n      // 照片路径解析\n      parsePhotoPath,\n      baseUrl,\n      // 分页相关\n      page,\n      pageSize,\n      hasMore,\n      loadingMore\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","reactive","useRouter","ElMessage","ElMessageBox","ElImageViewer","httpService","apiConfig","ArrowLeft","HomeFilled","Refresh","Plus","User","ArrowDown","ArrowUp","Download","Loading","exportToExcel","prepareImageExportData","auth","name","components","props","unitId","type","String","Number","required","setup","router","records","loading","unitName","wasteTypes","showFilterPanel","baseUrl","baseURL","parsePhotoPath","path","startsWith","endsWith","JSON","parse","error","console","page","pageSize","hasMore","loadingMore","filterForm","dateRange","wasteTypeId","minQuantity","maxQuantity","location","filteredRecords","value","Array","isArray","filter","record","waste_type_id","parseFloat","quantity","toLowerCase","includes","length","startDate","Date","endDate","setHours","recordDate","collection_start_time","isAdmin","isUnitAdmin","parseFormattedDateTime","dateTimeStr","date","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","refreshRecords","fetchRecords","success","goBack","getUnitId","push","goHome","goToUserManagement","addNewRecord","editRecord","recordId","canEdit","unit_id","parseInt","userId","getUserId","creator_id","confirmDelete","confirm","confirmButtonText","cancelButtonText","then","delete","endpoints","wasteRecords","id","catch","info","applyFilter","resetFilter","exportRecords","log","recordsToExport","warning","exportBaseUrl","window","origin","exportData","map","unit_name","waste_type_name","toLocaleString","created_at","creator_name","imageData","Object","keys","fileName","headers","text","field","result","exportError","message","showViewer","previewImages","previewIndex","previewPhoto","paths","index","photoArray","closeViewer","fetchUnitName","fetchWasteTypes","response","get","data","units","unit","find","u","isLoadMore","params","stringify","Error","wasteRecordsByUser","handleScroll","e","target","scrollHeight","scrollTop","clientHeight"],"sources":["F:\\Project\\Hazardous-waste-management-system\\frontend\\src\\views\\RecordsList.vue"],"sourcesContent":["<template>\n  <div class=\"records-container\">\n    <div class=\"header\">\n      <div class=\"back-button\" @click=\"goBack\">\n        <el-icon><arrow-left /></el-icon> 返回填报\n      </div>\n      <h1>废物记录查看</h1>\n      <div class=\"home-link\" @click=\"goHome\" v-if=\"isAdmin\">\n        首页 <el-icon><home-filled /></el-icon>\n      </div>\n      <div v-else></div>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"unit-info\">\n        <h2>{{ unitName }} - 危险废物记录</h2>\n      </div>\n      \n      <div class=\"actions\">\n        <el-button type=\"primary\" @click=\"addNewRecord\">\n          <el-icon><plus /></el-icon> 新增填报\n        </el-button>\n        <el-button type=\"success\" @click=\"goToUserManagement\" v-if=\"isAdmin || isUnitAdmin\">\n          <el-icon><user /></el-icon> 人员管理\n        </el-button>\n        <el-button @click=\"refreshRecords\">\n          <el-icon><refresh /></el-icon> 刷新\n        </el-button>\n        <el-button type=\"primary\" @click=\"exportRecords\" :loading=\"loading\">\n          <el-icon><download /></el-icon> 导出记录\n        </el-button>\n      </div>\n      \n      <!-- 筛选面板 -->\n      <el-card class=\"filter-card\">\n        <div class=\"filter-header\">\n          <h3>筛选条件</h3>\n          <el-button type=\"primary\" link @click=\"showFilterPanel = !showFilterPanel\">\n            {{ showFilterPanel ? '收起' : '展开' }} \n            <el-icon v-if=\"!showFilterPanel\"><arrow-down /></el-icon>\n            <el-icon v-else><arrow-up /></el-icon>\n          </el-button>\n        </div>\n        \n        <div v-show=\"showFilterPanel\" class=\"filter-form-container\">\n          <el-form :model=\"filterForm\" label-width=\"100px\" class=\"filter-form\">\n            <el-row :gutter=\"20\">\n              <!-- 收集时间范围 -->\n              <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n                <el-form-item label=\"收集时间\">\n                  <el-date-picker\n                    v-model=\"filterForm.dateRange\"\n                    type=\"daterange\"\n                    range-separator=\"至\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\"\n                    format=\"YYYY-MM-DD\"\n                    value-format=\"YYYY-MM-DD\"\n                    style=\"width: 100%\"\n                  />\n                </el-form-item>\n              </el-col>\n              \n              <!-- 废物类型 -->\n              <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n                <el-form-item label=\"废物类型\">\n                  <el-select v-model=\"filterForm.wasteTypeId\" placeholder=\"选择废物类型\" style=\"width: 100%\" clearable>\n                    <el-option \n                      v-for=\"type in wasteTypes\" \n                      :key=\"type.id\" \n                      :label=\"type.name\" \n                      :value=\"type.id\" \n                    />\n                  </el-select>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            \n            <el-row :gutter=\"20\">\n              <!-- 数量范围 -->\n              <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n                <el-form-item label=\"数量范围(吨)\">\n                  <div class=\"quantity-range\">\n                    <el-input-number \n                      v-model=\"filterForm.minQuantity\" \n                      :min=\"0\"\n                      :precision=\"3\"\n                      :step=\"0.001\"\n                      placeholder=\"最小值\"\n                      style=\"width: 48%\"\n                    />\n                    <span class=\"range-separator\">至</span>\n                    <el-input-number \n                      v-model=\"filterForm.maxQuantity\" \n                      :min=\"filterForm.minQuantity || 0\"\n                      :precision=\"3\"\n                      :step=\"0.001\"\n                      placeholder=\"最大值\"\n                      style=\"width: 48%\"\n                    />\n                  </div>\n                </el-form-item>\n              </el-col>\n              \n              <!-- 产生地点 -->\n              <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n                <el-form-item label=\"产生地点\">\n                  <el-input \n                    v-model=\"filterForm.location\" \n                    placeholder=\"输入地点关键词搜索\" \n                    clearable\n                  />\n                </el-form-item>\n              </el-col>\n            </el-row>\n            \n            <div class=\"filter-actions\">\n              <el-button type=\"primary\" @click=\"applyFilter\">筛选</el-button>\n              <el-button @click=\"resetFilter\">重置</el-button>\n            </div>\n          </el-form>\n        </div>\n      </el-card>\n      \n      <div class=\"records-wrapper\">\n        <el-card class=\"records-card\">\n          <div class=\"card-header\">\n            <h3>废物记录列表</h3>\n            <div class=\"card-actions\">\n              <el-button type=\"warning\" @click=\"exportRecords\">\n                <el-icon><download /></el-icon> 导出记录\n              </el-button>\n            </div>\n          </div>\n          \n          <el-table \n            :data=\"filteredRecords\" \n            style=\"width: 100%\" \n            border \n            v-loading=\"loading\"\n            stripe\n            class=\"responsive-table\"\n            height=\"500\"\n            @scroll=\"handleScroll\"\n          >\n            <el-table-column prop=\"waste_type_name\" label=\"废物类型\" min-width=\"110\" />\n            <el-table-column prop=\"location\" label=\"产生地点\" min-width=\"120\" />\n            <el-table-column label=\"收集开始时间\" min-width=\"160\">\n              <template #default=\"scope\">\n                {{ parseFormattedDateTime(scope.row.collection_start_time) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"数量(吨)\" min-width=\"100\">\n              <template #default=\"scope\">\n                {{ parseFloat(scope.row.quantity).toFixed(3) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"记录时间\" min-width=\"160\" class=\"mobile-hidden\">\n              <template #default=\"scope\">\n                {{ parseFormattedDateTime(scope.row.created_at) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"汇报人\" min-width=\"100\" class=\"mobile-hidden\">\n              <template #default=\"scope\">\n                {{ scope.row.creator_name || '未知' }}\n              </template>\n            </el-table-column>\n            <el-table-column\n              label=\"现场照片（清理前）\"\n              width=\"120\"\n              align=\"center\"\n            >\n              <template #default=\"scope\">\n                <div v-if=\"scope.row.photo_path_before\" class=\"photo-preview\">\n                  <!-- 多张照片显示 -->\n                  <div \n                    v-for=\"(path, index) in parsePhotoPath(scope.row.photo_path_before)\" \n                    :key=\"index\"\n                    class=\"photo-thumbnail-container\"\n                    @click=\"previewPhoto(parsePhotoPath(scope.row.photo_path_before), index)\"\n                  >\n                    <el-image\n                      style=\"width: 50px; height: 50px\"\n                      :src=\"`${baseUrl}${path}`\"\n                      fit=\"cover\"\n                    ></el-image>\n                  </div>\n                  <div v-if=\"parsePhotoPath(scope.row.photo_path_before).length > 1\" class=\"photo-count\">\n                    {{ parsePhotoPath(scope.row.photo_path_before).length }}张\n                  </div>\n                </div>\n                <span v-else>无</span>\n              </template>\n            </el-table-column>\n            <el-table-column\n              label=\"现场照片（清理后）\"\n              width=\"120\"\n              align=\"center\"\n            >\n              <template #default=\"scope\">\n                <div v-if=\"scope.row.photo_path_after\" class=\"photo-preview\">\n                  <!-- 多张照片显示 -->\n                  <div \n                    v-for=\"(path, index) in parsePhotoPath(scope.row.photo_path_after)\" \n                    :key=\"index\"\n                    class=\"photo-thumbnail-container\"\n                    @click=\"previewPhoto(parsePhotoPath(scope.row.photo_path_after), index)\"\n                  >\n                    <el-image\n                      style=\"width: 50px; height: 50px\"\n                      :src=\"`${baseUrl}${path}`\"\n                      fit=\"cover\"\n                    ></el-image>\n                  </div>\n                  <div v-if=\"parsePhotoPath(scope.row.photo_path_after).length > 1\" class=\"photo-count\">\n                    {{ parsePhotoPath(scope.row.photo_path_after).length }}张\n                  </div>\n                </div>\n                <span v-else>无</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" min-width=\"70\" fixed=\"right\">\n              <template #default=\"scope\">\n                <div class=\"operation-buttons\">\n                  <el-button \n                    type=\"primary\" \n                    size=\"small\" \n                    @click=\"editRecord(scope.row.id)\"\n                    text\n                    v-if=\"canEdit(scope.row)\"\n                  >\n                    编辑\n                  </el-button>\n                  <el-button \n                    type=\"danger\" \n                    size=\"small\" \n                    @click=\"confirmDelete(scope.row)\"\n                    text\n                    v-if=\"canEdit(scope.row)\"\n                  >\n                    删除\n                  </el-button>\n                </div>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div v-if=\"loadingMore\" class=\"loading-more\">\n            <el-icon class=\"loading\"><loading /></el-icon>\n            加载更多...\n          </div>\n          \n          <div class=\"empty-block\" v-if=\"records.length === 0 && !loading\">\n            <el-empty description=\"暂无废物记录\" />\n          </div>\n        </el-card>\n      </div>\n    </div>\n\n    <div class=\"footer\">\n      <p>&copy; 2025 危险废物管理系统</p>\n    </div>\n\n    <!-- 添加独立的图片预览组件 -->\n    <el-image-viewer\n      v-if=\"showViewer\"\n      :url-list=\"previewImages\"\n      :initial-index=\"previewIndex\"\n      @close=\"closeViewer\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, HomeFilled, Refresh, Plus, User, ArrowDown, ArrowUp, Download, Loading } from '@element-plus/icons-vue';\nimport { exportToExcel, prepareImageExportData } from '../utils/exportUtils';\nimport auth from '../store/auth';\n\nexport default {\n  name: 'RecordsList',\n  components: {\n    ArrowLeft,\n    HomeFilled,\n    Refresh,\n    Plus,\n    User,\n    ArrowDown,\n    ArrowUp,\n    Download,\n    ElImageViewer,\n    Loading\n  },\n  props: {\n    unitId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const showFilterPanel = ref(true);\n    \n    // 添加baseUrl定义\n    const baseUrl = apiConfig.baseURL;\n    \n    // 添加解析照片路径的函数\n    const parsePhotoPath = (path) => {\n      if (!path) return [];\n      \n      try {\n        // 尝试解析为JSON\n        if (path.startsWith('[') && path.endsWith(']')) {\n          return JSON.parse(path);\n        }\n        // 如果不是JSON格式，则将其作为单个路径返回\n        return [path];\n      } catch (error) {\n        console.error('解析照片路径失败:', error);\n        // 如果解析失败，将其作为单个路径返回\n        return [path];\n      }\n    };\n    \n    // 添加分页相关的响应式变量\n    const page = ref(1);\n    const pageSize = ref(20);\n    const hasMore = ref(true);\n    const loadingMore = ref(false);\n    \n    // 筛选表单\n    const filterForm = reactive({\n      dateRange: null,\n      wasteTypeId: null,\n      minQuantity: null,\n      maxQuantity: null,\n      location: ''\n    });\n    \n    // 过滤后的记录\n    const filteredRecords = computed(() => {\n      if (!records.value || !Array.isArray(records.value)) {\n        return [];\n      }\n      \n      return records.value.filter(record => {\n        // 检查废物类型\n        if (filterForm.wasteTypeId && record.waste_type_id !== filterForm.wasteTypeId) {\n          return false;\n        }\n        \n        // 检查数量范围\n        if (filterForm.minQuantity !== null && parseFloat(record.quantity) < filterForm.minQuantity) {\n          return false;\n        }\n        if (filterForm.maxQuantity !== null && parseFloat(record.quantity) > filterForm.maxQuantity) {\n          return false;\n        }\n        \n        // 检查地点关键词\n        if (filterForm.location && !record.location.toLowerCase().includes(filterForm.location.toLowerCase())) {\n          return false;\n        }\n        \n        // 检查日期范围\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\n          const startDate = new Date(filterForm.dateRange[0]);\n          const endDate = new Date(filterForm.dateRange[1]);\n          endDate.setHours(23, 59, 59); // 设置为当天结束时间\n          \n          const recordDate = new Date(record.collection_start_time);\n          if (recordDate < startDate || recordDate > endDate) {\n            return false;\n          }\n        }\n        \n        return true;\n      });\n    });\n    \n    // 判断是否为管理员\n    const isAdmin = computed(() => {\n      return auth.isAdmin();\n    });\n    \n    // 判断是否为单位管理员\n    const isUnitAdmin = computed(() => {\n      return auth.isUnitAdmin();\n    });\n    \n    // 格式化日期时间\n    const parseFormattedDateTime = (dateTimeStr) => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    };\n    \n    // 刷新记录\n    const refreshRecords = async () => {\n      await fetchRecords();\n      ElMessage.success('记录已刷新');\n    };\n    \n    // 返回填报页面\n    const goBack = () => {\n      // 获取当前用户的单位ID\n      const unitId = auth.getUnitId();\n      if (unitId) {\n        router.push(`/unit/${unitId}`);\n      } else {\n        // 如果没有单位ID，则返回首页\n        router.push('/');\n      }\n    };\n    \n    // 返回首页\n    const goHome = () => {\n      router.push('/');\n    };\n    \n    // 前往人员管理\n    const goToUserManagement = () => {\n      router.push(`/user-management`);\n    };\n    \n    // 添加新记录\n    const addNewRecord = () => {\n      router.push(`/unit/${props.unitId}`);\n    };\n    \n    // 编辑记录\n    const editRecord = (recordId) => {\n      router.push(`/record/${recordId}`);\n    };\n    \n    // 判断是否可以编辑记录\n    const canEdit = (record) => {\n      if (!record) return false;\n      \n      // 超级管理员可以编辑所有记录\n      if (isAdmin.value) return true;\n      \n      // 单位管理员可以编辑本单位的记录\n      const unitId = auth.getUnitId();\n      if (isUnitAdmin.value && unitId && record.unit_id === parseInt(unitId)) return true;\n      \n      // 普通用户只能编辑自己创建的记录\n      const userId = auth.getUserId();\n      return userId && record.creator_id === parseInt(userId);\n    };\n    \n    // 确认删除\n    const confirmDelete = (record) => {\n      ElMessageBox.confirm(\n        `确定要删除这条废物记录吗？此操作不可逆。`,\n        '删除确认',\n        {\n          confirmButtonText: '确定删除',\n          cancelButtonText: '取消',\n          type: 'warning',\n        }\n      )\n        .then(async () => {\n          try {\n            await httpService.delete(`${apiConfig.endpoints.wasteRecords}/${record.id}`);\n            ElMessage.success('记录已成功删除');\n            await fetchRecords(); // 重新加载记录\n          } catch (error) {\n            console.error('删除记录失败:', error);\n            ElMessage.error('删除记录失败，请重试');\n          }\n        })\n        .catch(() => {\n          ElMessage.info('已取消删除');\n        });\n    };\n    \n    // 应用筛选\n    const applyFilter = async () => {\n      try {\n        // 重置分页\n        page.value = 1;\n        \n        // 重新获取记录\n        await fetchRecords();\n        \n        ElMessage.success('筛选条件已应用');\n      } catch (error) {\n        console.error('应用筛选失败:', error);\n        ElMessage.error('应用筛选失败');\n      }\n    };\n    \n    // 重置筛选\n    const resetFilter = async () => {\n      filterForm.dateRange = null;\n      filterForm.wasteTypeId = null;\n      filterForm.minQuantity = null;\n      filterForm.maxQuantity = null;\n      filterForm.location = '';\n      \n      // 重置分页\n      page.value = 1;\n      \n      // 重新获取记录\n      await fetchRecords();\n      \n      ElMessage.success('筛选条件已重置');\n    };\n    \n    // 导出记录\n    const exportRecords = async () => {\n      try {\n        loading.value = true;\n        console.log('开始导出记录...');\n        \n        // 获取要导出的记录\n        const recordsToExport = filteredRecords.value;\n        \n        console.log(`导出记录数量: ${recordsToExport.length}`);\n        \n        if (recordsToExport.length === 0) {\n          ElMessage.warning('没有可导出的记录');\n          loading.value = false;\n          return;\n        }\n        \n        // 设置导出基础URL\n        const exportBaseUrl = window.location.origin;\n        console.log('导出基础URL:', exportBaseUrl);\n        \n        // 准备导出数据\n        const exportData = recordsToExport.map(record => ({\n          '单位': record.unit_name || '',\n          '废物类型': record.waste_type_name || '',\n          '收集地点': record.location || '',\n          '收集时间': record.collection_start_time ? new Date(record.collection_start_time).toLocaleString() : '',\n          '数量(kg)': record.quantity || 0,\n          '记录时间': record.created_at ? new Date(record.created_at).toLocaleString() : '',\n          '汇报人': record.creator_name || '未知',\n          '清理前照片': '',  // 这里留空，图片会通过imageData添加\n          '清理后照片': ''   // 这里留空，图片会通过imageData添加\n        }));\n        \n        console.log('导出数据准备完成');\n        \n        // 准备图片数据\n        console.log('准备图片数据...');\n        // 使用正确的基础URL，确保能够访问到图片\n        const imageData = await prepareImageExportData(recordsToExport, baseUrl);\n        console.log('图片数据准备完成，数量:', Object.keys(imageData).length);\n        \n        // 导出文件\n        const fileName = `${unitName.value}危险废物记录`;\n        const headers = [\n          { text: '单位', field: '单位' },\n          { text: '废物类型', field: '废物类型' },\n          { text: '收集地点', field: '收集地点' },\n          { text: '收集时间', field: '收集时间' },\n          { text: '数量(kg)', field: '数量(kg)' },\n          { text: '记录时间', field: '记录时间' },\n          { text: '汇报人', field: '汇报人' },\n          { text: '清理前照片', field: '清理前照片' },\n          { text: '清理后照片', field: '清理后照片' }\n        ];\n        \n        console.log('开始导出Excel文件...');\n        try {\n          const result = await exportToExcel(exportData, fileName, headers, imageData);\n          \n          if (result) {\n            console.log('导出成功');\n            ElMessage.success('导出成功');\n          } else {\n            console.log('导出失败，已回退到CSV导出');\n            ElMessage.warning('Excel导出失败，已回退到CSV导出');\n          }\n        } catch (exportError) {\n          console.error('导出Excel时发生错误:', exportError);\n          ElMessage.error('导出Excel失败: ' + exportError.message);\n        }\n      } catch (error) {\n        console.error('导出过程中发生错误:', error);\n        ElMessage.error('导出失败: ' + error.message);\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // 图片预览相关\n    const showViewer = ref(false);\n    const previewImages = ref([]);\n    const previewIndex = ref(0);\n    \n    // 预览照片\n    const previewPhoto = (paths, index) => {\n      // 确保paths是数组\n      const photoArray = Array.isArray(paths) ? paths : [paths];\n      previewImages.value = photoArray.map(path => `${baseUrl}${path}`);\n      previewIndex.value = index || 0;\n      showViewer.value = true;\n    };\n    \n    // 关闭预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchWasteTypes();\n      await fetchRecords();\n    });\n\n    // 获取废物类型列表\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('Error fetching waste types:', error);\n        ElMessage.error('获取废物类型列表失败');\n      }\n    };\n    \n    const fetchUnitName = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n\n    const fetchRecords = async (isLoadMore = false) => {\n      if (!isLoadMore) {\n        loading.value = true;\n        page.value = 1;\n        records.value = [];\n      } else {\n        loadingMore.value = true;\n      }\n      \n      try {\n        // 基本参数\n        const params = {\n          page: page.value,\n          pageSize: pageSize.value\n        };\n        \n        // 添加筛选参数\n        if (filterForm.wasteTypeId) params.wasteTypeId = filterForm.wasteTypeId;\n        if (filterForm.minQuantity !== null) params.minQuantity = filterForm.minQuantity;\n        if (filterForm.maxQuantity !== null) params.maxQuantity = filterForm.maxQuantity;\n        if (filterForm.location) params.location = filterForm.location;\n        if (filterForm.dateRange && filterForm.dateRange.length === 2) {\n          params.dateRange = JSON.stringify(filterForm.dateRange);\n        }\n        \n        // 获取当前用户ID\n        const userId = auth.getUserId();\n        if (!userId) {\n          throw new Error('用户未登录');\n        }\n        \n        // 使用用户ID获取记录\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecordsByUser}/${userId}`, { params });\n        \n        // 确保响应数据包含records字段，并且是一个数组\n        if (response.data && Array.isArray(response.data.records)) {\n          if (isLoadMore) {\n            records.value = [...records.value, ...response.data.records];\n          } else {\n            records.value = response.data.records;\n          }\n          \n          hasMore.value = !!response.data.hasMore;\n        } else {\n          console.error('Invalid response format:', response.data);\n          records.value = [];\n          hasMore.value = false;\n          ElMessage.error('获取废物记录失败：数据格式错误');\n        }\n      } catch (error) {\n        console.error('Error fetching records:', error);\n        records.value = [];\n        hasMore.value = false;\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n        loadingMore.value = false;\n      }\n    };\n    \n    // 处理滚动加载更多\n    const handleScroll = async (e) => {\n      // 修复解构赋值问题，确保e.target存在且包含所需属性\n      if (!e || !e.target) return;\n      \n      const scrollHeight = e.target.scrollHeight || 0;\n      const scrollTop = e.target.scrollTop || 0;\n      const clientHeight = e.target.clientHeight || 0;\n      \n      // 当滚动到底部时加载更多\n      if (scrollHeight - scrollTop - clientHeight < 50 && hasMore.value && !loadingMore.value) {\n        page.value++;\n        await fetchRecords(true);\n      }\n    };\n\n    return {\n      records,\n      filteredRecords,\n      loading,\n      unitName,\n      wasteTypes,\n      isAdmin,\n      isUnitAdmin,\n      parseFormattedDateTime,\n      refreshRecords,\n      goBack,\n      goHome,\n      goToUserManagement,\n      addNewRecord,\n      editRecord,\n      canEdit,\n      confirmDelete,\n      apiConfig,\n      // 筛选相关\n      showFilterPanel,\n      filterForm,\n      applyFilter,\n      resetFilter,\n      // 导出相关\n      exportRecords,\n      // 图片预览相关\n      showViewer,\n      previewImages,\n      previewIndex,\n      previewPhoto,\n      closeViewer,\n      handleScroll,\n      // 照片路径解析\n      parsePhotoPath,\n      baseUrl,\n      // 分页相关\n      page,\n      pageSize,\n      hasMore,\n      loadingMore\n    };\n  }\n};\n</script>\n\n<style scoped>\n.records-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.header {\n  background-color: #409EFF;\n  color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.back-button, .home-link {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 16px;\n}\n\n.content {\n  flex: 1;\n  padding: 30px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.unit-info {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.unit-info h2 {\n  color: #333;\n  margin: 0;\n}\n\n.actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20px;\n  gap: 10px;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.filter-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.filter-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.filter-form-container {\n  transition: all 0.3s ease;\n}\n\n.filter-form {\n  margin-top: 15px;\n}\n\n.quantity-range {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.range-separator {\n  margin: 0 5px;\n}\n\n.filter-actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n  gap: 10px;\n}\n\n.records-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.card-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.card-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.record-image {\n  width: 80px;\n  height: 80px;\n  border-radius: 4px;\n  object-fit: cover;\n}\n\n.photo-thumbnail-container {\n  cursor: pointer;\n  margin-bottom: 2px;\n}\n\n.photo-count {\n  font-size: 12px;\n  color: #909399;\n  text-align: center;\n  margin-top: 2px;\n}\n\n.photo-preview {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.image-error {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  background-color: #f5f7fa;\n  color: #909399;\n  font-size: 20px;\n}\n\n.operation-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n}\n\n.operation-buttons .el-button {\n  width: 80%;\n  margin-left: 0;\n  margin-right: 0;\n  text-align: center;\n  justify-content: center;\n}\n\n.footer {\n  background-color: #f5f7fa;\n  padding: 15px;\n  text-align: center;\n  color: #606266;\n}\n\n.loading-more {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  color: #909399;\n}\n\n.loading {\n  animation: rotating 2s linear infinite;\n  margin-right: 5px;\n}\n\n@keyframes rotating {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.empty-block {\n  padding: 30px;\n  text-align: center;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .header {\n    flex-direction: column;\n    gap: 10px;\n    text-align: center;\n  }\n  \n  .content {\n    padding: 15px;\n  }\n  \n  .card-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .card-actions {\n    width: 100%;\n    justify-content: space-between;\n  }\n  \n  .mobile-hidden {\n    display: none;\n  }\n  \n  .operation-buttons {\n    flex-direction: column;\n    justify-content: center;\n  }\n  \n  .action-buttons {\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  \n  .action-buttons .el-button {\n    flex: 1;\n    justify-content: center;\n  }\n  \n  .filter-header {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 10px;\n  }\n  \n  .header-left {\n    width: 100%;\n  }\n  \n  .action-buttons {\n    width: 100%;\n    justify-content: space-between;\n  }\n  \n  .action-buttons .el-button {\n    flex: 1;\n    justify-content: center;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}