{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport { ArrowLeft, Home, Refresh, PictureFailed, Plus, User } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\n\n// 判断是否为JSON格式的照片路径\nconst isJsonPhotoPath = path => {\n  try {\n    const parsed = JSON.parse(path);\n    return Array.isArray(parsed);\n  } catch (error) {\n    return false;\n  }\n};\n\n// 解析JSON格式的照片路径\nconst parsePhotoPath = path => {\n  try {\n    return JSON.parse(path);\n  } catch (error) {\n    return [path];\n  }\n};\nexport default {\n  name: 'RecordsList',\n  components: {\n    ArrowLeft,\n    Home,\n    Refresh,\n    PictureFailed,\n    Plus,\n    User\n  },\n  props: {\n    unitId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const unitName = ref('');\n\n    // 检查用户是否为超级管理员\n    const isAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    // 检查用户是否为单位管理员\n    const isUnitAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 2;\n    });\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchRecords();\n    });\n    const fetchUnitName = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/units`);\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n    const fetchRecords = async () => {\n      loading.value = true;\n      try {\n        // 使用用户ID获取相应权限的记录\n        const response = await axios.get(`http://localhost:3000/api/waste-records/user/${auth.state.user.id}`);\n        records.value = response.data;\n\n        // 格式化日期\n        records.value.forEach(record => {\n          record.created_at = formatDateTime(record.created_at);\n          record.collection_start_time = formatDateTime(record.collection_start_time);\n        });\n      } catch (error) {\n        console.error('获取废物记录失败:', error);\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const formatDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    };\n    const refreshRecords = () => {\n      fetchRecords();\n    };\n    const goBack = () => {\n      router.push({\n        name: 'WasteForm',\n        params: {\n          id: props.unitId\n        }\n      });\n    };\n\n    // 返回首页\n    const goHome = () => {\n      // 只有超级管理员才能回到单位选择页面\n      if (isAdmin.value) {\n        router.push('/');\n      }\n    };\n\n    // 前往人员管理页面\n    const goToUserManagement = () => {\n      router.push('/user-management');\n    };\n\n    // 添加新的废物记录\n    const addNewRecord = () => {\n      router.push('/record/new');\n    };\n\n    // 编辑现有记录\n    const editRecord = recordId => {\n      router.push(`/record/${recordId}`);\n    };\n\n    // 检查是否可以编辑记录\n    // 超级管理员可以编辑所有记录\n    // 单位管理员可以编辑本单位所有记录\n    // 普通员工只能编辑自己创建的记录\n    const canEdit = record => {\n      if (!auth.state.isLoggedIn) return false;\n      if (auth.state.user.role_id === 3) return true; // 超级管理员\n\n      if (auth.state.user.role_id === 2 && auth.state.user.unit_id === record.unit_id) return true; // 单位管理员\n\n      // 员工只能编辑自己创建的记录\n      // 注意: creator_id 可能为 null （旧记录），如果为 null 我们允许编辑\n      return auth.state.user.unit_id === record.unit_id && (record.creator_id === null || record.creator_id === auth.state.user.id);\n    };\n\n    // 确认删除记录\n    const confirmDelete = record => {\n      ElMessageBox.confirm('此操作将永久删除该记录，是否继续？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await axios.delete(`http://localhost:3000/api/waste-records/${record.id}`);\n          ElMessage.success('删除成功');\n          await fetchRecords();\n        } catch (error) {\n          console.error('删除记录失败:', error);\n          ElMessage.error('删除记录失败');\n        }\n      }).catch(() => {\n        ElMessage.info('已取消删除');\n      });\n    };\n    return {\n      records,\n      loading,\n      unitName,\n      isAdmin,\n      isUnitAdmin,\n      isJsonPhotoPath,\n      parsePhotoPath,\n      refreshRecords,\n      goBack,\n      goHome,\n      goToUserManagement,\n      addNewRecord,\n      editRecord,\n      canEdit,\n      confirmDelete\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","ElMessage","ElMessageBox","axios","ArrowLeft","Home","Refresh","PictureFailed","Plus","User","auth","isJsonPhotoPath","path","parsed","JSON","parse","Array","isArray","error","parsePhotoPath","name","components","props","unitId","type","String","Number","required","setup","router","records","loading","unitName","isAdmin","state","isLoggedIn","user","role_id","isUnitAdmin","fetchUnitName","fetchRecords","response","get","unit","data","find","u","id","parseInt","value","console","forEach","record","created_at","formatDateTime","collection_start_time","dateTimeStr","date","Date","toLocaleString","year","month","day","hour","minute","second","hour12","refreshRecords","goBack","push","params","goHome","goToUserManagement","addNewRecord","editRecord","recordId","canEdit","unit_id","creator_id","confirmDelete","confirm","confirmButtonText","cancelButtonText","then","delete","success","catch","info"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\RecordsList.vue"],"sourcesContent":["<template>\r\n  <div class=\"records-container\">\r\n    <div class=\"header\">\r\n      <div class=\"back-button\" @click=\"goBack\">\r\n        <el-icon><arrow-left /></el-icon> 返回填报\r\n      </div>\r\n      <h1>废物记录查看</h1>\r\n      <div class=\"home-link\" @click=\"goHome\" v-if=\"isAdmin\">\r\n        首页 <el-icon><home /></el-icon>\r\n      </div>\r\n      <div v-else></div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"unit-info\">\r\n        <h2>{{ unitName }} - 危险废物记录</h2>\r\n      </div>\r\n      \r\n      <div class=\"records-wrapper\">\r\n        <el-card class=\"records-card\">\r\n          <div class=\"card-header\">\r\n          <h3>废物记录列表</h3>\r\n          <div class=\"card-actions\">\r\n          <el-button type=\"primary\" @click=\"addNewRecord\">\r\n              <el-icon><plus /></el-icon> 新增填报\r\n          </el-button>\r\n          <el-button type=\"success\" @click=\"goToUserManagement\" v-if=\"isAdmin || isUnitAdmin\">\r\n              <el-icon><user /></el-icon> 人员管理\r\n          </el-button>\r\n          <el-button @click=\"refreshRecords\">\r\n            <el-icon><refresh /></el-icon> 刷新\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n          \r\n          <el-table \r\n            :data=\"records\" \r\n            style=\"width: 100%\" \r\n            border \r\n            v-loading=\"loading\"\r\n            stripe\r\n          >\r\n            <el-table-column prop=\"waste_type_name\" label=\"废物类型\" width=\"110\" />\r\n            <el-table-column prop=\"location\" label=\"产生地点\" />\r\n            <el-table-column prop=\"collection_start_time\" label=\"收集开始时间\" width=\"160\" />\r\n            <el-table-column prop=\"quantity\" label=\"数量(kg)\" width=\"100\" />\r\n            <el-table-column prop=\"created_at\" label=\"记录时间\" width=\"160\" />\r\n            <el-table-column label=\"现场照片\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <div v-if=\"scope.row.photo_path\">\r\n                  <template v-if=\"isJsonPhotoPath(scope.row.photo_path)\">\r\n                    <!-- 多张照片显示 -->\r\n                    <el-image \r\n                      v-for=\"(path, index) in parsePhotoPath(scope.row.photo_path)\" \r\n                      :key=\"index\"\r\n                      :src=\"`http://localhost:3000${path}`\"\r\n                      :preview-src-list=\"parsePhotoPath(scope.row.photo_path).map(p => `http://localhost:3000${p}`)\"\r\n                      fit=\"cover\"\r\n                      class=\"record-image\"\r\n                      :style=\"{ margin: index > 0 ? '2px 0 0 0' : '0' }\"\r\n                    >\r\n                      <template #error>\r\n                        <div class=\"image-error\">\r\n                          <el-icon><picture-failed /></el-icon>\r\n                        </div>\r\n                      </template>\r\n                    </el-image>\r\n                    <div v-if=\"parsePhotoPath(scope.row.photo_path).length > 1\" class=\"photo-count\">\r\n                      {{ parsePhotoPath(scope.row.photo_path).length }}张\r\n                    </div>\r\n                  </template>\r\n                  <template v-else>\r\n                    <!-- 单张照片显示 (兼容旧版本) -->\r\n                    <el-image \r\n                      :src=\"`http://localhost:3000${scope.row.photo_path}`\"\r\n                      :preview-src-list=\"[`http://localhost:3000${scope.row.photo_path}`]\"\r\n                      fit=\"cover\"\r\n                      class=\"record-image\"\r\n                    >\r\n                      <template #error>\r\n                        <div class=\"image-error\">\r\n                          <el-icon><picture-failed /></el-icon>\r\n                        </div>\r\n                      </template>\r\n                    </el-image>\r\n                  </template>\r\n                </div>\r\n                <span v-else>无照片</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"180\">\r\n              <template #default=\"scope\">\r\n                <el-button \r\n                  type=\"primary\" \r\n                  size=\"small\" \r\n                  @click=\"editRecord(scope.row.id)\"\r\n                  text\r\n                  v-if=\"canEdit(scope.row)\"\r\n                >\r\n                  编辑\r\n                </el-button>\r\n                <el-button \r\n                  type=\"danger\" \r\n                  size=\"small\" \r\n                  @click=\"confirmDelete(scope.row)\"\r\n                  text\r\n                  v-if=\"canEdit(scope.row)\"\r\n                >\r\n                  删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          \r\n          <div class=\"empty-block\" v-if=\"records.length === 0 && !loading\">\r\n            <el-empty description=\"暂无废物记录\" />\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport axios from 'axios';\r\nimport { ArrowLeft, Home, Refresh, PictureFailed, Plus, User } from '@element-plus/icons-vue';\r\nimport auth from '../store/auth';\r\n\r\n// 判断是否为JSON格式的照片路径\r\nconst isJsonPhotoPath = (path) => {\r\n  try {\r\n    const parsed = JSON.parse(path);\r\n    return Array.isArray(parsed);\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\n// 解析JSON格式的照片路径\r\nconst parsePhotoPath = (path) => {\r\n  try {\r\n    return JSON.parse(path);\r\n  } catch (error) {\r\n    return [path];\r\n  }\r\n};\r\n\r\nexport default {\r\n  name: 'RecordsList',\r\n  components: {\r\n    ArrowLeft,\r\n    Home,\r\n    Refresh,\r\n    PictureFailed,\r\n    Plus,\r\n    User\r\n  },\r\n  props: {\r\n    unitId: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const router = useRouter();\r\n    const records = ref([]);\r\n    const loading = ref(false);\r\n    const unitName = ref('');\r\n    \r\n    // 检查用户是否为超级管理员\r\n    const isAdmin = computed(() => {\r\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\r\n    });\r\n    \r\n    // 检查用户是否为单位管理员\r\n    const isUnitAdmin = computed(() => {\r\n      return auth.state.isLoggedIn && auth.state.user.role_id === 2;\r\n    });\r\n\r\n    onMounted(async () => {\r\n      await fetchUnitName();\r\n      await fetchRecords();\r\n    });\r\n\r\n    const fetchUnitName = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/api/units`);\r\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\r\n        if (unit) {\r\n          unitName.value = unit.name;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching unit name:', error);\r\n        ElMessage.error('获取单位信息失败');\r\n      }\r\n    };\r\n\r\n    const fetchRecords = async () => {\r\n      loading.value = true;\r\n      try {\r\n        // 使用用户ID获取相应权限的记录\r\n        const response = await axios.get(`http://localhost:3000/api/waste-records/user/${auth.state.user.id}`);\r\n        records.value = response.data;\r\n        \r\n        // 格式化日期\r\n        records.value.forEach(record => {\r\n          record.created_at = formatDateTime(record.created_at);\r\n          record.collection_start_time = formatDateTime(record.collection_start_time);\r\n        });\r\n      } catch (error) {\r\n        console.error('获取废物记录失败:', error);\r\n        ElMessage.error('获取废物记录失败');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    const formatDateTime = (dateTimeStr) => {\r\n      if (!dateTimeStr) return '';\r\n      const date = new Date(dateTimeStr);\r\n      return date.toLocaleString('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false\r\n      });\r\n    };\r\n\r\n    const refreshRecords = () => {\r\n      fetchRecords();\r\n    };\r\n\r\n    const goBack = () => {\r\n      router.push({ name: 'WasteForm', params: { id: props.unitId } });\r\n    };\r\n\r\n    // 返回首页\r\n    const goHome = () => {\r\n      // 只有超级管理员才能回到单位选择页面\r\n      if (isAdmin.value) {\r\n        router.push('/');\r\n      }\r\n    };\r\n\r\n    // 前往人员管理页面\r\n    const goToUserManagement = () => {\r\n      router.push('/user-management');\r\n    };\r\n\r\n    // 添加新的废物记录\r\n    const addNewRecord = () => {\r\n      router.push('/record/new');\r\n    };\r\n\r\n    // 编辑现有记录\r\n    const editRecord = (recordId) => {\r\n      router.push(`/record/${recordId}`);\r\n    };\r\n\r\n    // 检查是否可以编辑记录\r\n    // 超级管理员可以编辑所有记录\r\n    // 单位管理员可以编辑本单位所有记录\r\n    // 普通员工只能编辑自己创建的记录\r\n    const canEdit = (record) => {\r\n      if (!auth.state.isLoggedIn) return false;\r\n\r\n      if (auth.state.user.role_id === 3) return true; // 超级管理员\r\n      \r\n      if (auth.state.user.role_id === 2 && auth.state.user.unit_id === record.unit_id) return true; // 单位管理员\r\n      \r\n      // 员工只能编辑自己创建的记录\r\n      // 注意: creator_id 可能为 null （旧记录），如果为 null 我们允许编辑\r\n      return auth.state.user.unit_id === record.unit_id && \r\n             (record.creator_id === null || record.creator_id === auth.state.user.id);\r\n    };\r\n\r\n    // 确认删除记录\r\n    const confirmDelete = (record) => {\r\n      ElMessageBox.confirm(\r\n        '此操作将永久删除该记录，是否继续？',\r\n        '警告',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }\r\n      )\r\n        .then(async () => {\r\n          try {\r\n            await axios.delete(`http://localhost:3000/api/waste-records/${record.id}`);\r\n            ElMessage.success('删除成功');\r\n            await fetchRecords();\r\n          } catch (error) {\r\n            console.error('删除记录失败:', error);\r\n            ElMessage.error('删除记录失败');\r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage.info('已取消删除');\r\n        });\r\n    };\r\n\r\n    return {\r\n      records,\r\n      loading,\r\n      unitName,\r\n      isAdmin,\r\n      isUnitAdmin,\r\n      isJsonPhotoPath,\r\n      parsePhotoPath,\r\n      refreshRecords,\r\n      goBack,\r\n      goHome,\r\n      goToUserManagement,\r\n      addNewRecord,\r\n      editRecord,\r\n      canEdit,\r\n      confirmDelete\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.records-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.back-button, .home-link {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 30px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.unit-info {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.unit-info h2 {\r\n  color: #333;\r\n  border-bottom: 2px solid #409EFF;\r\n  display: inline-block;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.records-wrapper {\r\n  margin-top: 20px;\r\n}\r\n\r\n.records-card {\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header h3 {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.record-image {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: block;\r\n}\r\n\r\n.photo-count {\r\n  font-size: 12px;\r\n  color: #409EFF;\r\n  text-align: center;\r\n  margin-top: 2px;\r\n}\r\n\r\n.image-error {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: #f5f7fa;\r\n  color: #909399;\r\n}\r\n\r\n.empty-block {\r\n  margin: 20px 0;\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f5f5;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}