{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport { ArrowLeft, Home, Refresh, PictureFailed, Plus } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nexport default {\n  name: 'RecordsList',\n  components: {\n    ArrowLeft,\n    Home,\n    Refresh,\n    PictureFailed,\n    Plus\n  },\n  props: {\n    unitId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const unitName = ref('');\n\n    // 检查用户是否为超级管理员\n    const isAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchRecords();\n    });\n    const fetchUnitName = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/units`);\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n    const fetchRecords = async () => {\n      loading.value = true;\n      try {\n        // 使用用户ID获取相应权限的记录\n        const response = await axios.get(`http://localhost:3000/api/waste-records/user/${auth.state.user.id}`);\n        records.value = response.data;\n\n        // 格式化日期\n        records.value.forEach(record => {\n          record.created_at = formatDateTime(record.created_at);\n          record.collection_start_time = formatDateTime(record.collection_start_time);\n        });\n      } catch (error) {\n        console.error('获取废物记录失败:', error);\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const formatDateTime = dateTimeStr => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    };\n    const refreshRecords = () => {\n      fetchRecords();\n    };\n    const goBack = () => {\n      router.push({\n        name: 'WasteForm',\n        params: {\n          id: props.unitId\n        }\n      });\n    };\n\n    // 返回首页\n    const goHome = () => {\n      // 只有超级管理员才能回到单位选择页面\n      if (isAdmin.value) {\n        router.push('/');\n      }\n    };\n\n    // 添加新的废物记录\n    const addNewRecord = () => {\n      router.push('/record/new');\n    };\n\n    // 编辑现有记录\n    const editRecord = recordId => {\n      router.push(`/record/${recordId}`);\n    };\n\n    // 检查是否可以编辑记录\n    // 超级管理员可以编辑所有记录\n    // 单位管理员可以编辑本单位所有记录\n    // 普通员工只能编辑自己创建的记录\n    const canEdit = record => {\n      if (!auth.state.isLoggedIn) return false;\n      if (auth.state.user.role_id === 3) return true; // 超级管理员\n\n      if (auth.state.user.role_id === 2 && auth.state.user.unit_id === record.unit_id) return true; // 单位管理员\n\n      // 员工只能编辑自己创建的记录\n      // 注意: creator_id 可能为 null （旧记录），如果为 null 我们允许编辑\n      return auth.state.user.unit_id === record.unit_id && (record.creator_id === null || record.creator_id === auth.state.user.id);\n    };\n\n    // 确认删除记录\n    const confirmDelete = record => {\n      ElMessageBox.confirm('此操作将永久删除该记录，是否继续？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await axios.delete(`http://localhost:3000/api/waste-records/${record.id}`);\n          ElMessage.success('删除成功');\n          await fetchRecords();\n        } catch (error) {\n          console.error('删除记录失败:', error);\n          ElMessage.error('删除记录失败');\n        }\n      }).catch(() => {\n        ElMessage.info('已取消删除');\n      });\n    };\n    return {\n      records,\n      loading,\n      unitName,\n      isAdmin,\n      refreshRecords,\n      goBack,\n      goHome,\n      addNewRecord,\n      editRecord,\n      canEdit,\n      confirmDelete\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","ElMessage","ElMessageBox","axios","ArrowLeft","Home","Refresh","PictureFailed","Plus","auth","name","components","props","unitId","type","String","Number","required","setup","router","records","loading","unitName","isAdmin","state","isLoggedIn","user","role_id","fetchUnitName","fetchRecords","response","get","unit","data","find","u","id","parseInt","value","error","console","forEach","record","created_at","formatDateTime","collection_start_time","dateTimeStr","date","Date","toLocaleString","year","month","day","hour","minute","second","hour12","refreshRecords","goBack","push","params","goHome","addNewRecord","editRecord","recordId","canEdit","unit_id","creator_id","confirmDelete","confirm","confirmButtonText","cancelButtonText","then","delete","success","catch","info"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\RecordsList.vue"],"sourcesContent":["<template>\n  <div class=\"records-container\">\n    <div class=\"header\">\n      <div class=\"back-button\" @click=\"goBack\">\n        <el-icon><arrow-left /></el-icon> 返回填报\n      </div>\n      <h1>废物记录查看</h1>\n      <div class=\"home-link\" @click=\"goHome\" v-if=\"isAdmin\">\n        首页 <el-icon><home /></el-icon>\n      </div>\n      <div v-else></div>\n    </div>\n\n    <div class=\"content\">\n      <div class=\"unit-info\">\n        <h2>{{ unitName }} - 危险废物记录</h2>\n      </div>\n      \n      <div class=\"records-wrapper\">\n        <el-card class=\"records-card\">\n          <div class=\"card-header\">\n          <h3>废物记录列表</h3>\n          <div class=\"card-actions\">\n          <el-button type=\"primary\" @click=\"addNewRecord\">\n              <el-icon><plus /></el-icon> 新增填报\n              </el-button>\n          <el-button @click=\"refreshRecords\">\n            <el-icon><refresh /></el-icon> 刷新\n          </el-button>\n        </div>\n      </div>\n          \n          <el-table \n            :data=\"records\" \n            style=\"width: 100%\" \n            border \n            v-loading=\"loading\"\n            stripe\n          >\n            <el-table-column prop=\"waste_type_name\" label=\"废物类型\" width=\"110\" />\n            <el-table-column prop=\"location\" label=\"产生地点\" />\n            <el-table-column prop=\"collection_start_time\" label=\"收集开始时间\" width=\"160\" />\n            <el-table-column prop=\"quantity\" label=\"数量(kg)\" width=\"100\" />\n            <el-table-column prop=\"created_at\" label=\"记录时间\" width=\"160\" />\n            <el-table-column label=\"现场照片\" width=\"100\">\n              <template #default=\"scope\">\n                <el-image \n                  v-if=\"scope.row.photo_path\"\n                  :src=\"`http://localhost:3000${scope.row.photo_path}`\"\n                  :preview-src-list=\"[`http://localhost:3000${scope.row.photo_path}`]\"\n                  fit=\"cover\"\n                  class=\"record-image\"\n                >\n                  <template #error>\n                    <div class=\"image-error\">\n                      <el-icon><picture-failed /></el-icon>\n                    </div>\n                  </template>\n                </el-image>\n                <span v-else>无照片</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"180\">\n              <template #default=\"scope\">\n                <el-button \n                  type=\"primary\" \n                  size=\"small\" \n                  @click=\"editRecord(scope.row.id)\"\n                  text\n                  v-if=\"canEdit(scope.row)\"\n                >\n                  编辑\n                </el-button>\n                <el-button \n                  type=\"danger\" \n                  size=\"small\" \n                  @click=\"confirmDelete(scope.row)\"\n                  text\n                  v-if=\"canEdit(scope.row)\"\n                >\n                  删除\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"empty-block\" v-if=\"records.length === 0 && !loading\">\n            <el-empty description=\"暂无废物记录\" />\n          </div>\n        </el-card>\n      </div>\n    </div>\n\n    <div class=\"footer\">\n      <p>&copy; 2025 危险废物管理系统</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nimport { ArrowLeft, Home, Refresh, PictureFailed, Plus } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\n\nexport default {\n  name: 'RecordsList',\n  components: {\n    ArrowLeft,\n    Home,\n    Refresh,\n    PictureFailed,\n    Plus\n  },\n  props: {\n    unitId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const router = useRouter();\n    const records = ref([]);\n    const loading = ref(false);\n    const unitName = ref('');\n    \n    // 检查用户是否为超级管理员\n    const isAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    onMounted(async () => {\n      await fetchUnitName();\n      await fetchRecords();\n    });\n\n    const fetchUnitName = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/units`);\n        const unit = response.data.find(u => u.id === parseInt(props.unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('Error fetching unit name:', error);\n        ElMessage.error('获取单位信息失败');\n      }\n    };\n\n    const fetchRecords = async () => {\n      loading.value = true;\n      try {\n        // 使用用户ID获取相应权限的记录\n        const response = await axios.get(`http://localhost:3000/api/waste-records/user/${auth.state.user.id}`);\n        records.value = response.data;\n        \n        // 格式化日期\n        records.value.forEach(record => {\n          record.created_at = formatDateTime(record.created_at);\n          record.collection_start_time = formatDateTime(record.collection_start_time);\n        });\n      } catch (error) {\n        console.error('获取废物记录失败:', error);\n        ElMessage.error('获取废物记录失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const formatDateTime = (dateTimeStr) => {\n      if (!dateTimeStr) return '';\n      const date = new Date(dateTimeStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    };\n\n    const refreshRecords = () => {\n      fetchRecords();\n    };\n\n    const goBack = () => {\n      router.push({ name: 'WasteForm', params: { id: props.unitId } });\n    };\n\n    // 返回首页\n    const goHome = () => {\n      // 只有超级管理员才能回到单位选择页面\n      if (isAdmin.value) {\n        router.push('/');\n      }\n    };\n\n    // 添加新的废物记录\n    const addNewRecord = () => {\n      router.push('/record/new');\n    };\n\n    // 编辑现有记录\n    const editRecord = (recordId) => {\n      router.push(`/record/${recordId}`);\n    };\n\n    // 检查是否可以编辑记录\n    // 超级管理员可以编辑所有记录\n    // 单位管理员可以编辑本单位所有记录\n    // 普通员工只能编辑自己创建的记录\n    const canEdit = (record) => {\n      if (!auth.state.isLoggedIn) return false;\n\n      if (auth.state.user.role_id === 3) return true; // 超级管理员\n      \n      if (auth.state.user.role_id === 2 && auth.state.user.unit_id === record.unit_id) return true; // 单位管理员\n      \n      // 员工只能编辑自己创建的记录\n      // 注意: creator_id 可能为 null （旧记录），如果为 null 我们允许编辑\n      return auth.state.user.unit_id === record.unit_id && \n             (record.creator_id === null || record.creator_id === auth.state.user.id);\n    };\n\n    // 确认删除记录\n    const confirmDelete = (record) => {\n      ElMessageBox.confirm(\n        '此操作将永久删除该记录，是否继续？',\n        '警告',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        }\n      )\n        .then(async () => {\n          try {\n            await axios.delete(`http://localhost:3000/api/waste-records/${record.id}`);\n            ElMessage.success('删除成功');\n            await fetchRecords();\n          } catch (error) {\n            console.error('删除记录失败:', error);\n            ElMessage.error('删除记录失败');\n          }\n        })\n        .catch(() => {\n          ElMessage.info('已取消删除');\n        });\n    };\n\n    return {\n      records,\n      loading,\n      unitName,\n      isAdmin,\n      refreshRecords,\n      goBack,\n      goHome,\n      addNewRecord,\n      editRecord,\n      canEdit,\n      confirmDelete\n    };\n  }\n};\n</script>\n\n<style scoped>\n.records-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.header {\n  background-color: #409EFF;\n  color: white;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.back-button, .home-link {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n}\n\n.content {\n  flex: 1;\n  padding: 30px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.unit-info {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.unit-info h2 {\n  color: #333;\n  border-bottom: 2px solid #409EFF;\n  display: inline-block;\n  padding-bottom: 5px;\n}\n\n.records-wrapper {\n  margin-top: 20px;\n}\n\n.records-card {\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.card-header h3 {\n  margin: 0;\n  color: #333;\n}\n\n.record-image {\n  width: 50px;\n  height: 50px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.image-error {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  background-color: #f5f7fa;\n  color: #909399;\n}\n\n.empty-block {\n  margin: 20px 0;\n}\n\n.footer {\n  background-color: #f5f5f5;\n  padding: 15px;\n  text-align: center;\n  color: #666;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}