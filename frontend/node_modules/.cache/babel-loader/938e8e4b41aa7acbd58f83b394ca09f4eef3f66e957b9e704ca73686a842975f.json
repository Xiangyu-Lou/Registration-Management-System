{"ast":null,"code":"// 用于导出数据到CSV的工具函数\n\n/**\r\n * 将数据导出为CSV文件\r\n * @param {Array} data - 要导出的数据数组\r\n * @param {String} fileName - 导出的文件名（不含后缀）\r\n * @param {Array} headers - 要导出的列标题和对应字段名\r\n */\nexport const exportToExcel = (data, fileName, headers) => {\n  // 如果没有数据，直接返回\n  if (!data || data.length === 0) {\n    return;\n  }\n\n  // 处理文件名\n  const safeFileName = fileName || '导出数据';\n  const fileNameWithExtension = `${safeFileName}_${new Date().toISOString().slice(0, 10)}.csv`;\n\n  // 准备CSV内容\n  let csvContent = '\\uFEFF'; // 添加BOM，确保Excel正确识别中文\n\n  // 添加表头行\n  const headerRow = headers.map(header => header.title).join(',');\n  csvContent += headerRow + '\\n';\n\n  // 添加数据行\n  data.forEach(item => {\n    const row = headers.map(header => {\n      let value = item[header.field];\n\n      // 处理null和undefined\n      if (value === null || value === undefined) {\n        return '';\n      }\n\n      // 处理数字\n      if (header.type === 'number') {\n        // 对于数字类型，保留3位小数\n        return typeof value === 'number' ? value.toFixed(3) : parseFloat(value).toFixed(3);\n      }\n\n      // 处理字符串，确保带逗号的字符串被引号包围\n      value = String(value);\n      if (value.includes(',') || value.includes('\"') || value.includes('\\n')) {\n        return `\"${value.replace(/\"/g, '\"\"')}\"`;\n      }\n      return value;\n    }).join(',');\n    csvContent += row + '\\n';\n  });\n\n  // 创建下载链接\n  const blob = new Blob([csvContent], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  const link = document.createElement('a');\n\n  // 使用URL.createObjectURL创建下载URL\n  const url = URL.createObjectURL(blob);\n  link.setAttribute('href', url);\n  link.setAttribute('download', fileNameWithExtension);\n  link.style.visibility = 'hidden';\n\n  // 添加到文档并触发点击\n  document.body.appendChild(link);\n  link.click();\n\n  // 清理\n  document.body.removeChild(link);\n  URL.revokeObjectURL(url);\n};","map":{"version":3,"names":["exportToExcel","data","fileName","headers","length","safeFileName","fileNameWithExtension","Date","toISOString","slice","csvContent","headerRow","map","header","title","join","forEach","item","row","value","field","undefined","type","toFixed","parseFloat","String","includes","replace","blob","Blob","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["F:/Project/Hazardous-waste-management-system/frontend/src/utils/exportUtils.js"],"sourcesContent":["// 用于导出数据到CSV的工具函数\r\n\r\n/**\r\n * 将数据导出为CSV文件\r\n * @param {Array} data - 要导出的数据数组\r\n * @param {String} fileName - 导出的文件名（不含后缀）\r\n * @param {Array} headers - 要导出的列标题和对应字段名\r\n */\r\nexport const exportToExcel = (data, fileName, headers) => {\r\n  // 如果没有数据，直接返回\r\n  if (!data || data.length === 0) {\r\n    return;\r\n  }\r\n\r\n  // 处理文件名\r\n  const safeFileName = fileName || '导出数据';\r\n  const fileNameWithExtension = `${safeFileName}_${new Date().toISOString().slice(0, 10)}.csv`;\r\n\r\n  // 准备CSV内容\r\n  let csvContent = '\\uFEFF'; // 添加BOM，确保Excel正确识别中文\r\n  \r\n  // 添加表头行\r\n  const headerRow = headers.map(header => header.title).join(',');\r\n  csvContent += headerRow + '\\n';\r\n\r\n  // 添加数据行\r\n  data.forEach(item => {\r\n    const row = headers.map(header => {\r\n      let value = item[header.field];\r\n      \r\n      // 处理null和undefined\r\n      if (value === null || value === undefined) {\r\n        return '';\r\n      }\r\n      \r\n      // 处理数字\r\n      if (header.type === 'number') {\r\n        // 对于数字类型，保留3位小数\r\n        return typeof value === 'number' ? value.toFixed(3) : parseFloat(value).toFixed(3);\r\n      }\r\n      \r\n      // 处理字符串，确保带逗号的字符串被引号包围\r\n      value = String(value);\r\n      if (value.includes(',') || value.includes('\"') || value.includes('\\n')) {\r\n        return `\"${value.replace(/\"/g, '\"\"')}\"`;\r\n      }\r\n      \r\n      return value;\r\n    }).join(',');\r\n    \r\n    csvContent += row + '\\n';\r\n  });\r\n\r\n  // 创建下载链接\r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n  const link = document.createElement('a');\r\n  \r\n  // 使用URL.createObjectURL创建下载URL\r\n  const url = URL.createObjectURL(blob);\r\n  link.setAttribute('href', url);\r\n  link.setAttribute('download', fileNameWithExtension);\r\n  link.style.visibility = 'hidden';\r\n  \r\n  // 添加到文档并触发点击\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  \r\n  // 清理\r\n  document.body.removeChild(link);\r\n  URL.revokeObjectURL(url);\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,aAAa,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;EACxD;EACA,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IAC9B;EACF;;EAEA;EACA,MAAMC,YAAY,GAAGH,QAAQ,IAAI,MAAM;EACvC,MAAMI,qBAAqB,GAAG,GAAGD,YAAY,IAAI,IAAIE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM;;EAE5F;EACA,IAAIC,UAAU,GAAG,QAAQ,CAAC,CAAC;;EAE3B;EACA,MAAMC,SAAS,GAAGR,OAAO,CAACS,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,KAAK,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAC/DL,UAAU,IAAIC,SAAS,GAAG,IAAI;;EAE9B;EACAV,IAAI,CAACe,OAAO,CAACC,IAAI,IAAI;IACnB,MAAMC,GAAG,GAAGf,OAAO,CAACS,GAAG,CAACC,MAAM,IAAI;MAChC,IAAIM,KAAK,GAAGF,IAAI,CAACJ,MAAM,CAACO,KAAK,CAAC;;MAE9B;MACA,IAAID,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKE,SAAS,EAAE;QACzC,OAAO,EAAE;MACX;;MAEA;MACA,IAAIR,MAAM,CAACS,IAAI,KAAK,QAAQ,EAAE;QAC5B;QACA,OAAO,OAAOH,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC,GAAGC,UAAU,CAACL,KAAK,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC;MACpF;;MAEA;MACAJ,KAAK,GAAGM,MAAM,CAACN,KAAK,CAAC;MACrB,IAAIA,KAAK,CAACO,QAAQ,CAAC,GAAG,CAAC,IAAIP,KAAK,CAACO,QAAQ,CAAC,GAAG,CAAC,IAAIP,KAAK,CAACO,QAAQ,CAAC,IAAI,CAAC,EAAE;QACtE,OAAO,IAAIP,KAAK,CAACQ,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG;MACzC;MAEA,OAAOR,KAAK;IACd,CAAC,CAAC,CAACJ,IAAI,CAAC,GAAG,CAAC;IAEZL,UAAU,IAAIQ,GAAG,GAAG,IAAI;EAC1B,CAAC,CAAC;;EAEF;EACA,MAAMU,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACnB,UAAU,CAAC,EAAE;IAAEY,IAAI,EAAE;EAA0B,CAAC,CAAC;EACxE,MAAMQ,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;;EAExC;EACA,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;EACrCE,IAAI,CAACM,YAAY,CAAC,MAAM,EAAEH,GAAG,CAAC;EAC9BH,IAAI,CAACM,YAAY,CAAC,UAAU,EAAE9B,qBAAqB,CAAC;EACpDwB,IAAI,CAACO,KAAK,CAACC,UAAU,GAAG,QAAQ;;EAEhC;EACAP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC;EAC/BA,IAAI,CAACW,KAAK,CAAC,CAAC;;EAEZ;EACAV,QAAQ,CAACQ,IAAI,CAACG,WAAW,CAACZ,IAAI,CAAC;EAC/BI,GAAG,CAACS,eAAe,CAACV,GAAG,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}