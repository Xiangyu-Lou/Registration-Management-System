{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage, ElImageViewer } from 'element-plus';\nimport httpService from '../config/httpService';\nimport apiConfig from '../config/api';\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\nimport auth from '../store/auth';\nexport default {\n  name: 'EditRecordView',\n  components: {\n    ArrowLeft,\n    Plus,\n    Clock,\n    ElImageViewer\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const recordForm = ref(null);\n    const loading = ref(false);\n    const submitting = ref(false);\n    const unitName = ref('');\n    const wasteTypes = ref([]);\n    const units = ref([]);\n    const photoBeforeList = ref([]);\n    const photoAfterList = ref([]);\n    const photoBeforeFiles = ref([]);\n    const photoAfterFiles = ref([]);\n    const existingPhotosPathsBefore = ref([]);\n    const existingPhotosPathsAfter = ref([]);\n    const previewImages = ref([]);\n    const showViewer = ref(false);\n    const previewIndex = ref(0);\n    const createdAt = ref('');\n    const showUploadProgress = ref(false);\n    const uploadPercentage = ref(0);\n    const uploadStatus = ref('准备上传...');\n    const showLargeFileWarning = ref(false);\n\n    // 是否为新增记录\n    const isNew = computed(() => {\n      return !route.params.id || route.params.id === 'new';\n    });\n\n    // 是否为超级管理员\n    const isSuperAdmin = computed(() => {\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\n    });\n\n    // 表单数据\n    const form = reactive({\n      unitId: '',\n      wasteTypeId: '',\n      location: '',\n      collectionDate: '',\n      collectionTime: '',\n      quantity: 0,\n      recordId: null,\n      creatorId: auth.state.user?.id || null\n    });\n    const rules = {\n      unitId: [{\n        required: true,\n        message: '请选择单位',\n        trigger: 'change'\n      }],\n      wasteTypeId: [{\n        required: true,\n        message: '请选择废物类型',\n        trigger: 'change'\n      }],\n      location: [{\n        required: true,\n        message: '请输入废物产生地点',\n        trigger: 'blur'\n      }],\n      collectionDate: [{\n        required: false\n      }],\n      collectionTime: [{\n        required: false\n      }],\n      quantity: [{\n        required: true,\n        message: '请输入收集数量',\n        trigger: 'change'\n      }]\n    };\n    onMounted(async () => {\n      loading.value = true;\n      try {\n        // 获取废物类型\n        await fetchWasteTypes();\n\n        // 如果是超级管理员，获取所有单位\n        if (isSuperAdmin.value) {\n          await fetchUnits();\n        }\n\n        // 如果是新增记录\n        if (isNew.value) {\n          // 新增记录默认使用当前用户的单位（非超级管理员）\n          if (!isSuperAdmin.value && auth.state.user) {\n            form.unitId = auth.state.user.unit_id;\n            await fetchUnitName(form.unitId);\n          }\n        } else {\n          // 只有在编辑现有记录时才获取记录详情\n          await fetchRecordDetails();\n        }\n      } catch (error) {\n        console.error('初始化数据失败:', error);\n        ElMessage.error('加载数据失败，请刷新重试');\n      } finally {\n        loading.value = false;\n      }\n    });\n\n    // 获取单位列表\n    const fetchUnits = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        units.value = response.data;\n      } catch (error) {\n        console.error('获取单位列表失败:', error);\n        ElMessage.error('获取单位列表失败');\n      }\n    };\n\n    // 获取单位名称\n    const fetchUnitName = async unitId => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.units);\n        const unit = response.data.find(u => u.id === parseInt(unitId));\n        if (unit) {\n          unitName.value = unit.name;\n        }\n      } catch (error) {\n        console.error('获取单位信息失败:', error);\n      }\n    };\n\n    // 获取废物类型\n    const fetchWasteTypes = async () => {\n      try {\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\n        wasteTypes.value = response.data;\n      } catch (error) {\n        console.error('获取废物类型失败:', error);\n        ElMessage.error('获取废物类型失败');\n      }\n    };\n\n    // 获取记录详情\n    const fetchRecordDetails = async () => {\n      try {\n        loading.value = true;\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/detail/${route.params.id}`);\n        const record = response.data;\n        console.log('获取到的记录详情:', record);\n        form.unitId = record.unit_id;\n        form.wasteTypeId = record.waste_type_id;\n        form.location = record.location;\n        form.recordId = record.id;\n\n        // 处理收集时间\n        if (record.collection_start_time) {\n          const dateTime = new Date(record.collection_start_time);\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\n          form.collectionTime = dateTime.toTimeString().slice(0, 5);\n        }\n        form.quantity = record.quantity;\n\n        // 处理照片\n        let photosBefore = [];\n        let photosAfter = [];\n        if (record.photos) {\n          try {\n            const photos = JSON.parse(record.photos);\n            if (Array.isArray(photos)) {\n              photosBefore = photos.filter(photo => photo.type === 'before');\n              photosAfter = photos.filter(photo => photo.type === 'after');\n            }\n          } catch (error) {\n            console.error('解析照片JSON失败:', error);\n          }\n        }\n\n        // 设置已有照片路径\n        existingPhotosPathsBefore.value = photosBefore.map(photo => photo.path);\n        existingPhotosPathsAfter.value = photosAfter.map(photo => photo.path);\n\n        // 设置文件列表，用于显示\n        photoBeforeList.value = photosBefore.map((photo, index) => {\n          const url = `${apiConfig.baseURL}${photo.path}`;\n          return {\n            name: `收集前照片${index + 1}`,\n            url,\n            uid: `before-${index}`,\n            status: 'success',\n            response: {\n              path: photo.path\n            }\n          };\n        });\n        photoAfterList.value = photosAfter.map((photo, index) => {\n          const url = `${apiConfig.baseURL}${photo.path}`;\n          return {\n            name: `收集后照片${index + 1}`,\n            url,\n            uid: `after-${index}`,\n            status: 'success',\n            response: {\n              path: photo.path\n            }\n          };\n        });\n\n        // 更新预览图片\n        updatePreviewImages([...photoBeforeList.value, ...photoAfterList.value]);\n\n        // 获取单位名称\n        unitName.value = record.unit_name;\n\n        // 设置创建时间\n        createdAt.value = record.created_at;\n      } catch (error) {\n        console.error('获取记录详情失败:', error);\n        ElMessage.error('获取记录详情失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 处理上传前的文件处理\n    const handleBeforeUpload = async file => {\n      // 检查文件类型是否为图片\n      const acceptedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/bmp', 'image/webp'];\n      const isImage = acceptedTypes.includes(file.type);\n      if (!isImage) {\n        ElMessage.error('只能上传图片文件!');\n        return false;\n      }\n\n      // 检查文件大小（50MB = 50 * 1024 * 1024 bytes）\n      const maxSize = 50 * 1024 * 1024;\n      if (file.size > maxSize) {\n        ElMessage.error('图片大小不能超过50MB!');\n        return false;\n      }\n\n      // 检查是否有大文件需要显示警告\n      const largeFileThreshold = 5 * 1024 * 1024; // 5MB\n      if (file.size > largeFileThreshold) {\n        showLargeFileWarning.value = true;\n      }\n\n      // 直接返回true，允许文件被添加到上传列表\n      return true;\n    };\n\n    // 处理收集前的照片变更\n    const handlePhotoBeforeChange = (file, fileList) => {\n      // 检查是否有大文件\n      checkForLargeFiles(fileList);\n\n      // 更新文件列表\n      photoBeforeList.value = fileList;\n\n      // 更新表单数据\n      form.photosBefore = fileList;\n      return false; // 阻止自动上传\n    };\n\n    // 处理收集前的照片移除\n    const handlePhotoBeforeRemove = (file, fileList) => {\n      console.log('收集前照片移除:', file, fileList);\n\n      // 更新photoBeforeList\n      photoBeforeList.value = fileList;\n\n      // 如果是现有照片，从existingPhotosPathsBefore中移除\n      if (file.uid && typeof file.uid === 'string' && file.uid.startsWith('before-')) {\n        const index = parseInt(file.uid.replace('before-', ''));\n        // 从existingPhotosPathsBefore中移除\n        existingPhotosPathsBefore.value = existingPhotosPathsBefore.value.filter((_, i) => i !== index);\n      }\n\n      // 从photoBeforeFiles中移除被删除的文件\n      if (file.raw) {\n        photoBeforeFiles.value = photoBeforeFiles.value.filter(f => f.name !== file.raw.name);\n      } else {\n        // 如果没有raw属性，可能是已经处理过的文件，使用uid或name来匹配\n        photoBeforeFiles.value = photoBeforeFiles.value.filter(f => f.uid !== file.uid && f.name !== file.name);\n      }\n\n      // 如果没有大文件了，隐藏警告\n      if (!checkForLargeFiles([...photoBeforeFiles.value, ...photoAfterFiles.value])) {\n        showLargeFileWarning.value = false;\n      }\n\n      // 更新预览图片\n      updatePreviewImages([...photoBeforeList.value, ...photoAfterList.value]);\n    };\n\n    // 处理收集后的照片变更\n    const handlePhotoAfterChange = (file, fileList) => {\n      // 检查是否有大文件\n      checkForLargeFiles(fileList);\n\n      // 更新文件列表\n      photoAfterList.value = fileList;\n\n      // 更新表单数据\n      form.photosAfter = fileList;\n      return false; // 阻止自动上传\n    };\n\n    // 处理收集后的照片移除\n    const handlePhotoAfterRemove = (file, fileList) => {\n      console.log('收集后照片移除:', file, fileList);\n\n      // 更新photoAfterList\n      photoAfterList.value = fileList;\n\n      // 如果是现有照片，从existingPhotosPathsAfter中移除\n      if (file.uid && typeof file.uid === 'string' && file.uid.startsWith('after-')) {\n        const index = parseInt(file.uid.replace('after-', ''));\n        // 从existingPhotosPathsAfter中移除\n        existingPhotosPathsAfter.value = existingPhotosPathsAfter.value.filter((_, i) => i !== index);\n      }\n\n      // 从photoAfterFiles中移除被删除的文件\n      if (file.raw) {\n        photoAfterFiles.value = photoAfterFiles.value.filter(f => f.name !== file.raw.name);\n      } else {\n        // 如果没有raw属性，可能是已经处理过的文件，使用uid或name来匹配\n        photoAfterFiles.value = photoAfterFiles.value.filter(f => f.uid !== file.uid && f.name !== file.name);\n      }\n\n      // 如果没有大文件了，隐藏警告\n      if (!checkForLargeFiles([...photoBeforeFiles.value, ...photoAfterFiles.value])) {\n        showLargeFileWarning.value = false;\n      }\n\n      // 更新预览图片\n      updatePreviewImages([...photoBeforeList.value, ...photoAfterList.value]);\n    };\n\n    // 更新预览图片\n    const updatePreviewImages = fileList => {\n      previewImages.value = fileList.map(file => {\n        if (file.url) {\n          return file.url;\n        } else if (file.raw) {\n          return URL.createObjectURL(file.raw);\n        } else if (file instanceof File) {\n          return URL.createObjectURL(file);\n        }\n        return '';\n      }).filter(url => url);\n      console.log('预览图片列表:', previewImages.value);\n    };\n\n    // 处理图片预览\n    const handlePictureCardPreview = file => {\n      // 找到当前图片在预览列表中的索引\n      const index = previewImages.value.findIndex(url => {\n        return url === file.url || file.raw && url === URL.createObjectURL(file.raw);\n      });\n      if (index !== -1) {\n        previewIndex.value = index;\n      } else {\n        previewIndex.value = 0;\n      }\n\n      // 显示图片预览器\n      showViewer.value = true;\n    };\n\n    // 关闭图片预览\n    const closeViewer = () => {\n      showViewer.value = false;\n    };\n\n    // 检查是否有大文件\n    const checkForLargeFiles = files => {\n      const largeFileThreshold = 5 * 1024 * 1024; // 5MB\n      return files.some(file => file.size > largeFileThreshold);\n    };\n\n    // 处理上传进度\n    const handleUploadProgress = progressEvent => {\n      if (progressEvent.total) {\n        const percentage = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        uploadPercentage.value = percentage;\n        if (percentage < 33) {\n          uploadStatus.value = '正在上传文件...';\n        } else if (percentage < 66) {\n          uploadStatus.value = '正在处理文件...';\n        } else if (percentage < 100) {\n          uploadStatus.value = '即将完成...';\n        } else {\n          uploadStatus.value = '上传完成，正在保存...';\n        }\n      }\n    };\n\n    // 格式化百分比显示\n    const percentageFormat = percentage => {\n      return percentage === 100 ? '完成' : `${percentage}%`;\n    };\n\n    // 提交表单\n    const submitForm = async () => {\n      if (!recordForm.value) return;\n      await recordForm.value.validate(async valid => {\n        if (valid) {\n          // 显示上传进度对话框\n          uploadPercentage.value = 0;\n          uploadStatus.value = '正在上传文件...';\n          showUploadProgress.value = true;\n          try {\n            const formData = new FormData();\n            formData.append('unitId', form.unitId);\n            formData.append('wasteTypeId', form.wasteTypeId);\n            formData.append('location', form.location);\n            formData.append('collectionDate', form.collectionDate);\n            formData.append('collectionTime', form.collectionTime);\n            formData.append('quantity', form.quantity);\n\n            // 处理收集前照片\n            // 添加新上传的照片\n            if (form.photosBefore && form.photosBefore.length > 0) {\n              form.photosBefore.forEach(file => {\n                if (file.raw) {\n                  formData.append('photosBefore', file.raw);\n                }\n              });\n            }\n\n            // 添加已有的照片路径\n            if (existingPhotosPathsBefore.value && existingPhotosPathsBefore.value.length > 0) {\n              existingPhotosPathsBefore.value.forEach(path => {\n                formData.append('existingPhotosBefore', path);\n              });\n            }\n\n            // 处理收集后照片\n            // 添加新上传的照片\n            if (form.photosAfter && form.photosAfter.length > 0) {\n              form.photosAfter.forEach(file => {\n                if (file.raw) {\n                  formData.append('photosAfter', file.raw);\n                }\n              });\n            }\n\n            // 添加已有的照片路径\n            if (existingPhotosPathsAfter.value && existingPhotosPathsAfter.value.length > 0) {\n              existingPhotosPathsAfter.value.forEach(path => {\n                formData.append('existingPhotosAfter', path);\n              });\n            }\n\n            // 根据是新增还是编辑选择不同的API\n            let response;\n            if (form.recordId) {\n              response = await httpService.putForm(`${apiConfig.endpoints.wasteRecords}/${form.recordId}`, formData, handleUploadProgress);\n              ElMessage.success('废物记录更新成功');\n            } else {\n              response = await httpService.postForm(apiConfig.endpoints.wasteRecords, formData, handleUploadProgress);\n              ElMessage.success('废物记录添加成功');\n            }\n\n            // 关闭上传进度对话框\n            showUploadProgress.value = false;\n\n            // 返回列表页\n            goBack();\n          } catch (error) {\n            console.error('提交表单失败:', error);\n            ElMessage.error('提交表单失败');\n            showUploadProgress.value = false;\n          }\n        } else {\n          console.log('表单验证失败');\n          ElMessage.error('请填写所有必填字段');\n          return false;\n        }\n      });\n    };\n\n    // 返回上一页\n    const goBack = () => {\n      if (isSuperAdmin.value) {\n        router.push('/admin-records');\n      } else {\n        router.push({\n          name: 'RecordsList',\n          params: {\n            unitId: auth.state.user.unit_id\n          }\n        });\n      }\n    };\n    return {\n      form,\n      rules,\n      recordForm,\n      loading,\n      submitting,\n      unitName,\n      wasteTypes,\n      units,\n      photoBeforeList,\n      photoAfterList,\n      previewImages,\n      showViewer,\n      previewIndex,\n      isNew,\n      isSuperAdmin,\n      handlePhotoBeforeChange,\n      handlePhotoBeforeRemove,\n      handlePhotoAfterChange,\n      handlePhotoAfterRemove,\n      handlePictureCardPreview,\n      handleBeforeUpload,\n      closeViewer,\n      submitForm,\n      goBack,\n      showUploadProgress,\n      uploadPercentage,\n      uploadStatus,\n      percentageFormat,\n      showLargeFileWarning\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useRouter","useRoute","ElMessage","ElImageViewer","httpService","apiConfig","ArrowLeft","Plus","Clock","auth","name","components","setup","router","route","recordForm","loading","submitting","unitName","wasteTypes","units","photoBeforeList","photoAfterList","photoBeforeFiles","photoAfterFiles","existingPhotosPathsBefore","existingPhotosPathsAfter","previewImages","showViewer","previewIndex","createdAt","showUploadProgress","uploadPercentage","uploadStatus","showLargeFileWarning","isNew","params","id","isSuperAdmin","state","isLoggedIn","user","role_id","form","unitId","wasteTypeId","location","collectionDate","collectionTime","quantity","recordId","creatorId","rules","required","message","trigger","value","fetchWasteTypes","fetchUnits","unit_id","fetchUnitName","fetchRecordDetails","error","console","response","get","endpoints","data","unit","find","u","parseInt","wasteRecords","record","log","waste_type_id","collection_start_time","dateTime","Date","toISOString","slice","toTimeString","photosBefore","photosAfter","photos","JSON","parse","Array","isArray","filter","photo","type","map","path","index","url","baseURL","uid","status","updatePreviewImages","unit_name","created_at","handleBeforeUpload","file","acceptedTypes","isImage","includes","maxSize","size","largeFileThreshold","handlePhotoBeforeChange","fileList","checkForLargeFiles","handlePhotoBeforeRemove","startsWith","replace","_","i","raw","f","handlePhotoAfterChange","handlePhotoAfterRemove","URL","createObjectURL","File","handlePictureCardPreview","findIndex","closeViewer","files","some","handleUploadProgress","progressEvent","total","percentage","Math","round","loaded","percentageFormat","submitForm","validate","valid","formData","FormData","append","length","forEach","putForm","success","postForm","goBack","push"],"sources":["C:\\Users\\10150\\Desktop\\Hazardous-waste-management-system\\frontend\\src\\views\\EditRecord.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-record-container\">\r\n    <div class=\"header\">\r\n      <div class=\"back-button\" @click=\"goBack\">\r\n        <el-icon><arrow-left /></el-icon> 返回\r\n      </div>\r\n      <h1>{{ isNew ? '新增废物记录' : '编辑废物记录' }}</h1>\r\n      <div></div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <div class=\"form-header\">\r\n        <h2>{{ unitName }}</h2>\r\n      </div>\r\n\r\n      <el-form \r\n        ref=\"recordForm\" \r\n        :model=\"form\" \r\n        :rules=\"rules\" \r\n        label-width=\"120px\"\r\n        class=\"record-form\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <!-- 如果是超级管理员且是新增记录，显示单位选择 -->\r\n        <el-form-item label=\"单位\" prop=\"unitId\" v-if=\"isSuperAdmin && isNew\">\r\n          <el-select v-model=\"form.unitId\" placeholder=\"请选择单位\" style=\"width: 100%\">\r\n            <el-option \r\n              v-for=\"unit in units\" \r\n              :key=\"unit.id\" \r\n              :label=\"unit.name\" \r\n              :value=\"unit.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"废物类型\" prop=\"wasteTypeId\">\r\n          <el-select v-model=\"form.wasteTypeId\" placeholder=\"请选择废物类型\" style=\"width: 100%\">\r\n            <el-option \r\n              v-for=\"type in wasteTypes\" \r\n              :key=\"type.id\" \r\n              :label=\"type.name\" \r\n              :value=\"type.id\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"产生地点\" prop=\"location\">\r\n          <el-input v-model=\"form.location\" placeholder=\"请输入废物产生地点\" />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集日期\">\r\n          <el-date-picker\r\n            v-model=\"form.collectionDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            format=\"YYYY-MM-DD\"\r\n            value-format=\"YYYY-MM-DD\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集时间\">\r\n          <el-time-picker\r\n            v-model=\"form.collectionTime\"\r\n            format=\"HH:mm\"\r\n            placeholder=\"选择时间\"\r\n            value-format=\"HH:mm\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <template #prefix>\r\n              <el-icon><clock /></el-icon>\r\n            </template>\r\n          </el-time-picker>\r\n          <!-- <div class=\"time-tip\">只需选择小时和分钟</div> -->\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"收集数量(吨)\" prop=\"quantity\">\r\n          <el-input-number \r\n            v-model=\"form.quantity\" \r\n            :min=\"0\" \r\n            :precision=\"3\" \r\n            :step=\"0.001\" \r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片（收集前）\" prop=\"photosBefore\">\r\n          <div class=\"photo-tip\">请上传废物收集前的现场照片（最多5张）</div>\r\n          <div class=\"upload-warning\" v-if=\"showLargeFileWarning\">\r\n            <el-alert\r\n              title=\"上传大文件可能会导致处理时间较长，请耐心等待\"\r\n              type=\"warning\"\r\n              :closable=\"false\"\r\n              show-icon\r\n            />\r\n          </div>\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoBeforeChange\"\r\n            :on-remove=\"handlePhotoBeforeRemove\"\r\n            :file-list=\"photoBeforeList\"\r\n            :limit=\"5\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :on-preview=\"handlePictureCardPreview\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n            accept=\"image/jpeg,image/jpg,image/png,image/gif,image/bmp,image/webp,.jpeg,.jpg,.png,.gif,.bmp,.webp\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"现场照片（收集后）\" prop=\"photosAfter\">\r\n          <div class=\"photo-tip\">请上传废物收集后的现场照片（最多5张）</div>\r\n          <el-upload\r\n            class=\"waste-photo-uploader\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handlePhotoAfterChange\"\r\n            :on-remove=\"handlePhotoAfterRemove\"\r\n            :file-list=\"photoAfterList\"\r\n            :limit=\"5\"\r\n            multiple\r\n            list-type=\"picture-card\"\r\n            :on-preview=\"handlePictureCardPreview\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n            accept=\"image/jpeg,image/jpg,image/png,image/gif,image/bmp,image/webp,.jpeg,.jpg,.png,.gif,.bmp,.webp\"\r\n          >\r\n            <el-icon><plus /></el-icon>\r\n          </el-upload>\r\n          \r\n          <!-- 添加独立的图片预览组件 -->\r\n          <el-image-viewer\r\n            v-if=\"showViewer\"\r\n            :url-list=\"previewImages\"\r\n            :initial-index=\"previewIndex\"\r\n            @close=\"closeViewer\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"loading\">保存</el-button>\r\n          <el-button @click=\"goBack\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 上传进度条对话框 -->\r\n    <el-dialog\r\n      v-model=\"showUploadProgress\"\r\n      title=\"正在上传文件\"\r\n      width=\"30%\"\r\n      :close-on-click-modal=\"false\"\r\n      :close-on-press-escape=\"false\"\r\n      :show-close=\"false\"\r\n    >\r\n      <div class=\"upload-progress\">\r\n        <p>正在上传文件，请勿关闭页面...</p>\r\n        <el-progress \r\n          :percentage=\"uploadPercentage\" \r\n          :format=\"percentageFormat\"\r\n          :status=\"uploadPercentage === 100 ? 'success' : ''\"\r\n        ></el-progress>\r\n        <p class=\"upload-status\">{{ uploadStatus }}</p>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <div class=\"footer\">\r\n      <p>&copy; 2025 危险废物管理系统</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { ElMessage, ElImageViewer } from 'element-plus';\r\nimport httpService from '../config/httpService';\r\nimport apiConfig from '../config/api';\r\nimport { ArrowLeft, Plus, Clock } from '@element-plus/icons-vue';\r\nimport auth from '../store/auth';\r\n\r\nexport default {\r\n  name: 'EditRecordView',\r\n  components: {\r\n    ArrowLeft,\r\n    Plus,\r\n    Clock,\r\n    ElImageViewer\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const recordForm = ref(null);\r\n    const loading = ref(false);\r\n    const submitting = ref(false);\r\n    const unitName = ref('');\r\n    const wasteTypes = ref([]);\r\n    const units = ref([]);\r\n    const photoBeforeList = ref([]);\r\n    const photoAfterList = ref([]);\r\n    const photoBeforeFiles = ref([]);\r\n    const photoAfterFiles = ref([]);\r\n    const existingPhotosPathsBefore = ref([]);\r\n    const existingPhotosPathsAfter = ref([]);\r\n    const previewImages = ref([]);\r\n    const showViewer = ref(false);\r\n    const previewIndex = ref(0);\r\n    const createdAt = ref('');\r\n    const showUploadProgress = ref(false);\r\n    const uploadPercentage = ref(0);\r\n    const uploadStatus = ref('准备上传...');\r\n    const showLargeFileWarning = ref(false);\r\n    \r\n    // 是否为新增记录\r\n    const isNew = computed(() => {\r\n      return !route.params.id || route.params.id === 'new';\r\n    });\r\n    \r\n    // 是否为超级管理员\r\n    const isSuperAdmin = computed(() => {\r\n      return auth.state.isLoggedIn && auth.state.user.role_id === 3;\r\n    });\r\n    \r\n    // 表单数据\r\n    const form = reactive({\r\n      unitId: '',\r\n      wasteTypeId: '',\r\n      location: '',\r\n      collectionDate: '',\r\n      collectionTime: '',\r\n      quantity: 0,\r\n      recordId: null,\r\n      creatorId: auth.state.user?.id || null\r\n    });\r\n\r\n    const rules = {\r\n      unitId: [\r\n        { required: true, message: '请选择单位', trigger: 'change' }\r\n      ],\r\n      wasteTypeId: [\r\n        { required: true, message: '请选择废物类型', trigger: 'change' }\r\n      ],\r\n      location: [\r\n        { required: true, message: '请输入废物产生地点', trigger: 'blur' }\r\n      ],\r\n      collectionDate: [\r\n        { required: false }\r\n      ],\r\n      collectionTime: [\r\n        { required: false }\r\n      ],\r\n      quantity: [\r\n        { required: true, message: '请输入收集数量', trigger: 'change' }\r\n      ]\r\n    };\r\n\r\n    onMounted(async () => {\r\n      loading.value = true;\r\n      \r\n      try {\r\n        // 获取废物类型\r\n        await fetchWasteTypes();\r\n        \r\n        // 如果是超级管理员，获取所有单位\r\n        if (isSuperAdmin.value) {\r\n          await fetchUnits();\r\n        }\r\n        \r\n        // 如果是新增记录\r\n        if (isNew.value) {\r\n          // 新增记录默认使用当前用户的单位（非超级管理员）\r\n          if (!isSuperAdmin.value && auth.state.user) {\r\n            form.unitId = auth.state.user.unit_id;\r\n            await fetchUnitName(form.unitId);\r\n          }\r\n        } else {\r\n          // 只有在编辑现有记录时才获取记录详情\r\n          await fetchRecordDetails();\r\n        }\r\n      } catch (error) {\r\n        console.error('初始化数据失败:', error);\r\n        ElMessage.error('加载数据失败，请刷新重试');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    });\r\n\r\n    // 获取单位列表\r\n    const fetchUnits = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        units.value = response.data;\r\n      } catch (error) {\r\n        console.error('获取单位列表失败:', error);\r\n        ElMessage.error('获取单位列表失败');\r\n      }\r\n    };\r\n\r\n    // 获取单位名称\r\n    const fetchUnitName = async (unitId) => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.units);\r\n        const unit = response.data.find(u => u.id === parseInt(unitId));\r\n        if (unit) {\r\n          unitName.value = unit.name;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取单位信息失败:', error);\r\n      }\r\n    };\r\n\r\n    // 获取废物类型\r\n    const fetchWasteTypes = async () => {\r\n      try {\r\n        const response = await httpService.get(apiConfig.endpoints.wasteTypes);\r\n        wasteTypes.value = response.data;\r\n      } catch (error) {\r\n        console.error('获取废物类型失败:', error);\r\n        ElMessage.error('获取废物类型失败');\r\n      }\r\n    };\r\n\r\n    // 获取记录详情\r\n    const fetchRecordDetails = async () => {\r\n      try {\r\n        loading.value = true;\r\n        const response = await httpService.get(`${apiConfig.endpoints.wasteRecords}/detail/${route.params.id}`);\r\n        \r\n        const record = response.data;\r\n        console.log('获取到的记录详情:', record);\r\n        \r\n        form.unitId = record.unit_id;\r\n        form.wasteTypeId = record.waste_type_id;\r\n        form.location = record.location;\r\n        form.recordId = record.id;\r\n        \r\n        // 处理收集时间\r\n        if (record.collection_start_time) {\r\n          const dateTime = new Date(record.collection_start_time);\r\n          form.collectionDate = dateTime.toISOString().slice(0, 10);\r\n          form.collectionTime = dateTime.toTimeString().slice(0, 5);\r\n        }\r\n        \r\n        form.quantity = record.quantity;\r\n        \r\n        // 处理照片\r\n        let photosBefore = [];\r\n        let photosAfter = [];\r\n        \r\n        if (record.photos) {\r\n          try {\r\n            const photos = JSON.parse(record.photos);\r\n            if (Array.isArray(photos)) {\r\n              photosBefore = photos.filter(photo => photo.type === 'before');\r\n              photosAfter = photos.filter(photo => photo.type === 'after');\r\n            }\r\n          } catch (error) {\r\n            console.error('解析照片JSON失败:', error);\r\n          }\r\n        }\r\n        \r\n        // 设置已有照片路径\r\n        existingPhotosPathsBefore.value = photosBefore.map(photo => photo.path);\r\n        existingPhotosPathsAfter.value = photosAfter.map(photo => photo.path);\r\n        \r\n        // 设置文件列表，用于显示\r\n        photoBeforeList.value = photosBefore.map((photo, index) => {\r\n          const url = `${apiConfig.baseURL}${photo.path}`;\r\n          return {\r\n            name: `收集前照片${index + 1}`,\r\n            url,\r\n            uid: `before-${index}`,\r\n            status: 'success',\r\n            response: { path: photo.path }\r\n          };\r\n        });\r\n        \r\n        photoAfterList.value = photosAfter.map((photo, index) => {\r\n          const url = `${apiConfig.baseURL}${photo.path}`;\r\n          return {\r\n            name: `收集后照片${index + 1}`,\r\n            url,\r\n            uid: `after-${index}`,\r\n            status: 'success',\r\n            response: { path: photo.path }\r\n          };\r\n        });\r\n        \r\n        // 更新预览图片\r\n        updatePreviewImages([...photoBeforeList.value, ...photoAfterList.value]);\r\n        \r\n        // 获取单位名称\r\n        unitName.value = record.unit_name;\r\n        \r\n        // 设置创建时间\r\n        createdAt.value = record.created_at;\r\n        \r\n      } catch (error) {\r\n        console.error('获取记录详情失败:', error);\r\n        ElMessage.error('获取记录详情失败');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 处理上传前的文件处理\r\n    const handleBeforeUpload = async (file) => {\r\n      // 检查文件类型是否为图片\r\n      const acceptedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/bmp', 'image/webp'];\r\n      const isImage = acceptedTypes.includes(file.type);\r\n      \r\n      if (!isImage) {\r\n        ElMessage.error('只能上传图片文件!');\r\n        return false;\r\n      }\r\n\r\n      // 检查文件大小（50MB = 50 * 1024 * 1024 bytes）\r\n      const maxSize = 50 * 1024 * 1024;\r\n      if (file.size > maxSize) {\r\n        ElMessage.error('图片大小不能超过50MB!');\r\n        return false;\r\n      }\r\n      \r\n      // 检查是否有大文件需要显示警告\r\n      const largeFileThreshold = 5 * 1024 * 1024; // 5MB\r\n      if (file.size > largeFileThreshold) {\r\n        showLargeFileWarning.value = true;\r\n      }\r\n      \r\n      // 直接返回true，允许文件被添加到上传列表\r\n      return true;\r\n    };\r\n\r\n    // 处理收集前的照片变更\r\n    const handlePhotoBeforeChange = (file, fileList) => {\r\n      // 检查是否有大文件\r\n      checkForLargeFiles(fileList);\r\n      \r\n      // 更新文件列表\r\n      photoBeforeList.value = fileList;\r\n      \r\n      // 更新表单数据\r\n      form.photosBefore = fileList;\r\n      \r\n      return false; // 阻止自动上传\r\n    };\r\n\r\n    // 处理收集前的照片移除\r\n    const handlePhotoBeforeRemove = (file, fileList) => {\r\n      console.log('收集前照片移除:', file, fileList);\r\n      \r\n      // 更新photoBeforeList\r\n      photoBeforeList.value = fileList;\r\n      \r\n      // 如果是现有照片，从existingPhotosPathsBefore中移除\r\n      if (file.uid && typeof file.uid === 'string' && file.uid.startsWith('before-')) {\r\n        const index = parseInt(file.uid.replace('before-', ''));\r\n        // 从existingPhotosPathsBefore中移除\r\n        existingPhotosPathsBefore.value = existingPhotosPathsBefore.value.filter((_, i) => i !== index);\r\n      }\r\n      \r\n      // 从photoBeforeFiles中移除被删除的文件\r\n      if (file.raw) {\r\n        photoBeforeFiles.value = photoBeforeFiles.value.filter(f => \r\n          f.name !== file.raw.name\r\n        );\r\n      } else {\r\n        // 如果没有raw属性，可能是已经处理过的文件，使用uid或name来匹配\r\n        photoBeforeFiles.value = photoBeforeFiles.value.filter(f => \r\n          f.uid !== file.uid && f.name !== file.name\r\n        );\r\n      }\r\n      \r\n      // 如果没有大文件了，隐藏警告\r\n      if (!checkForLargeFiles([...photoBeforeFiles.value, ...photoAfterFiles.value])) {\r\n        showLargeFileWarning.value = false;\r\n      }\r\n      \r\n      // 更新预览图片\r\n      updatePreviewImages([...photoBeforeList.value, ...photoAfterList.value]);\r\n    };\r\n\r\n    // 处理收集后的照片变更\r\n    const handlePhotoAfterChange = (file, fileList) => {\r\n      // 检查是否有大文件\r\n      checkForLargeFiles(fileList);\r\n      \r\n      // 更新文件列表\r\n      photoAfterList.value = fileList;\r\n      \r\n      // 更新表单数据\r\n      form.photosAfter = fileList;\r\n      \r\n      return false; // 阻止自动上传\r\n    };\r\n\r\n    // 处理收集后的照片移除\r\n    const handlePhotoAfterRemove = (file, fileList) => {\r\n      console.log('收集后照片移除:', file, fileList);\r\n      \r\n      // 更新photoAfterList\r\n      photoAfterList.value = fileList;\r\n      \r\n      // 如果是现有照片，从existingPhotosPathsAfter中移除\r\n      if (file.uid && typeof file.uid === 'string' && file.uid.startsWith('after-')) {\r\n        const index = parseInt(file.uid.replace('after-', ''));\r\n        // 从existingPhotosPathsAfter中移除\r\n        existingPhotosPathsAfter.value = existingPhotosPathsAfter.value.filter((_, i) => i !== index);\r\n      }\r\n      \r\n      // 从photoAfterFiles中移除被删除的文件\r\n      if (file.raw) {\r\n        photoAfterFiles.value = photoAfterFiles.value.filter(f => \r\n          f.name !== file.raw.name\r\n        );\r\n      } else {\r\n        // 如果没有raw属性，可能是已经处理过的文件，使用uid或name来匹配\r\n        photoAfterFiles.value = photoAfterFiles.value.filter(f => \r\n          f.uid !== file.uid && f.name !== file.name\r\n        );\r\n      }\r\n      \r\n      // 如果没有大文件了，隐藏警告\r\n      if (!checkForLargeFiles([...photoBeforeFiles.value, ...photoAfterFiles.value])) {\r\n        showLargeFileWarning.value = false;\r\n      }\r\n      \r\n      // 更新预览图片\r\n      updatePreviewImages([...photoBeforeList.value, ...photoAfterList.value]);\r\n    };\r\n\r\n    // 更新预览图片\r\n    const updatePreviewImages = (fileList) => {\r\n      previewImages.value = fileList.map(file => {\r\n        if (file.url) {\r\n          return file.url;\r\n        } else if (file.raw) {\r\n          return URL.createObjectURL(file.raw);\r\n        } else if (file instanceof File) {\r\n          return URL.createObjectURL(file);\r\n        }\r\n        return '';\r\n      }).filter(url => url);\r\n      \r\n      console.log('预览图片列表:', previewImages.value);\r\n    };\r\n\r\n    // 处理图片预览\r\n    const handlePictureCardPreview = (file) => {\r\n      // 找到当前图片在预览列表中的索引\r\n      const index = previewImages.value.findIndex(url => {\r\n        return url === file.url || (file.raw && url === URL.createObjectURL(file.raw));\r\n      });\r\n      \r\n      if (index !== -1) {\r\n        previewIndex.value = index;\r\n      } else {\r\n        previewIndex.value = 0;\r\n      }\r\n      \r\n      // 显示图片预览器\r\n      showViewer.value = true;\r\n    };\r\n    \r\n    // 关闭图片预览\r\n    const closeViewer = () => {\r\n      showViewer.value = false;\r\n    };\r\n\r\n    // 检查是否有大文件\r\n    const checkForLargeFiles = (files) => {\r\n      const largeFileThreshold = 5 * 1024 * 1024; // 5MB\r\n      return files.some(file => file.size > largeFileThreshold);\r\n    };\r\n\r\n    // 处理上传进度\r\n    const handleUploadProgress = (progressEvent) => {\r\n      if (progressEvent.total) {\r\n        const percentage = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n        uploadPercentage.value = percentage;\r\n        \r\n        if (percentage < 33) {\r\n          uploadStatus.value = '正在上传文件...';\r\n        } else if (percentage < 66) {\r\n          uploadStatus.value = '正在处理文件...';\r\n        } else if (percentage < 100) {\r\n          uploadStatus.value = '即将完成...';\r\n        } else {\r\n          uploadStatus.value = '上传完成，正在保存...';\r\n        }\r\n      }\r\n    };\r\n\r\n    // 格式化百分比显示\r\n    const percentageFormat = (percentage) => {\r\n      return percentage === 100 ? '完成' : `${percentage}%`;\r\n    };\r\n\r\n    // 提交表单\r\n    const submitForm = async () => {\r\n      if (!recordForm.value) return;\r\n      \r\n      await recordForm.value.validate(async (valid) => {\r\n        if (valid) {\r\n          // 显示上传进度对话框\r\n          uploadPercentage.value = 0;\r\n          uploadStatus.value = '正在上传文件...';\r\n          showUploadProgress.value = true;\r\n          \r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('unitId', form.unitId);\r\n            formData.append('wasteTypeId', form.wasteTypeId);\r\n            formData.append('location', form.location);\r\n            formData.append('collectionDate', form.collectionDate);\r\n            formData.append('collectionTime', form.collectionTime);\r\n            formData.append('quantity', form.quantity);\r\n            \r\n            // 处理收集前照片\r\n            // 添加新上传的照片\r\n            if (form.photosBefore && form.photosBefore.length > 0) {\r\n              form.photosBefore.forEach(file => {\r\n                if (file.raw) {\r\n                  formData.append('photosBefore', file.raw);\r\n                }\r\n              });\r\n            }\r\n            \r\n            // 添加已有的照片路径\r\n            if (existingPhotosPathsBefore.value && existingPhotosPathsBefore.value.length > 0) {\r\n              existingPhotosPathsBefore.value.forEach(path => {\r\n                formData.append('existingPhotosBefore', path);\r\n              });\r\n            }\r\n            \r\n            // 处理收集后照片\r\n            // 添加新上传的照片\r\n            if (form.photosAfter && form.photosAfter.length > 0) {\r\n              form.photosAfter.forEach(file => {\r\n                if (file.raw) {\r\n                  formData.append('photosAfter', file.raw);\r\n                }\r\n              });\r\n            }\r\n            \r\n            // 添加已有的照片路径\r\n            if (existingPhotosPathsAfter.value && existingPhotosPathsAfter.value.length > 0) {\r\n              existingPhotosPathsAfter.value.forEach(path => {\r\n                formData.append('existingPhotosAfter', path);\r\n              });\r\n            }\r\n            \r\n            // 根据是新增还是编辑选择不同的API\r\n            let response;\r\n            if (form.recordId) {\r\n              response = await httpService.putForm(\r\n                `${apiConfig.endpoints.wasteRecords}/${form.recordId}`, \r\n                formData,\r\n                handleUploadProgress\r\n              );\r\n              ElMessage.success('废物记录更新成功');\r\n            } else {\r\n              response = await httpService.postForm(\r\n                apiConfig.endpoints.wasteRecords, \r\n                formData,\r\n                handleUploadProgress\r\n              );\r\n              ElMessage.success('废物记录添加成功');\r\n            }\r\n            \r\n            // 关闭上传进度对话框\r\n            showUploadProgress.value = false;\r\n            \r\n            // 返回列表页\r\n            goBack();\r\n          } catch (error) {\r\n            console.error('提交表单失败:', error);\r\n            ElMessage.error('提交表单失败');\r\n            showUploadProgress.value = false;\r\n          }\r\n        } else {\r\n          console.log('表单验证失败');\r\n          ElMessage.error('请填写所有必填字段');\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n\r\n    // 返回上一页\r\n    const goBack = () => {\r\n      if (isSuperAdmin.value) {\r\n        router.push('/admin-records');\r\n      } else {\r\n        router.push({ \r\n          name: 'RecordsList', \r\n          params: { unitId: auth.state.user.unit_id } \r\n        });\r\n      }\r\n    };\r\n\r\n    return {\r\n      form,\r\n      rules,\r\n      recordForm,\r\n      loading,\r\n      submitting,\r\n      unitName,\r\n      wasteTypes,\r\n      units,\r\n      photoBeforeList,\r\n      photoAfterList,\r\n      previewImages,\r\n      showViewer,\r\n      previewIndex,\r\n      isNew,\r\n      isSuperAdmin,\r\n      handlePhotoBeforeChange,\r\n      handlePhotoBeforeRemove,\r\n      handlePhotoAfterChange,\r\n      handlePhotoAfterRemove,\r\n      handlePictureCardPreview,\r\n      handleBeforeUpload,\r\n      closeViewer,\r\n      submitForm,\r\n      goBack,\r\n      showUploadProgress,\r\n      uploadPercentage,\r\n      uploadStatus,\r\n      percentageFormat,\r\n      showLargeFileWarning\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.edit-record-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.header {\r\n  background-color: #409EFF;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.back-button {\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  padding: 30px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.form-header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-header h2 {\r\n  color: #333;\r\n  border-bottom: 2px solid #409EFF;\r\n  display: inline-block;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.record-form {\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.waste-photo-uploader {\r\n  width: 100%;\r\n}\r\n\r\n.photo-tip, .time-tip {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n.footer {\r\n  background-color: #f5f5f5;\r\n  padding: 15px;\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.upload-warning {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.upload-progress {\r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.upload-status {\r\n  margin-top: 10px;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 修复Element Plus图片预览组件的z-index问题 */\r\n.el-image-viewer__wrapper {\r\n  z-index: 2147483647 !important; /* 使用最大可能的z-index值 */\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的遮罩层也在最上层 */\r\n.el-image-viewer__mask {\r\n  z-index: 2147483646 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的操作按钮在最上层 */\r\n.el-image-viewer__btn {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的关闭按钮在最上层 */\r\n.el-image-viewer__close {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的图片在最上层 */\r\n.el-image-viewer__img {\r\n  z-index: 2147483646 !important;\r\n  position: relative !important;\r\n}\r\n\r\n/* 确保图片预览的操作栏在最上层 */\r\n.el-image-viewer__actions {\r\n  z-index: 2147483647 !important;\r\n  position: fixed !important;\r\n}\r\n\r\n/* 确保图片预览的缩放按钮在最上层 */\r\n.el-image-viewer__actions__inner {\r\n  z-index: 2147483647 !important;\r\n  position: relative !important;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}