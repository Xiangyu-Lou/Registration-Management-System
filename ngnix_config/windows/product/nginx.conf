worker_processes  auto;  # 自动检测CPU核心数

# 错误日志配置
error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

# 进程ID文件
pid        logs/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;  # 允许一个worker同时接受多个连接
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # 日志格式定义
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # 访问日志
    access_log  logs/access.log  main;

    # 基本性能优化
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # GZIP压缩
    gzip  on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

    # 增加客户端请求体大小限制为50MB
    client_max_body_size 50M;
    client_body_buffer_size 128k;

    # 文件缓存设置
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # WebSocket支持
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen       80;
        server_name  localhost;  # 生产环境中应替换为实际域名

        # 安全相关的HTTP头
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 前端静态资源 - 假设前端已构建并放在/dist目录
        location / {
            root   F:/Project/Hazardous-waste-management-system/frontend/dist;  # 实际的前端构建文件路径
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;  # 支持前端路由

            # 静态资源缓存设置
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
                expires 30d;
                add_header Cache-Control "public, max-age=2592000";
                access_log off;
            }
        }

        # WebSocket支持
        location /ws {
            proxy_pass http://localhost:8080;  # 替换为实际的WebSocket服务地址
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 20M;
        }

        # 后端API代理
        location /api {
            proxy_pass http://localhost:3000;  # 替换为实际的后端API地址
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 50M;
            
            # 超时设置
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # 上传文件目录
        location /uploads {
            proxy_pass http://localhost:3000;  # 替换为实际的文件服务地址
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 50M;
            
            # 超时设置
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # 错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # HTTPS服务器配置 - 取消注释并配置SSL证书后启用
    # server {
    #     listen       443 ssl http2;
    #     server_name  localhost;  # 替换为实际域名
    #
    #     ssl_certificate      /path/to/cert.pem;  # 替换为实际的SSL证书路径
    #     ssl_certificate_key  /path/to/cert.key;  # 替换为实际的SSL密钥路径
    #
    #     ssl_session_cache    shared:SSL:10m;
    #     ssl_session_timeout  10m;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_prefer_server_ciphers  on;
    #     ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    #
    #     # 其他配置与HTTP服务器相同
    #     # ...
    # }
} 